"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[9687],{49687:function(e,t,i){i.r(t),i.d(t,{default:function(){return p}});var n=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-container",{attrs:{fluid:""}},[n("raw-loader",{attrs:{mytxt:i(60768).Z}}),n("form",{on:{submit:function(t){return t.stopPropagation(),t.preventDefault(),e.onSave.apply(null,arguments)}}},[n("b-table",{ref:"mytable",attrs:{items:e.items,fields:e.fields,"current-page":e.currentPage,"per-page":e.perPage,filter:e.filter,"filter-included-fields":e.filterOn,"sort-by":e.sortBy,"sort-desc":e.sortDesc,"sort-direction":e.sortDirection,stacked:"md","show-empty":"",small:"",fixed:"",outlined:"",bordered:""},on:{"update:sortBy":function(t){e.sortBy=t},"update:sort-by":function(t){e.sortBy=t},"update:sortDesc":function(t){e.sortDesc=t},"update:sort-desc":function(t){e.sortDesc=t},filtered:e.onFiltered},scopedSlots:e._u([{key:"cell()",fn:function(t){var i=t.value,s=t.item,l=t.field.key;return[e.sel[e.pri]!=s[e.pri]?[0!=s[e.pri]?[l==e.pri?[e._v(" "+e._s(i)+" ")]:e._e(),"name"==l?[e._v(" "+e._s(i)+" ")]:e._e(),"solg"==l?[e._v(" "+e._s(i)+" ")]:e._e(),"tien"==l?[e._v(" "+e._s(i)+" ")]:e._e(),"active"==l?[n("b-form-checkbox",{staticClass:"my-checkbox",attrs:{disabled:!0,name:l,value:"true","unchecked-value":"false"},model:{value:s[l],callback:function(t){e.$set(s,l,t)},expression:"item[key]"}})]:e._e()]:e._e()]:e._e(),e.sel[e.pri]==s[e.pri]||0==s[e.pri]?[l==e.pri?[n("span",[e._v(e._s(i))])]:e._e(),"name"==l?[n("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"ko-hop-le":e.errors.has(l)},attrs:{autocomplete:"off",name:l,placeholder:""},model:{value:s[l],callback:function(t){e.$set(s,l,t)},expression:"item[key]"}})]:e._e(),"solg"==l?[n("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:"required|numeric",expression:"'required|numeric'"}],class:{"text-right":!0,"ko-hop-le":e.errors.has(l)},attrs:{autocomplete:"off",name:l,placeholder:""},model:{value:s[l],callback:function(t){e.$set(s,l,t)},expression:"item[key]"}})]:e._e(),"tien"==l?[n("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:"required|decimal",expression:"'required|decimal'"}],class:{"text-right":!0,"ko-hop-le":e.errors.has(l)},attrs:{autocomplete:"off",name:l,placeholder:""},model:{value:s[l],callback:function(t){e.$set(s,l,t)},expression:"item[key]"}})]:e._e(),"active"==l?[n("b-form-checkbox",{staticClass:"my-checkbox",attrs:{name:l,value:"true","unchecked-value":"false"},model:{value:s[l],callback:function(t){e.$set(s,l,t)},expression:"item[key]"}})]:e._e()]:e._e()]}},{key:"cell(cmd)",fn:function(t){return[0==t.item[e.pri]?[n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(i){return e.onSave(t.item)}}},[n("b-icon-hand-thumbs-up")],1),n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(i){return e.OnCancel(t.item)}}},[n("b-icon-file-x")],1)]:[e.sel[e.pri]!=t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",disabled:1==e.isAdded(),size:"sm"},on:{click:function(i){return e.OnEdit(t.item)}}},[n("b-icon-pencil-square")],1):e._e(),e.sel[e.pri]!=t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",disabled:1==e.isAdded(),size:"sm"},on:{click:function(i){return e.OnDel(t.item)}}},[n("b-icon-trash")],1):e._e(),e.sel[e.pri]==t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(i){return e.onSave(t.item)}}},[n("b-icon-hand-thumbs-up")],1):e._e(),e.sel[e.pri]==t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(i){return e.OnCancel(t.item)}}},[n("b-icon-file-x")],1):e._e()]]}},{key:"bottom-row",fn:function(t){return[n("td",{attrs:{colspan:t.columns}},[n("b-row",[n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-form-group",{staticClass:"mb-0",attrs:{label:"Filter","label-for":"filter-input","label-cols-sm":"3","label-align-sm":"right","label-size":"sm"}},[n("b-input-group",{attrs:{size:"sm"}},[n("b-form-input",{attrs:{id:"filter-input",type:"search",placeholder:"Type to Search"},model:{value:e.filter,callback:function(t){e.filter=t},expression:"filter"}}),n("b-input-group-append",[n("b-button",{attrs:{disabled:!e.filter},on:{click:function(t){e.filter=""}}},[e._v("Clear")])],1)],1)],1)],1),n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-form-group",{staticClass:"mb-0",attrs:{label:"Per page","label-for":"per-page-select","label-cols-sm":"6","label-cols-md":"4","label-cols-lg":"3","label-align-sm":"right","label-size":"sm"}},[n("b-form-select",{attrs:{id:"per-page-select",options:e.pageOptions,size:"sm"},model:{value:e.perPage,callback:function(t){e.perPage=t},expression:"perPage"}})],1)],1),n("b-col",{staticClass:"my-1 text-right",attrs:{sm:"6"}},[e._v(" page :"+e._s(e.currentPage)+" / "+e._s(e.getLastPage(e.totalRows))+" of "+e._s(e.totalRows)+" "),n("b-button",{attrs:{disabled:1==e.adding||1==e.isEditing(),size:"sm"},on:{click:e.OnAdd}},[n("b",[e._v("Add")])])],1),n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-pagination",{staticClass:"my-0",attrs:{disabled:1==e.adding||1==e.isEditing(),"total-rows":e.totalRows,"per-page":e.perPage,align:"fill",size:"sm"},model:{value:e.currentPage,callback:function(t){e.currentPage=t},expression:"currentPage"}})],1)],1)],1)]}}])})],1),n("b-modal",{attrs:{id:e.infoModal.id,title:e.infoModal.title,"ok-only":""},on:{hide:e.resetInfoModal}},[n("pre",[e._v(e._s(e.infoModal.content))])])],1)},s=[],l=i(12954),a=i(20144),r=(i(30381),i(19938)),o=i.n(r);a["default"].use(l.ZP,{classes:!0,fieldsBagName:"veeFields"}),a["default"].component("v-select",o());var m={data(){return{items:[],fields:[{key:"id",formatter:(e,t,i)=>{let n=e.toString();return n.length<4?n:n.substring(0,4)+"..."},sortable:!0,thClass:"text-center",tdClass:"text-center align-middle",thStyle:{width:"10%"}},{key:"name",sortable:!0,thClass:"text-center",tdClass:"align-middle",thStyle:{width:"20%"}},{key:"solg",formatter:(e,t,i)=>parseInt(e).toLocaleString(),sortable:!0,thClass:"text-center",tdClass:"align-middle text-right",thStyle:{width:"20%"}},{key:"tien",formatter:(e,t,i)=>parseFloat(e).toLocaleString(),sortable:!0,thClass:"text-center",tdClass:"align-middle text-right",thStyle:{width:"20%"}},{key:"active",sortable:!0,thClass:"text-center",tdClass:"align-middle text-center",thStyle:{width:"20%"}},{key:"cmd",class:"text-center",thClass:"text-center",tdClass:"align-middle",thStyle:{width:"10%"}}],totalRows:1,currentPage:1,perPage:3,pageOptions:[3,5,10,15,{value:100,text:"Show a lot"}],sortBy:"",sortDesc:!1,sortDirection:"asc",filter:null,filterOn:[],infoModal:{id:"info-modal",title:"",content:""},sel:{},pri:"id",adding:!1,lastPage:0}},computed:{sortOptions(){return this.fields.filter((e=>e.sortable)).map((e=>({text:e.label,value:e.key})))}},mounted(){let e=[{id:1,name:"thuc 101",solg:1e4,tien:1200.5,active:!0}];this.items=e,this.totalRows=this.items.length,this.lastPage=this.getLastPage(this.totalRows)},methods:{createId(){let e=0;return this.items.forEach((t=>{t[this.pri]>e&&(e=t[this.pri])})),e+1},onSave(e){this.$validator.validateAll().then((t=>{if(!t)return void this.toast("Không hợp lệ");let i=JSON.parse(JSON.stringify(e));if(0==i[this.pri]){let e=this.items.findIndex((e=>e[this.pri]==i[this.pri]));i[this.pri]=this.createId(),this.$set(this.items,e,i),this.adding=!1,this.$refs.mytable.refresh()}else{let e=this.items.findIndex((e=>e[this.pri]==i[this.pri]));this.$set(this.items,e,i),this.sel={}}}))},OnDel(e){this.delRow(e)},delRow(e){let t=e[this.pri],i=this.items.findIndex((e=>e[this.pri]==t));this.items.splice(i,1),this.totalRows=this.items.length,this.lastPage=this.getLastPage(this.totalRows)},doCancel(e){for(let t in e)e[t]!=this.sel[t]&&(e[t]=this.sel[t])},isAdded(){let e=!1;return this.items.forEach((t=>{0==t[this.pri]&&(e=!0)})),e},OnEdit(e){"{}"==JSON.stringify(this.sel)&&(this.sel=JSON.parse(JSON.stringify(e)))},OnCancel(e){if(0==e[this.pri]){let t=this.items.findIndex((t=>t[this.pri]==e[this.pri]));this.items.splice(t,1),this.adding=!1,this.$refs.mytable.refresh()}else this.doCancel(e),this.sel={}},OnAdd(){let e={id:0,name:"Thức",tien:"",active:!1};this.items.unshift(e),this.adding=!0,this.currentPage=1,this.totalRows=this.items.length,this.$refs.mytable.refresh()},isEditing(){return"{}"!=JSON.stringify(this.sel)},getLastPage(e){let t=this.perPage,i=e%t;return 0==i?e/t:(e-i)/t+1},info(e,t,i){this.infoModal.title=`Row index: ${t}`,this.infoModal.content=JSON.stringify(e,null,2),this.$root.$emit("bv::show::modal",this.infoModal.id,i)},resetInfoModal(){this.infoModal.title="",this.infoModal.content=""},onFiltered(e){this.totalRows=e.length,this.currentPage=1},toast(e,t=null){this.$bvToast.toast(e,{title:"Information",variant:t,solid:!0})}}},d=m,c=i(1001),u=(0,c.Z)(d,n,s,!1,null,null,null),p=u.exports},60768:function(e,t){t["Z"]='<template>\n  <b-container fluid>\n    <raw-loader :mytxt="require(\'!raw-loader!./Basic4.vue\').default"></raw-loader>\n    <form @submit.stop.prevent="onSave">\n      <b-table ref="mytable" :items="items" :fields="fields" :current-page="currentPage" :per-page="perPage"\n        :filter="filter" :filter-included-fields="filterOn" :sort-by.sync="sortBy" :sort-desc.sync="sortDesc"\n        :sort-direction="sortDirection" stacked="md" show-empty small fixed outlined bordered @filtered="onFiltered">\n\n        <template v-slot:cell()="{ value, item, field: { key } }">\n          <template v-if="sel[pri] != item[pri]">\n            <template v-if="item[pri] != 0">\n              <template v-if="key == pri">\n                {{ value }}\n              </template>\n              <template v-if="key == \'name\'">\n                {{ value }}\n              </template>\n              \x3c!-- //{id:1,name:\'thuc 101\',tien: 11111, active: true} --\x3e\n              <template v-if="key == \'solg\'">\n                {{ value }}\n              </template>\n              <template v-if="key == \'tien\'">\n                {{ value }}\n              </template>\n              <template v-if="key == \'active\'">\n                <b-form-checkbox :disabled="true" class="my-checkbox" v-model="item[key]" :name="key" value=true\n                      unchecked-value=false>\n                    </b-form-checkbox>\n              </template>\n\n            </template>\n          </template>\n          <template v-if="(sel[pri] == item[pri] || item[pri] == 0)">\n            <template v-if="key == pri">\n              <span>{{ value }}</span>\n            </template>\n            <template v-if="key == \'name\'">\n              <b-form-input autocomplete="off" v-model="item[key]" :name="key" v-validate="\'required\'" placeholder=""\n                :class="{ \'ko-hop-le\': errors.has(key) }">\n              </b-form-input>\n            </template>\n            <template v-if="key == \'solg\'">\n              <b-form-input autocomplete="off" v-model="item[key]" :name="key" v-validate="\'required|numeric\'" placeholder=""\n                :class="{ \'text-right\':true, \'ko-hop-le\': errors.has(key) }">\n              </b-form-input>\n            </template>\n            <template v-if="key == \'tien\'">\n              <b-form-input autocomplete="off" v-model="item[key]" :name="key" v-validate="\'required|decimal\'" placeholder=""\n                :class="{ \'text-right\':true, \'ko-hop-le\': errors.has(key) }">\n              </b-form-input>\n            </template>\n            <template v-if="key == \'active\'">\n              <b-form-checkbox class="my-checkbox" v-model="item[key]" :name="key" value=true\n                      unchecked-value=false>\n                    </b-form-checkbox>\n            </template>\n          </template>\n        </template>\n\n        <template #cell(cmd)="row">\n          <template v-if="row.item[pri] == 0">\n            <b-button variant="outline" class="mr-1" size="sm" @click="onSave(row.item)">\n              <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\n            </b-button>\n            <b-button variant="outline" class="mr-1" size="sm" @click="OnCancel(row.item)">\n              <b-icon-file-x></b-icon-file-x>\n            </b-button>\n          </template>\n          <template v-else>\n            <b-button variant="outline" :disabled="isAdded() == true" class="mr-1" v-if="sel[pri] != row.item[pri]" size="sm"\n              @click="OnEdit(row.item)">\n              <b-icon-pencil-square></b-icon-pencil-square>\n            </b-button>\n            <b-button variant="outline" :disabled="isAdded() == true" class="mr-1" v-if="sel[pri] != row.item[pri]" size="sm"\n              @click="OnDel(row.item)">\n              <b-icon-trash></b-icon-trash>\n            </b-button>\n            <b-button variant="outline" class="mr-1" v-if="sel[pri] == row.item[pri]" size="sm" @click="onSave(row.item)">\n              <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\n            </b-button>\n            <b-button variant="outline" class="mr-1" v-if="sel[pri] == row.item[pri]" size="sm" @click="OnCancel(row.item)">\n              <b-icon-file-x></b-icon-file-x>\n            </b-button>\n          </template>\n        </template>\n\n        <template #bottom-row="data">\n          <td :colspan="data.columns">\n            <b-row>\n              <b-col sm="6" class="my-1">\n                <b-form-group label="Filter" label-for="filter-input" label-cols-sm="3" label-align-sm="right"\n                  label-size="sm" class="mb-0">\n                  <b-input-group size="sm">\n                    <b-form-input id="filter-input" v-model="filter" type="search"\n                      placeholder="Type to Search"></b-form-input>\n                    <b-input-group-append>\n                      <b-button :disabled="!filter" @click="filter = \'\'">Clear</b-button>\n                    </b-input-group-append>\n                  </b-input-group>\n                </b-form-group>\n              </b-col>\n              <b-col sm="6" class="my-1">\n                <b-form-group label="Per page" label-for="per-page-select" label-cols-sm="6" label-cols-md="4"\n                  label-cols-lg="3" label-align-sm="right" label-size="sm" class="mb-0">\n                  <b-form-select id="per-page-select" v-model="perPage" :options="pageOptions"\n                    size="sm"></b-form-select>\n                </b-form-group>\n              </b-col>\n              <b-col sm="6" class="my-1 text-right">\n                page :{{ currentPage }} / {{ getLastPage(totalRows) }} of {{ totalRows }}\n                <b-button :disabled="adding == true || isEditing() == true" @click="OnAdd"\n                  size="sm"><b>Add</b></b-button>\n              </b-col>\n              <b-col sm="6" class="my-1">\n                <b-pagination :disabled=" adding == true || isEditing() == true " v-model="currentPage" :total-rows="totalRows" :per-page="perPage" align="fill" size="sm"\n                  class="my-0"></b-pagination>\n              </b-col>\n            </b-row>\n\n          </td>\n        </template>\n\n      </b-table>\n    </form>\n    \x3c!-- Info modal --\x3e\n    <b-modal :id="infoModal.id" :title="infoModal.title" ok-only @hide="resetInfoModal">\n      <pre>{{ infoModal.content }}</pre>\n    </b-modal>\n  </b-container>\n</template>\n\n<script>\n\nimport VeeValidate from "vee-validate";\nimport Vue from "vue";\nVue.use(VeeValidate, {\n  classes: true,\n  fieldsBagName: \'veeFields\'\n});\n\nimport moment from "moment";\n\nimport vSelect from "vue-select";\nVue.component("v-select", vSelect);\n//import "vue-select/dist/vue-select.css";\n\nexport default {\n  data() {\n    return {\n      items: [\n      ],\n      fields: [\n        {\n          key: \'id\',\n          formatter: (value, key, item) => {\n            let text = value.toString();\n            return (text.length < 4) ? text : text.substring(0, 4) + "...";\n          },\n          sortable: true,\n          thClass: \'text-center\',\n          tdClass: \'text-center align-middle\',\n          //tdClass: \'align-middle\'\n          thStyle: { width: "10%" },\n        },\n        //{id:1,name:\'thuc 101\',tien: 11111, active: true}\n        { key: \'name\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "20%" }},\n        { key: \'solg\', \n          formatter: (value, key, item) => {return parseInt(value).toLocaleString();},\n          sortable: true, thClass: \'text-center\', tdClass: \'align-middle text-right\', thStyle: { width: "20%" }},\n        { key: \'tien\',\n          formatter: (value, key, item) => {return parseFloat(value).toLocaleString();},\n          sortable: true, thClass: \'text-center\', tdClass: \'align-middle text-right\', thStyle: { width: "20%" }},\n        { key: \'active\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle text-center\', thStyle: { width: "20%" }},\n        {\n          key: \'cmd\',\n          class: \'text-center\',\n          thClass: \'text-center\',\n          tdClass: \'align-middle\',\n          thStyle: { width: "10%" }\n        }\n      ],\n      totalRows: 1,\n      currentPage: 1,\n      perPage: 3,\n      pageOptions: [3,5, 10, 15, { value: 100, text: "Show a lot" }],\n      sortBy: \'\',\n      sortDesc: false,\n      sortDirection: \'asc\',\n      filter: null,\n      filterOn: [],\n      infoModal: {\n        id: \'info-modal\',\n        title: \'\',\n        content: \'\'\n      },\n\n      sel: {},\n      pri: \'id\',\n      adding: false,\n      lastPage:0,\n\n    }\n  },\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.fields\n        .filter(f => f.sortable)\n        .map(f => {\n          return { text: f.label, value: f.key }\n        })\n    }\n  },\n  mounted() {\n    let items = [\n      {id:1,name:\'thuc 101\',solg:10000,tien: 1200.5, active: true}\n    ];\n    this.items = items;\n    this.totalRows = this.items.length;\n    this.lastPage=this.getLastPage(this.totalRows);\n  },\n  methods: {\n    createId(){\n      let max=0;\n      this.items.forEach(x=>{\n        if(x[this.pri] > max){\n          max=x[this.pri];\n        }\n      })\n      return max+1;\n    },\n    onSave(item) {\n      this.$validator.validateAll().then((result) => {\n        if (!result) {\n          this.toast("Không hợp lệ");\n          return;\n        }\n        let r = JSON.parse(JSON.stringify(item));\n        if(r[this.pri]==0){\n          let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\n          r[this.pri] = this.createId();//new Date().getTime();\n          this.$set(this.items, index, r);\n          this.adding=false;\n          this.$refs.mytable.refresh();\n        }else{\n          let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\n          this.$set(this.items, index, r);\n          this.sel={};\n        }\n      });\n    },\n    OnDel(item) {\n      this.delRow(item);\n    },\n    delRow(item) {\n      let id = item[this.pri];\n      let index = this.items.findIndex(x => x[this.pri] == id);\n      this.items.splice(index, 1);\n      this.totalRows = this.items.length;\n      this.lastPage = this.getLastPage(this.totalRows);\n    },\n    doCancel(item) {\n      for (let key in item) {\n        if (item[key] != this.sel[key]) {\n          item[key] = this.sel[key]\n        }\n      }\n    },\n    isAdded() {\n      let kq = false;\n      this.items.forEach(x => {\n        if (x[this.pri] == 0) kq = true;\n      })\n      return kq;\n    },\n    OnEdit(item) {\n      if (JSON.stringify(this.sel) != "{}") return;\n      this.sel = JSON.parse(JSON.stringify(item));\n    },\n    OnCancel(item) {\n      if (item[this.pri] == 0) {\n        let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\n        this.items.splice(index, 1);\n        this.adding = false;\n        this.$refs.mytable.refresh();\n      } else {\n        this.doCancel(item);\n        this.sel = {};\n      }\n    },\n    OnAdd() {\n      // {id:1,name:\'thuc 101\',tien: 11111, active: true}\n      let r = {\n        id: 0,\n        name: \'Thức\',\n        tien:"",\n        active:false\n      }\n      this.items.unshift(r);\n      this.adding = true;\n      this.currentPage=1;\n      this.totalRows=this.items.length;\n      this.$refs.mytable.refresh();\n    },\n    isEditing() {\n      return JSON.stringify(this.sel) != "{}"\n    },\n    getLastPage(count) {\n      let pageSize = this.perPage;//this.tabulator.getPageSize();\n      let du = count % pageSize;\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\n    },\n    info(item, index, button) {\n      this.infoModal.title = `Row index: ${index}`\n      this.infoModal.content = JSON.stringify(item, null, 2)\n      this.$root.$emit(\'bv::show::modal\', this.infoModal.id, button)\n    },\n    resetInfoModal() {\n      this.infoModal.title = \'\'\n      this.infoModal.content = \'\'\n    },\n    onFiltered(filteredItems) {\n      this.totalRows = filteredItems.length\n      this.currentPage = 1\n    },\n    toast(msg, variant = null) {\n      this.$bvToast.toast(msg, {\n        title: `Information`,\n        variant: variant,\n        solid: true,\n      });\n    },\n\n  }\n}\n<\/script>\n<style lang="scss">\n@import "@/assets/scss/myStyle.scss";\n</style>'}}]);
//# sourceMappingURL=9687.3ca4aaf0.js.map