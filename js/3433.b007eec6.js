"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[3433],{83433:function(e,t,r){r.r(t),r.d(t,{default:function(){return f}});var n=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("raw-loader",{attrs:{mytxt:r(3410).Z}}),e._v(" "+e._s(e.msg)),n("br"),e._v(" rowCount : "+e._s(e.rowCount)+" "),n("br"),n("div",{staticClass:"mb-1"},[n("button",{staticClass:"mr-1",attrs:{disabled:""!=e.cmd||0!=Object.keys(e.sel).length},on:{click:e.onAdd}},[e._v("Add")]),n("button",{staticClass:"mr-1",on:{click:e.ReLoadData}},[e._v("ReLoad Data")])]),n("div",{ref:"table"}),n("b-modal",{ref:"my-modal2",attrs:{id:"modal-1",size:"sm","no-close-on-backdrop":!0,"hide-footer":"",title:"BootstrapVue"}},[n("form",{on:{submit:function(t){return t.stopPropagation(),t.preventDefault(),e.onSaveModal.apply(null,arguments)}}},[n("div",[n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[e._v("Id")]),n("div",{staticClass:"col-sm-8"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.r.id,expression:"r.id"}],staticClass:"form-control",attrs:{type:"text",disabled:""},domProps:{value:e.r.id},on:{input:function(t){t.target.composing||e.$set(e.r,"id",t.target.value)}}})])]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[e._v(" Name ")]),n("div",{staticClass:"col-sm-8"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.r.name,expression:"r.name"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":e.errors.has("name")},attrs:{type:"text",name:"name",autocomplete:"off"},domProps:{value:e.r.name},on:{input:function(t){t.target.composing||e.$set(e.r,"name",t.target.value)}}})])]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[e._v(" Ngay ")]),n("div",{staticClass:"col-sm-8"},[n("b-form-datepicker",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],staticClass:"mb-2",attrs:{name:"ngay","date-format-options":{year:"numeric",month:"numeric",day:"numeric"},locale:"vi"},model:{value:e.r.ngay,callback:function(t){e.$set(e.r,"ngay",t)},expression:"r.ngay"}})],1)]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[e._v(" Act ")]),n("div",{staticClass:"col-sm-8"},[n("b-form-checkbox",{attrs:{name:"checkbox-1",value:"true","unchecked-value":"false"},on:{change:e.ChangeAct},model:{value:e.r.act,callback:function(t){e.$set(e.r,"act",t)},expression:"r.act"}},[e._v(" Active ")])],1)]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[e._v(" Thành phố "+e._s(e.errors.has("tp"))+" ")]),n("div",{staticClass:"col-sm-8"},[n("v-select",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{danger:e.errors.has("tp")},attrs:{name:"tp",reduce:function(e){return e.id},options:e.tps,"has-error":e.errors.has("tp")},model:{value:e.r.tp,callback:function(t){e.$set(e.r,"tp",t)},expression:"r.tp"}})],1)]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[e._v(" Quyền ")]),n("div",{staticClass:"col-sm-8"},[n("v-select",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{danger:e.errors.has("quyen")},attrs:{multiple:"",name:"quyen",options:["Admin","User","Editor"]},model:{value:e.r.quyen,callback:function(t){e.$set(e.r,"quyen",t)},expression:"r.quyen"}})],1)])]),n("div",{staticClass:"float-right"},[n("button",{staticClass:"btn btn-primary mr-1 btn-sm",attrs:{type:"submit"}},[e._v("Save")]),n("button",{staticClass:"btn btn-sm",attrs:{type:"button"},on:{click:function(t){return e.hideModal()}}},[e._v("Cancel")])])])])],1)},a=[],l=r(60911),i=r(17529),o=r(12954),s=r(20144),d=r(19938),c=r.n(d),u=(r(30381),r(9669)),h=r.n(u);s["default"].use(o.ZP,{classes:!0}),s["default"].component("v-select",c());var g={data:function(){return{tabulator:null,tableData:[],msg:"hello world",count:1,rowCount:0,r:{id:0,ten:"thuc 101",ngay:new Date},rec:{id:0,Name:"thuc 101"},sel:{},cmd:"",tps:[{label:"Huế",id:"HUE"},{label:"Sài gòn",id:"SG"},{label:"Đà nẵng",id:"DN"},{label:"Quảng ngãi",id:"QN"}],mons:[{id:1,name:"Gạo"},{id:2,name:"Đường"},{id:3,name:"Muối"},{id:4,name:"Bột ngọt"},{id:5,name:"Nước ngọt"},{id:6,name:"Cà phê"},{id:7,name:"Bia"},{id:8,name:"Nước mía"}]}},mounted(){document.getElementById("myScript")?this.onReady():i.Z.loadScript("myScript","/js/jquery.min.js").then((()=>{i.Z.loadScript("","/js/bootstrap.js").then((()=>{i.Z.loadScript("","/js/select2.min.js").then((()=>{i.Z.loadScript("","/js/bootstrap-datepicker.js").then((()=>{i.Z.loadScript("","/js/moment.js").then((()=>{i.Z.loadCss("/css/select2.min.css").then((()=>{i.Z.loadCss("/css/bootstrap-datepicker.css").then((()=>{this.onReady()}))}))}))}))}))}))}))},methods:{onReady(){this.loadTabulator()},loadTabulator(){var e=this,t=function(t,r,n){n((function(){t.getRow().getIndex();$(t.getElement()).find("#testedit").on("click",t,e.onTestEdit),$(t.getElement()).find("#doAdd").on("click",t.getRow(),e.onSave),$(t.getElement()).find("#cancelAdd").on("click",t.getRow(),e.onCancelAdd),$(t.getElement()).find("#save").on("click",t.getRow(),e.onSave),$(t.getElement()).find("#cancel").on("click",t.getRow(),e.onCancel),$(t.getElement()).find("#edit").on("click",t.getRow(),e.onEdit),$(t.getElement()).find("#del").on("click",t.getRow(),e.onDel)}));let a=$("<div>"),l=$("<button>",{text:"Add",class:"mr-1"}).attr("id","doAdd").hide(),i=$("<button>",{text:"Cancel",class:"mr-1"}).attr("id","cancelAdd").hide(),o=$("<button>",{text:"Save",class:"mr-1"}).attr("id","save").hide(),s=$("<button>",{text:"Cancel",class:"mr-1"}).attr("id","cancel").hide(),d=$("<button>",{text:"Edit",class:"mr-1"}).attr("id","edit"),c=$("<button>",{text:"Del",class:"mr-1"}).attr("id","del");a.append(l),a.append(i),a.append(o),a.append(s),a.append(d),a.append(c);let u=t.getRow().getIndex();return""==e.cmd?e.sel.id==t.getRow().getData().id?(o.show(),s.show(),d.hide(),c.hide()):1==$.isEmptyObject(e.sel)?(o.hide(),s.hide(),0==u&&(d.hide(),c.hide(),l.show(),i.show())):(d.attr("disabled","disabled"),c.attr("disabled","disabled")):0==u?(d.hide(),c.hide(),l.show(),i.show()):(d.attr("disabled","disabled"),c.attr("disabled","disabled")),a[0]},r=function(t){let r=t.getRow(),n=r.getIndex();r.getElement();return e.sel.id==t.getRow().getData().id||0==n};this.tabulator=new l.Ae(this.$refs.table,{pagination:!0,paginationMode:"remote",ajaxSorting:!0,ajaxURL:"/api/Ban/GetPage",ajaxFiltering:!0,filterMode:"remote",sortMode:"remote",ajaxParams:{token:"ABC123"},paginationSize:2,paginationInitialPage:1,paginationSizeSelector:[5,10,20,30,50],height:$(window).innerHeight()-400,layout:"fitData",debugInvalidOptions:!1,ajaxRequesting:function(t,r){e.msg=`${t} - `+JSON.stringify(r)},ajaxResponse:function(t,r,n){e.rowCount=n.rowCount;let a=[];n.data.forEach((e=>{a.push({id:e.Id,Name:e.Name})}));let l={};l.last_page=n.last_page,l.rowCount=n.rowCount;let i=[];return n.data.forEach((e=>{let t={};Object.keys(e).forEach((r=>{let n=r;"Id"==n&&(n="id"),t[n]=e[r]})),i.push(t)})),l.data=i,l},rowFormatter:function(t){e.sel.id,t.getData().id},index:"id",columns:[{title:"STT",formatter:"rownum",headerHozAlign:"center",hozAlign:"center",vertAlign:"middle"},{title:"Cmd",headerHozAlign:"center",hozAlign:"center",vertAlign:"middle",headerSort:!1,width:100,formatter:t},{title:"Id",field:"id",width:50,vertAlign:"middle",headerFilter:!0,hozAlign:"center"},{title:"Name",field:"Name",width:120,vertAlign:"middle",headerFilter:!0,editor:"input",validator:["required"],editable:r}]}),this.tabulator.on("dataLoaded",(function(t){e.onLoad()})),this.tabulator.on("pageLoaded",(function(e){})),this.tabulator.on("dataChanged",(function(e){})),this.tabulator.on("rowClick",(function(e,t){})),this.tabulator.on("rowSelectionChanged",(function(e,t){})),this.tabulator.on("rowSelected",(function(e){e.getIndex()})),this.tabulator.on("cellEditing",(function(e){let t=e.getRow();t.getData(),t.getIndex()})),this.tabulator.on("cellEditCancelled",(function(e){})),this.tabulator.on("cellEdited",(function(e){if("solg"!=e.getField())return;let t=e.getRow(),r=(t.getData(),t.getCell("solg").getValue()),n=1e3*r;t.getIndex();t.getCell("tien").setValue(n)})),this.tabulator.on("validationFailed",(function(e,t,r){e.getField()}))},ReLoadData(){this.tabulatorClear();let e=JSON.parse(JSON.stringify(this.rec));e.id=this.count++,this.tableData.push(e),this.count++,this.setPage(1)},onLoad(){},ChangeAct(){let e="true"==this.r.act;this.r.act=e},rowValidate(e){let t=!0;for(var r=e.getCells(),n=0;n<r.length;n++)1!=r[n].isValid()&&(t=!1);return t},onSave(e){e.preventDefault();let t=e.data;t.getCells();let r=t.getIndex();this.tableData.findIndex((e=>e.id==r));if(0==this.rowValidate(e.data))return void this.toast("không hợp lệ!!!");let n=JSON.parse(JSON.stringify(t.getData()));if(0==n.id){let t=this.getLastPage(this.rowCount+1);this.Save(n).then((r=>{this.onCancelAdd(e),this.setPage(t)}))}else this.Save(n).then((e=>{this.tabulator.deselectRow(this.sel.id),this.sel={},this.tabulator.redraw(!0)}))},onSaveModal(){this.$validator.validateAll().then((e=>{if(!e)return void this.toast("Không hợp lệ");let t=JSON.parse(JSON.stringify(this.r));0==t.id?(t.id=this.count,this.tabulatorAdd(t),this.count++,this.setPage(1)):this.tabulatorUpdate(t),this.hideModal()}))},onAdd(){this.cmd="add";let e=JSON.parse(JSON.stringify(this.rec));this.tabulator.addRow(e,!0,0),this.tabulator.selectRow(0),$(".tabulator-footer").hide(),this.tabulator.redraw(!0)},onCancelAdd(e){e.preventDefault();let t=e.data;t.getCells();t.getIndex();this.cmd="",t.delete(),$(".tabulator-footer").show(),this.tabulator.redraw(!0)},onCancel(e){e.preventDefault();let t=e.data;t.getCells();let r=t.getIndex(),n=(this.tableData.findIndex((e=>e.id==r)),$(t.getElement()),JSON.parse(JSON.stringify(this.sel)));this.tabulatorUpdate(n),this.sel={},this.tabulator.deselectRow(this.sel.id),this.tabulator.redraw(!0)},onEdit(e){e.preventDefault();let t=e.data;t.getCells();let r=t.getIndex();this.tableData.findIndex((e=>e.id==r));this.sel=JSON.parse(JSON.stringify(t.getData()));$(t.getElement());this.tabulator.selectRow(r),this.tabulator.redraw(!0)},onDel(e){e.preventDefault();let t=e.data,r=t.getIndex(),n=this.getLastPage(this.rowCount-1);this.Del(r).then((e=>{"ok"==e.data.kq&&(t.delete(),this.setPage(n)),this.toast(e.data.msg)}))},getPageMax(){return this.tabulator.getPageMax()},getLastPage(e){let t=this.tabulator.getPageSize(),r=e%t;return 0==r?e/t:(e-r)/t+1},getPageSize(){return this.tabulator.getPageSize()},getPage(){return this.tabulator.getPage()},setPage(e){this.tabulator.setPage(e)},getData(){return this.tabulator.getData()},tabulatorLoadData(e){e.forEach((e=>{this.tableData.push(e)}))},tabulatorClear(){let e=0;while(e<this.tableData.length)this.tableData.splice(e,1)},tabulatorAdd(e){this.tableData.unshift(e)},tabulatorDel(e){let t=this.tableData.findIndex((t=>t.id==e));this.tableData.splice(t,1)},tabulatorUpdate(e){let t=this.tableData.findIndex((t=>t.id==e.id));this.tableData.splice(t,1,e)},tabulatorGetRow(e){},toast(e,t=null){this.$bvToast.toast(e,{title:"Information",variant:t,solid:!0})},showModal(){this.$refs["my-modal2"].show()},hideModal(){this.$refs["my-modal2"].hide()},async Save(e){return await h().post("/api/Ban/Save",e).catch((e=>{console.log(e)}))},async Del(e){return await h().get(`/api/Ban/Delete?id=${e}`).catch((e=>{console.log(e)}))},async getById(e){return await h().get(`/api/Ban/GetById?id=${e}`).catch((e=>{console.log(e)}))}}},m=g,b=r(1001),p=(0,b.Z)(m,n,a,!1,null,null,null),f=p.exports},3410:function(e,t){t["Z"]='<template>\r\n    <div>\r\n        <raw-loader :mytxt="require(\'!raw-loader!./Tabulator2Ajax.vue\').default"></raw-loader>\r\n        {{ msg }}<br>\r\n        \x3c!-- {{myvalid}}<br> --\x3e\r\n        \x3c!-- rowedit : {{rowedit}}<br>   --\x3e\r\n        \x3c!-- sel : {{ sel }}<br>\r\n        {{ tableData }}<br> --\x3e\r\n        rowCount : {{ rowCount }} <br>\r\n        <div class="mb-1">\r\n            <button class="mr-1" :disabled="cmd != \'\' || Object.keys(sel).length != 0" @click="onAdd">Add</button>\r\n            <button class="mr-1" @click="ReLoadData">ReLoad Data</button>\r\n        </div>\r\n        \x3c!-- {{tableData}} --\x3e\r\n        <div ref="table"></div>\r\n        <b-modal ref="my-modal2" id="modal-1" size="sm" :no-close-on-backdrop="true" hide-footer title="BootstrapVue">\r\n            <form @submit.stop.prevent="onSaveModal">\r\n                <div>\r\n                    \x3c!-- <pre>{{r}}</pre> --\x3e\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">Id</label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" class="form-control" disabled v-model="r.id" />\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Name\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" v-model="r.name" name="name" v-validate="\'required\'" :class="{\r\n                                \'form-control\': true,\r\n                                \'ko-hop-le\': errors.has(\'name\'),\r\n                            }" autocomplete="off" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Ngay\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <b-form-datepicker v-model="r.ngay" name="ngay" v-validate="\'required\'"\r\n                                :date-format-options="{ year: \'numeric\', month: \'numeric\', day: \'numeric\' }" locale="vi"\r\n                                class="mb-2">\r\n                            </b-form-datepicker>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Act\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <b-form-checkbox v-model="r.act" name="checkbox-1" value=true unchecked-value=false\r\n                                @change="ChangeAct">\r\n                                Active\r\n                            </b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Thành phố {{ errors.has(\'tp\') }}\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <v-select v-model="r.tp" name="tp" v-validate="\'required\'" :reduce="(option) => option.id"\r\n                                :options="tps" :has-error="errors.has(\'tp\')" :class="{ danger: errors.has(\'tp\') }" />\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Quyền\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <v-select multiple name="quyen" v-model="r.quyen" :options="[\'Admin\', \'User\', \'Editor\']"\r\n                                v-validate="\'required\'" :class="{ danger: errors.has(\'quyen\') }" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class="float-right">\r\n                    <button type="submit" class="btn btn-primary mr-1 btn-sm">Save</button>\r\n                    <button type="button" class="btn btn-sm" @click="hideModal()">Cancel</button>\r\n                </div>\r\n            </form>\r\n        </b-modal>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { TabulatorFull as Tabulator } from \'tabulator-tables\'; //import Tabulator library\r\n//import $ from "jquery"\r\nimport MyLoader from "@/func/MyLoad.js";\r\n\r\nimport VeeValidate from "vee-validate";\r\nimport Vue from "vue";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n});\r\n\r\nimport vSelect from "vue-select";\r\nVue.component("v-select", vSelect);\r\nimport "vue-select/dist/vue-select.css";\r\nimport moment from \'moment\';\r\nimport axios from \'axios\';\r\n\r\nexport default {\r\n    data: function () {\r\n        return {\r\n            tabulator: null, //variable to hold your table\r\n            tableData: [], //data for table to display\r\n            msg: "hello world",\r\n            count: 1,\r\n            rowCount: 0,\r\n            r: {\r\n                id: 0,\r\n                ten: \'thuc 101\',\r\n                ngay: new Date\r\n            },\r\n            rec: {\r\n                id: 0,\r\n                Name: "thuc 101",\r\n            },\r\n            sel: {},//lưu giá trị cũ\r\n            cmd: "",//for add\r\n\r\n\r\n\r\n\r\n\r\n\r\n            tps: [\r\n                { label: \'Huế\', id: \'HUE\' },\r\n                { label: \'Sài gòn\', id: \'SG\' },\r\n                { label: \'Đà nẵng\', id: \'DN\' },\r\n                { label: \'Quảng ngãi\', id: \'QN\' },\r\n            ],\r\n            mons: [\r\n                { id: 1, name: \'Gạo\' },\r\n                { id: 2, name: \'Đường\' },\r\n                { id: 3, name: \'Muối\' },\r\n                { id: 4, name: \'Bột ngọt\' },\r\n                { id: 5, name: \'Nước ngọt\' },\r\n                { id: 6, name: \'Cà phê\' },\r\n                { id: 7, name: \'Bia\' },\r\n                { id: 8, name: \'Nước mía\' }\r\n            ]\r\n        }\r\n    },\r\n    mounted() {\r\n        if (!document.getElementById("myScript")) {\r\n            MyLoader.loadScript("myScript", "/js/jquery.min.js").then(() => {\r\n                MyLoader.loadScript("", "/js/bootstrap.js").then(() => {\r\n                    MyLoader.loadScript("", "/js/select2.min.js").then(() => {\r\n                        MyLoader.loadScript("", "/js/bootstrap-datepicker.js").then(() => {\r\n                            MyLoader.loadScript("", "/js/moment.js").then(() => {\r\n                                MyLoader.loadCss("/css/select2.min.css").then(() => {\r\n                                    MyLoader.loadCss("/css/bootstrap-datepicker.css").then(() => {\r\n                                        this.onReady();\r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            this.onReady();\r\n        }\r\n    },\r\n    methods: {\r\n        onReady() {\r\n            this.loadTabulator();\r\n        },\r\n        loadTabulator() {\r\n            var that = this;\r\n\r\n            var tplFormatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    /*\r\n                    let $input = $(cell.getElement()).find("input");\r\n                    $input.css({\r\n                        "padding": "4px",\r\n                        "width": "100%",\r\n                        "box-sizing": "border-box",\r\n                        "font-family": "verdana",\r\n                        "font-size": "9px"\r\n                    })\r\n                    */\r\n                });\r\n                var $el = $("<input class=\'form-control form-control-sm\' />");\r\n                $el.css({\r\n                    "padding": "4px",\r\n                    "width": "100%",\r\n                    "box-sizing": "border-box",\r\n                    "font-family": "verdana",\r\n                    "font-size": "9px"\r\n                })\r\n                $el.val(cell.getValue());\r\n                //let editable = (that.sel.id == cell.getRow().getData().id);\r\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                if (editable == false) {\r\n                    $el.attr(\'disabled\', \'disabled\');\r\n                }\r\n                $el.on("change", function (e) {\r\n                    cell.setValue($(this).val());\r\n                });\r\n                $el.on("blur", function (e) {\r\n                    cell.setValue($(this).val());\r\n                });\r\n                return $el[0];\r\n            };\r\n            var cmdFormatter = function (cell, formatterParams, onRendered) {\r\n\r\n                onRendered(function () {\r\n                    let id = cell.getRow().getIndex();\r\n                    $(cell.getElement()).find("#testedit").on("click", cell, that.onTestEdit);\r\n                    //$(cell.getElement()).find("#doAdd").on("click", cell.getRow(), that.onDoAdd);\r\n                    $(cell.getElement()).find("#doAdd").on("click", cell.getRow(), that.onSave);\r\n                    $(cell.getElement()).find("#cancelAdd").on("click", cell.getRow(), that.onCancelAdd);\r\n                    $(cell.getElement()).find("#save").on("click", cell.getRow(), that.onSave);\r\n                    $(cell.getElement()).find("#cancel").on("click", cell.getRow(), that.onCancel);\r\n                    $(cell.getElement()).find("#edit").on("click", cell.getRow(), that.onEdit);\r\n                    $(cell.getElement()).find("#del").on("click", cell.getRow(), that.onDel);\r\n                });\r\n\r\n                let $div = $("<div>");\r\n                let $btnDoAdd = $("<button>", { text: "Add", class: "mr-1" }).attr("id", "doAdd").hide();\r\n                let $btnCancelAdd = $("<button>", { text: "Cancel", class: "mr-1" }).attr("id", "cancelAdd").hide();\r\n                let $btnSave = $("<button>", { text: "Save", class: "mr-1" }).attr("id", "save").hide();\r\n                let $btnCancel = $("<button>", { text: "Cancel", class: "mr-1" }).attr("id", "cancel").hide();\r\n                let $btnEdit = $("<button>", { text: "Edit", class: "mr-1" }).attr("id", "edit");\r\n                let $btnDel = $("<button>", { text: "Del", class: "mr-1" }).attr("id", "del");\r\n                $div.append($btnDoAdd);\r\n                $div.append($btnCancelAdd);\r\n                $div.append($btnSave);\r\n                $div.append($btnCancel);\r\n                $div.append($btnEdit);\r\n                $div.append($btnDel);\r\n                let id = cell.getRow().getIndex();\r\n                //alert(that.cmd);\r\n                if (that.cmd == "") {\r\n                    if (that.sel.id == cell.getRow().getData().id) {\r\n                        $btnSave.show();\r\n                        $btnCancel.show();\r\n                        $btnEdit.hide();\r\n                        $btnDel.hide();\r\n                    } else {\r\n                        if ($.isEmptyObject(that.sel) == true) {\r\n                            $btnSave.hide();\r\n                            $btnCancel.hide();\r\n                            if (id == 0) {\r\n                                $btnEdit.hide();\r\n                                $btnDel.hide();\r\n                                $btnDoAdd.show();\r\n                                $btnCancelAdd.show();\r\n                            } else {\r\n                                //alert(that.cmd);\r\n                                //$btnEdit.show();\r\n                                // $btnEdit.attr(\'disabled\', \'disabled\');//.hide();\r\n                                // $btnDel.attr(\'disabled\', \'disabled\');//.hide();\r\n                            }\r\n                        } else {\r\n                            $btnEdit.attr(\'disabled\', \'disabled\');//.hide();\r\n                            $btnDel.attr(\'disabled\', \'disabled\');//.hide();\r\n                        }\r\n                    }\r\n                } else {//that.cmd!=""\r\n                    if (id == 0) {\r\n                        $btnEdit.hide();\r\n                        $btnDel.hide();\r\n                        $btnDoAdd.show();\r\n                        $btnCancelAdd.show();\r\n                    } else {\r\n                        $btnEdit.attr(\'disabled\', \'disabled\');//.hide();\r\n                        $btnDel.attr(\'disabled\', \'disabled\');//.hide();\r\n                    }\r\n                }\r\n                return $div[0];\r\n            };\r\n            var datePickerFormatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    let $cell = $(cell.getElement()).find("input");\r\n                    let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                    if (editable == false) {\r\n                        $(cell.getElement()).find("input:first").prop("disabled", true);\r\n                        $(cell.getElement()).find("input:first").css("background-color", "#e9ecef");\r\n                    } else {\r\n                        $(cell.getElement()).find("input:first").css("background-color", "white");\r\n                    }\r\n                    $cell.css({\r\n                        "padding": "4px",\r\n                        "width": "100%",\r\n                        "box-sizing": "border-box",\r\n                        "height": "100%",\r\n                        //"border":"1px solid blue",\r\n                        //"background-color":"yellow",\r\n                        //text-align: center;\r\n                        "text-align": "center"\r\n                    })\r\n                    $cell.prop("readonly", true);\r\n                    $cell.datepicker({\r\n                        format: "dd/mm/yyyy",\r\n                        todayBtn: true,\r\n                        autoclose: true,\r\n                        todayHighlight: true,\r\n                    });\r\n                    let value = moment(cell.getValue(), "DD/MM/YYYY").format("DD/MM/YYYY");\r\n                    $cell.datepicker("setDate", value);\r\n                    $cell.datepicker().on("changeDate", function () {\r\n                        let d = $(this).datepicker("getDate");\r\n                        cell.setValue(moment(d).format("DD/MM/YYYY"));\r\n                    });\r\n                });\r\n                var $el = $("<input class=\'form-control\' />");\r\n                return $el[0];\r\n            };\r\n            var select2Formatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    let $myCell = $(cell.getElement());\r\n                    let $cell = $(cell.getElement()).find("select");\r\n                    $cell.css({\r\n                        "padding": "4px",\r\n                        "width": "100%",\r\n                        "box-sizing": "border-box",\r\n                        "font-family": "",\r\n                    })\r\n                    $cell.select2({\r\n                        placeholder: \'\',\r\n                        width: "100%",\r\n                        allowClear: true,\r\n                    });\r\n                    $cell.focus();\r\n                    $cell.val(cell.getValue()).trigger("change.select2");\r\n                    $(cell.getElement())\r\n                        .find("select")\r\n                        .on("change", function () {\r\n                            cell.setValue($(this).val());\r\n                        });\r\n                    $myCell\r\n                        .find(".select2-container--default")\r\n                        .css("border", "0px solid blue");\r\n                    $myCell\r\n                        .find(".select2-selection--single")\r\n                        .css("border", "0px solid blue");\r\n                });\r\n                var $el = $("<select class=\'tabu\' >");\r\n                //let editable = (that.sel.id == cell.getRow().getData().id);\r\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                if (editable == false) {\r\n                    $el.attr(\'disabled\', \'disabled\');\r\n                } else {\r\n                }\r\n                formatterParams.forEach((el) => {\r\n                    let $option = $("<option>").attr("value", el.id).text(el.text);\r\n                    $el.append($option);\r\n                });\r\n                return $el[0];\r\n            };\r\n            var roweditCheck = function (cell) {\r\n                let row = cell.getRow();\r\n                let id = row.getIndex();\r\n                let $cell = row.getElement();\r\n                if (that.sel.id == cell.getRow().getData().id) {\r\n                    return true;\r\n                } else {\r\n                    if (id == 0) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n            }\r\n            this.tabulator = new Tabulator(this.$refs.table, {\r\n\r\n                pagination: true, //enable pagination\r\n                paginationMode: "remote", //enable remote pagination\r\n                ajaxSorting: true,\r\n                ajaxURL: "/api/Ban/GetPage", //set url for ajax request\r\n                ajaxFiltering: true,\r\n                filterMode: "remote", //send filter data to the server instead of processing locally\r\n                sortMode: "remote",\r\n                ajaxParams: { token: "ABC123" }, //set any standard parameters to pass with the request\r\n                paginationSize: 2, //optional parameter to request a certain number of rows per page\r\n                paginationInitialPage: 1, //optional parameter to set the initial page to load    \r\n                paginationSizeSelector: [5, 10, 20, 30, 50],\r\n                height: $(window).innerHeight() - 400,//\'200px\',//$(window).innerHeight()\r\n                layout: "fitData",//layout:"fitDataFill",//layout:"fitColumns",\r\n                debugInvalidOptions: false,\r\n\r\n                ajaxRequesting: function (url, params) {\r\n                    that.msg = `${url} - ` + JSON.stringify(params);\r\n                },\r\n                ajaxResponse: function (url, params, response) {\r\n                    // alert(JSON.stringify(response));\r\n                    //{"last_page":3,"rowCount":5,"data":[{"Id":1284,"Name":"Thức"},{"Id":1286,"Name":"Trí"}]}    \r\n                    that.rowCount = response.rowCount;\r\n                    let data = [];\r\n                    response.data.forEach(x => {\r\n                        data.push({\r\n                            id: x.Id,\r\n                            Name: x.Name\r\n                        })\r\n                    })\r\n                    let ar = {};\r\n                    ar.last_page = response.last_page;\r\n                    ar.rowCount = response.rowCount;\r\n                    //ar.data = data;\r\n\r\n                    let data2 = [];\r\n                    response.data.forEach(obj => {\r\n                        let x = {};\r\n                        Object.keys(obj).forEach(key => {\r\n                            //console.log(key, obj[key]);\r\n                            let key2 = key;\r\n                            if (key2 == "Id") {\r\n                                key2 = "id"\r\n                            }\r\n                            x[key2] = obj[key];\r\n                        });\r\n                        data2.push(x);\r\n                    })\r\n                    ar.data = data2;\r\n                    return ar;//.data; //pass the data array into Tabulator\r\n                },\r\n\r\n                rowFormatter: function (row) {\r\n                    let chk = that.sel.id == row.getData().id;\r\n                },\r\n                index: "id",\r\n                //autoColumns:true,\r\n                columns: [\r\n                    {\r\n                        title: "STT",\r\n                        formatter: "rownum",\r\n                        headerHozAlign: "center",\r\n                        hozAlign: "center",\r\n                        vertAlign: "middle",//"bottom",\r\n                    },\r\n                    {\r\n                        title: "Cmd",\r\n                        headerHozAlign: "center",\r\n                        hozAlign: "center",\r\n                        vertAlign: "middle",//"bottom",\r\n                        headerSort: false,\r\n                        width: 100,\r\n                        formatter: cmdFormatter,\r\n                    },\r\n                    {\r\n                        title: "Id",\r\n                        field: "id",\r\n                        width: 50,\r\n                        vertAlign: "middle",//"bottom",\r\n                        headerFilter: true,\r\n                        hozAlign: "center",\r\n                    },\r\n                    {\r\n                        title: "Name",\r\n                        field: "Name",\r\n                        width: 120,\r\n                        vertAlign: "middle",//"bottom",\r\n                        headerFilter: true,\r\n                        editor: "input",\r\n                        validator: ["required"], //"required"  \r\n                        editable: roweditCheck,//editCheck,\r\n                    },\r\n\r\n                ], //define table columns\r\n            });\r\n            this.tabulator.on("dataLoaded", function (data) {\r\n                that.onLoad();\r\n            });\r\n            this.tabulator.on("pageLoaded", function (pageno) {\r\n            });\r\n            this.tabulator.on("dataChanged", function (data) {\r\n            });\r\n            this.tabulator.on("rowClick", function (e, row) {\r\n            });\r\n            this.tabulator.on("rowSelectionChanged", function (data, rows) {\r\n            });\r\n            this.tabulator.on("rowSelected", function (row) {\r\n                let index = row.getIndex();\r\n                //that.msg = index;\r\n                //console.log(\'rowSelected\');\r\n            });\r\n            this.tabulator.on("cellEditing", function (cell) {\r\n                let row = cell.getRow();\r\n                let data = row.getData();\r\n                let index = row.getIndex();\r\n            });\r\n            this.tabulator.on("cellEditCancelled", function (cell) {\r\n            });\r\n            this.tabulator.on("cellEdited", function (cell) {\r\n                if (cell.getField() != "solg") {\r\n                    return;\r\n                }\r\n                let row = cell.getRow();\r\n                let data = row.getData();\r\n                let solg = row.getCell("solg").getValue();\r\n                let tien = solg * 1000;\r\n                let id = row.getIndex();\r\n                row.getCell("tien").setValue(tien);\r\n            });\r\n            this.tabulator.on("validationFailed", function (cell, value, validators) {\r\n                let field = cell.getField();\r\n            });\r\n        },\r\n        ReLoadData() {\r\n            this.tabulatorClear();\r\n            let r = JSON.parse(JSON.stringify(this.rec));\r\n            r.id = this.count++;\r\n            this.tableData.push(r);\r\n            this.count++;\r\n            this.setPage(1);\r\n        },\r\n        onLoad() {\r\n            // for (var i = 0; i < 3; i++) {\r\n            //     let r = JSON.parse(JSON.stringify(this.rec));\r\n            //     r.id = this.count;\r\n            //     r.tien = r.solg * 1000;\r\n            //     this.tableData.push(r);\r\n            //     this.count++;\r\n            // }\r\n            // this.setPage(1);\r\n        },\r\n        ChangeAct() {\r\n            let act = (this.r.act == \'true\') ? true : false;\r\n            this.r.act = act;\r\n        },\r\n        rowValidate(row) {\r\n            let kq = true;\r\n            var cells = row.getCells();\r\n            for (var i = 0; i < cells.length; i++) {\r\n                if (cells[i].isValid() != true) {\r\n                    kq = false;\r\n                }\r\n            }\r\n            return kq;\r\n        },\r\n        onSave(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            if (\r\n                this.rowValidate(e.data) == false\r\n                //|| row.getData().tpl == ""\r\n                //|| row.getData().monid == null\r\n            ) {\r\n                this.toast("không hợp lệ!!!")\r\n                return;\r\n            }\r\n            let r = JSON.parse(JSON.stringify(row.getData()));\r\n            if (r.id == 0) {\r\n                let new_lastpage = this.getLastPage(this.rowCount + 1);\r\n                this.Save(r).then(res => {\r\n                    this.onCancelAdd(e);\r\n                    this.setPage(new_lastpage);\r\n                })\r\n            } else {\r\n                this.Save(r).then(res => {\r\n                    this.tabulator.deselectRow(this.sel.id);\r\n                    this.sel = {};\r\n                    this.tabulator.redraw(true);\r\n                })\r\n            }\r\n        },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast("Không hợp lệ");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.r));\r\n                if (r.id == 0) {\r\n                    r.id = this.count;\r\n                    this.tabulatorAdd(r);\r\n                    this.count++;\r\n                    this.setPage(1);\r\n                } else {\r\n                    this.tabulatorUpdate(r);\r\n                }\r\n                this.hideModal();\r\n            });\r\n        },\r\n        onAdd() {\r\n            this.cmd = "add";\r\n            let r = JSON.parse(JSON.stringify(this.rec));\r\n            this.tabulator.addRow(r, true, 0);\r\n            this.tabulator.selectRow(0);\r\n            $(".tabulator-footer").hide();\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onCancelAdd(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n\r\n            this.cmd = "";\r\n            row.delete();\r\n            $(".tabulator-footer").show();\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onCancel(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            let $row = $(row.getElement());\r\n            let r = JSON.parse(JSON.stringify(this.sel));\r\n\r\n            this.tabulatorUpdate(r);\r\n            this.sel = {};\r\n            this.tabulator.deselectRow(this.sel.id);\r\n            this.tabulator.redraw(true);\r\n        },\r\n        onEdit(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            this.sel = JSON.parse(JSON.stringify(row.getData()));\r\n            let $row = $(row.getElement());\r\n            this.tabulator.selectRow(id);\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onDel(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            let id = row.getIndex();\r\n            let new_lastpage = this.getLastPage(this.rowCount - 1);\r\n            this.Del(id).then(res => {\r\n                if (res.data.kq == "ok") {//del ok\r\n                    row.delete();\r\n                    this.setPage(new_lastpage);\r\n                }\r\n                this.toast(res.data.msg);\r\n            })\r\n        },\r\n        getPageMax() {\r\n            return this.tabulator.getPageMax();\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        getPageSize() {\r\n            return this.tabulator.getPageSize();\r\n        },\r\n        getPage() {\r\n            return this.tabulator.getPage();\r\n        },\r\n        setPage(_page) {\r\n            this.tabulator.setPage(_page);\r\n        },\r\n        getData() {\r\n            return this.tabulator.getData();\r\n        },\r\n        tabulatorLoadData(ar) {\r\n            ar.forEach(x => {\r\n                this.tableData.push(x);\r\n            })\r\n        },\r\n        tabulatorClear() {\r\n            let i = 0;\r\n            while (i < this.tableData.length) {\r\n                this.tableData.splice(i, 1);\r\n            }\r\n        },\r\n        tabulatorAdd(r) {\r\n            this.tableData.unshift(r);\r\n        },\r\n        tabulatorDel(id) {\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            this.tableData.splice(index, 1);\r\n        },\r\n        tabulatorUpdate(r) {\r\n            let index = this.tableData.findIndex(x => x.id == r.id);\r\n            this.tableData.splice(index, 1, r);\r\n        },\r\n        tabulatorGetRow(id) {\r\n            //let index=this.tabulator.getData().findIndex(x=>x.id==id);\r\n            //let r=this.tabulator.getData()[index];\r\n            //return r;\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        showModal() {\r\n            this.$refs[\'my-modal2\'].show()\r\n        },\r\n        hideModal() {\r\n            this.$refs[\'my-modal2\'].hide()\r\n        },\r\n        async Save(r) {\r\n            return await axios.post(`/api/Ban/Save`, r).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n        async Del(id) {\r\n            return await axios\r\n                .get(`/api/Ban/Delete?id=${id}`)\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await axios.get(`/api/Ban/GetById?id=${id}`).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n\r\n    }\r\n}\r\n<\/script>\r\n<style lang="scss">\r\n.select2-container--default .select2-selection--single .select2-selection__arrow {\r\n    height: 15px;\r\n    position: absolute;\r\n    top: 4px;\r\n    right: 1px;\r\n    width: 20px;\r\n}\r\n\r\n.select2-container--default .select2-selection--single .select2-selection__rendered {\r\n    color: #444;\r\n    line-height: 24px;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: block;\r\n    height: 24px;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n\r\n.xyz {\r\n    border: 1px solid red;\r\n}\r\n\r\n.danger,\r\n.danger .dropdown-toggle,\r\n.danger .selected-tag {\r\n    background-color: aqua;\r\n    border-radius: 4px;\r\n}\r\n\r\n.ko-hop-le {\r\n    border-radius: 4px;\r\n    background-color: aqua;\r\n}\r\n\r\n$textSize: 8.5px; //14px !default; //table text size\r\n@import "~tabulator-tables/src/scss/tabulator.scss";\r\n\r\n.tabulator-col-title {\r\n    text-align: center;\r\n}\r\n\r\n.tabulator .tabulator-footer .tabulator-page.active {\r\n    background-color: greenyellow !important;\r\n    color: blue !important;\r\n}\r\n\r\n.tabulator-row .tabulator-cell {\r\n    padding: 3px 4px;\r\n}\r\n\r\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\r\n    width: 24px;\r\n    height: 24px;\r\n    font-size: 10px;\r\n    line-height: 1;\r\n    margin: 0px auto;\r\n    padding: 6px 0;\r\n}\r\n\r\n.custom-control.custom-checkbox {\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    min-height: 0.9rem;\r\n    padding-left: 1.5rem;\r\n    padding-top: 0.3rem;\r\n}\r\n\r\n.col-4 input {\r\n    margin-bottom: 1px;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 0.3rem;\r\n}\r\n</style>\r\n  \r\n  '},17529:function(e,t){var r={cong(e,t){return e+t},nhan(e,t){return e*t},list(){return[{id:1,ten:"thuc 101"},{id:2,ten:"thuc 102"},{id:3,ten:"thuc 103"}]},loadCss(e){return new Promise(((t,r)=>{let n=document.createElement("link");n.type="text/css",n.rel="stylesheet",n.onload=t,n.href=e;let a=document.querySelector("script");a.parentNode.insertBefore(n,a)}))},loadScript(e,t){return new Promise((function(r,n){var a=document.createElement("script");a.onload=r,a.onerror=n,a.src=t,a.type="text/javascript",a.setAttribute("id",e),document.getElementsByTagName("head")[0].appendChild(a)}))},loadMyScript(e){document.getElementById("myScript")?e.onReady():this.loadScript("myScript","js/jquery.min.js").then((()=>{this.loadScript("","js/bootstrap.js").then((()=>{this.loadScript("","js/select2.min.js").then((()=>{this.loadScript("","js/bootstrap-datepicker.js").then((()=>{this.loadCss("css/select2.min.css").then((()=>{this.loadCss("css/bootstrap-datepicker.css").then((()=>{e.onReady()}))}))}))}))}))}))}};t["Z"]=r}}]);
//# sourceMappingURL=3433.b007eec6.js.map