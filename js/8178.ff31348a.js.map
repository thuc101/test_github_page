{"version":3,"file":"js/8178.ff31348a.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/LopHoc2/LopHocListModal2.vue?04a4","webpack://vue_start_1/src/views/LopHoc2/LopHocListModal2.vue","webpack://vue_start_1/./src/views/LopHoc2/LopHocListModal2.vue?aa25","webpack://vue_start_1/./src/views/LopHoc2/LopHocListModal2.vue?435b","webpack://vue_start_1/./src/views/LopHoc2/LopHocListModal2.vue","webpack://vue_start_1/./src/TumLum.js","webpack://vue_start_1/./src/fetchClient.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"MonHocToan\"},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./LopHocListModal2.vue').default}}),_c('div',{},[_c('div',{staticClass:\"p-3\"},[_c('b-row',_vm._l((_vm.items),function(v,k){return _c('b-col',{key:k,class:{ 'border': true, 'pt-3': true, 'pb-3': true, 'bg-light': (k % 2 == 0) ? true : false },attrs:{\"lg\":\"4\"}},[_c('h4',{},[_vm._v(\"Id : \"+_vm._s(v.Id)+\" - \"+_vm._s(k))]),_c('div',[_vm._v(\" \"+_vm._s(v)+\" \")]),_c('div',{staticClass:\"text-right mt-5\"},[_c('button',{staticClass:\"mr-1\",on:{\"click\":function($event){return _vm.onEdit(v)}}},[_vm._v(\"Edit\")]),_c('button',{on:{\"click\":function($event){return _vm.onDel(v)}}},[_vm._v(\"Del\")])])])}),1)],1),_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('b-modal',{ref:\"my-modal\",attrs:{\"size\":\"md\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":(_vm.sel2[_vm.pri] == 0) ? 'form Add' : 'form Edit'}},[_c('div',{staticClass:\"d-block\"},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',{},[_vm._l((_vm.sel2),function(v,k){return _c('div',{key:k,staticClass:\"form-group row\"},[((k == _vm.pri))?[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"readonly\":true,\"name\":k,\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e(),(k == 'TenLop')?[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Tên Lớp\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"name\":k,\"autocomplete\":\"off\",\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e()],2)}),_c('div',{staticClass:\"text-right\"},[_c('button',{staticClass:\"btn mr-1\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])],2)])])]),_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Tìm kiếm\",\"label-for\":\"filter-input\",\"label-cols-sm\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-input-group',{attrs:{\"size\":\"sm\"}},[_c('b-form-input',{attrs:{\"id\":\"filter-input\",\"type\":\"search\",\"placeholder\":\"Type to Search\"},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(\"Clear\")])],1)],1)],1)],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Số dòng\",\"label-for\":\"per-page-select\",\"label-cols-sm\":\"6\",\"label-cols-md\":\"4\",\"label-cols-lg\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-form-select',{attrs:{\"id\":\"per-page-select\",\"options\":_vm.pageOptions,\"size\":\"sm\"},on:{\"input\":_vm.onChangePerPage},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1),_c('b-col',{staticClass:\"my-1 text-right\",attrs:{\"sm\":\"6\"}},[_c('span',[_vm._v(\"page : \"+_vm._s(_vm.currentPage)+\" / \"+_vm._s(_vm.last_page)+\" of \"+_vm._s(_vm.totalRows)+\" \")]),_c('b-button',{staticClass:\"mr-1 mb-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"size\":\"sm\"},on:{\"click\":_vm.OnAdd}},[_c('b',[_vm._v(\"Add\")])])],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-pagination',{ref:\"mypage\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"size\":\"sm\",\"align\":\"fill\",\"first-text\":\"First\",\"prev-text\":\"Prev\",\"next-text\":\"Next\",\"last-text\":\"Last\"},on:{\"input\":_vm.onChangePage},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1),_c('b-modal',{attrs:{\"id\":_vm.infoModal.id,\"title\":_vm.infoModal.title,\"ok-only\":\"\"},on:{\"hide\":_vm.resetInfoModal}},[_c('pre',[_vm._v(_vm._s(_vm.infoModal.content))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"MonHocToan\">\r\n        <raw-loader :mytxt=\"require('!raw-loader!./LopHocListModal2.vue').default\"></raw-loader>\r\n\r\n        <div class=\"\">\r\n            <div class=\"p-3\">\r\n                <b-row>\r\n                    <b-col :class=\"{ 'border': true, 'pt-3': true, 'pb-3': true, 'bg-light': (k % 2 == 0) ? true : false }\"\r\n                        lg=\"4\" v-for=\"(v, k) in items\" :key=\"k\">\r\n                        <h4 class=\"\">Id : {{ v.Id }} - {{ k }}</h4>\r\n                        <div>\r\n                            {{ v }}\r\n                        </div>\r\n                        <div class=\"text-right mt-5\">\r\n                            <button @click=\"onEdit(v)\" class=\"mr-1\">Edit</button>\r\n                            <button @click=\"onDel(v)\">Del</button>\r\n                        </div>\r\n                    </b-col>\r\n                </b-row>\r\n            </div>\r\n            <form @submit.stop.prevent=\"onSaveModal\">\r\n                <b-modal ref=\"my-modal\" size=\"md\" :no-close-on-backdrop=\"true\" hide-footer\r\n                    :title=\"(sel2[pri] == 0) ? 'form Add' : 'form Edit'\">\r\n                    <div class=\"d-block\">\r\n                        <form @submit.stop.prevent=\"onSaveModal\">\r\n                            <div class=\"\">\r\n                                <div class=\"form-group row\" v-for=\"(v, k) in sel2\" :key=\"k\">\r\n\r\n                                    <template v-if=\"(k == pri)\">\r\n                                        <label class=\"col-sm-4 col-form-label\">Id</label>\r\n                                        <div class=\"col-sm-8\">\r\n                                            <input :readonly=\"true\" :name=\"k\" v-model=\"sel2[k]\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'TenLop'\">\r\n                                        <label class=\"col-sm-4 col-form-label\">Tên Lớp</label>\r\n                                        <div class=\"col-sm-8\">\r\n                                            <input :name=\"k\" v-model=\"sel2[k]\" autocomplete=\"off\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" v-validate=\"'required'\" />\r\n                                        </div>\r\n                                    </template>\r\n\r\n                                </div>\r\n                                <div class=\"text-right\">\r\n                                    <button type=\"submit\" class=\"btn mr-1\">Save</button>\r\n                                    <button type=\"button\" class=\"btn\" @click=\"hideModal()\">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </b-modal>\r\n\r\n                <b-row>\r\n                    <b-col sm=\"6\" class=\"my-1\">\r\n                        <b-form-group label=\"Tìm kiếm\" label-for=\"filter-input\" label-cols-sm=\"3\" label-align-sm=\"right\"\r\n                            label-size=\"sm\" class=\"mb-0\">\r\n                            <b-input-group size=\"sm\">\r\n                                <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\" placeholder=\"Type to Search\">\r\n                                </b-form-input>\r\n\r\n                                <b-input-group-append>\r\n                                    <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                                </b-input-group-append>\r\n                            </b-input-group>\r\n                        </b-form-group>\r\n                    </b-col>\r\n                    <b-col sm=\"6\" class=\"my-1\">\r\n                        <b-form-group label=\"Số dòng\" label-for=\"per-page-select\" label-cols-sm=\"6\" label-cols-md=\"4\"\r\n                            label-cols-lg=\"3\" label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                            <b-form-select @input=\"onChangePerPage\" id=\"per-page-select\" v-model=\"perPage\"\r\n                                :options=\"pageOptions\" size=\"sm\">\r\n                            </b-form-select>\r\n                        </b-form-group>\r\n                    </b-col>\r\n\r\n                    <b-col sm=\"6\" class=\"my-1 text-right\">\r\n                        <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\r\n                        <b-button :disabled=\"adding == true || isEditing() == true\" class=\"mr-1 mb-1\" size=\"sm\"\r\n                            @click=\"OnAdd\">\r\n                            <b>Add</b></b-button>\r\n                    </b-col>\r\n                    <b-col sm=\"6\" class=\"my-1\">\r\n                        <b-pagination :disabled=\"adding == true || isEditing() == true\" ref=\"mypage\" v-model=\"currentPage\"\r\n                            :total-rows=\"totalRows\" :per-page=\"perPage\" size=\"sm\" align=\"fill\" @input=\"onChangePage\"\r\n                            first-text=\"First\" prev-text=\"Prev\" next-text=\"Next\" last-text=\"Last\">\r\n                        </b-pagination>\r\n                    </b-col>\r\n                </b-row>\r\n            </form>\r\n            <!-- Info modal -->\r\n            <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n                <pre>{{ infoModal.content }}</pre>\r\n            </b-modal>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\n\r\nimport VueTypeaheadBootstrap from \"vue-typeahead-bootstrap\";\r\nimport { debounce } from \"lodash\";\r\n\r\nimport fetchClient from \"@/fetchClient\";\r\nimport TumLum from \"@/TumLum\";\r\n\r\nimport moment from \"moment\"\r\n\r\nexport default {\r\n    components: {\r\n        VueTypeaheadBootstrap,\r\n    },\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            pageOptions: [5, 10, 15, { value: 100, text: \"Show a lot\" }],\r\n            sortBy: '',\r\n            sortDesc: false,\r\n            sortDirection: 'asc',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: 'info-modal',\r\n                title: '',\r\n                content: ''\r\n            },\r\n            sel: {},\r\n            sel2: {},\r\n            pri: \"Id\",\r\n            last_page: 0,\r\n            adding: false,\r\n            ListAuto: [],\r\n\r\n            title: \"hello title\",\r\n            url: `/api/LopHoc4`,\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        last_page: function (newValue, oldValue) {\r\n        },\r\n        currentPage: function (val) {\r\n        },\r\n        totalRows: function (newValue, oldValue) {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    mounted() {\r\n        this.Lds(this.currentPage, this.perPage);\r\n    },\r\n    methods: {\r\n        onChangePerPage() {\r\n            this.Lds(this.currentPage, this.perPage);\r\n        },\r\n\r\n        OnSearch: debounce(function (query) {\r\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(JSON.stringify(data))\r\n                    this.ListAuto = data.items;\r\n                });\r\n        }, 500),\r\n        onPagingInput() {\r\n        },\r\n        myProvider(ctx) {\r\n            let currentPage = ctx.currentPage;\r\n            let perPage = ctx.perPage;\r\n            let sortBy = ctx.sortBy;\r\n            let sortDesc = ctx.sortDesc;\r\n            let vm = this;\r\n            let url = `${this.url}/GetPage2`;\r\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\r\n            if (ctx.filter) {\r\n                let filter = ctx.filter;\r\n                url = `${url}&filter=${filter}`;\r\n            }\r\n            return fetchClient.get(url)\r\n                .then(res => {\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    vm.items = res.data.data;\r\n                    if (this.adding == true) {\r\n                        let r = {};\r\n                        r[this.pri] = 0;\r\n                        r[\"TenKhach\"] = \"xxx\";\r\n                        r[\"Ngay\"] = new Date();\r\n                        res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        mapData(data) {\r\n            let kq = [];\r\n            data.forEach(obj => {\r\n                let x = {};\r\n                Object.keys(obj).forEach(key => {\r\n                    let k = key;\r\n                    x[k] = obj[key];\r\n                });\r\n                kq.push(x);\r\n            })\r\n            return kq;\r\n        },\r\n        onChangePage() {\r\n            this.Lds(this.currentPage, this.perPage);\r\n            this.sel = {};\r\n            this.adding = false;\r\n        },\r\n        OnAdd() {\r\n            this.sel2 = {\r\n                Id: 0,\r\n                TenLop: \"sfsfsf\"\r\n            }\r\n            this.showModal();\r\n        },\r\n        onEdit(item) {\r\n            alert(`edit ${JSON.stringify(item)}`)\r\n        },\r\n        // OnEdit(item) {\r\n        //     alert('edit');\r\n        //     return;\r\n        //     if (JSON.stringify(this.sel) != \"{}\" || this.adding == true) {\r\n        //         return;\r\n        //     }\r\n        //     /*\r\n        //     this.sel2 = JSON.parse(JSON.stringify(item));\r\n        //     this.showModal();\r\n        //     */\r\n        //     this.getById(item[this.pri]);\r\n        //     // this.getById(item[this.pri]).then(res => {\r\n        //     //     this.sel2 = res.data;\r\n        //     //     this.showModal();\r\n        //     //{\"data\":{\"Id\":1,\"TenLop\":\"Lop 11A1sfsf\"},\"status\":200,\"statusText\":\"OK\",\"headers\":{\"content-length\":\"32\",\"            \r\n        //     // })\r\n        // },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.sel2));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r);\r\n                } else {\r\n                    this.Update(r);\r\n                }\r\n            });\r\n        },\r\n\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r).then(res => {\r\n                        if (res.data.kq == 'ok') {\r\n                            this.toast(`${res.data.msg}`);\r\n                            this.adding = false;\r\n                            this.$refs.mytable.refresh();\r\n                        }\r\n                    })\r\n                } else {\r\n                    //tien hanh sua\r\n                    this.Update(r).then(res => {\r\n                        this.toast(`${res.data.msg}`);\r\n                        this.adding = false;\r\n                        this.sel = {};\r\n                        this.$refs.mytable.refresh();\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] != 0) {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            } else {\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            }\r\n        },\r\n        onDel(item) {\r\n            alert(`Del ${JSON.stringify(item)}`);\r\n        },\r\n        /*\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]).then(res => {\r\n                if (res.data.kq == 'nook') {\r\n                    this.toast(`${res.data.msg}`);\r\n                    return;\r\n                }\r\n                this.toast(`${res.data.msg}`);\r\n                let lastPage = this.getLastPage(this.totalRows - 1);\r\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\r\n                this.$refs.mytable.refresh();\r\n            })\r\n        },\r\n        */\r\n        delRow(item) {\r\n            let id = item.id;\r\n            let index = this.items.findIndex(x => x.id == id);\r\n            this.items.splice(index, 1);\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != \"{}\"\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x.id == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        gotoPage(page) {\r\n            this.currentPage = page;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n\r\n        async Add(r) {\r\n            return await fetchClient.post(`${this.url}/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.hideModal();\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`${this.url}/Update`, r)\r\n                .then(res => {\r\n                    this.hideModal();\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Del(id) {\r\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\r\n                .then(res => {\r\n                    this.sel2 = res.data;\r\n                    this.showModal();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n\r\n        async Lds(page, size) {\r\n            return await fetchClient.get(`/api/LopHoc4/GetPage2?page=${page}&size=${size}`)\r\n                .then(res => {\r\n                    this.items = res.data.data;\r\n                    this.last_page = res.data.last_page;\r\n                    this.totalRows = res.data.rowCount;\r\n\r\n                    /*\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    vm.items = res.data.data;\r\n                    if (this.adding == true) {\r\n                        let r = {};\r\n                        r[this.pri] = 0;\r\n                        r[\"TenKhach\"] = \"xxx\";\r\n                        r[\"Ngay\"] = new Date();\r\n                        res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                    */\r\n\r\n\r\n                    //alert(JSON.stringify(res));\r\n                    /*{\"data\":{\r\n                        \"last_page\":2,\r\n                        \"rowCount\":6,\r\n                        \"data\":[{\r\n                            \"Id\":1,\r\n                            \"TenLop\":\"Lớp 11A\"}\r\n                    */\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = ''\r\n            this.infoModal.content = ''\r\n        },\r\n        onFiltered(filteredItems) {\r\n            console.log('onFiltered' + JSON.stringify(filteredItems));\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        },\r\n        showModal() {\r\n            this.$refs[\"my-modal\"].show();\r\n        },\r\n        hideModal() {\r\n            this.$refs[\"my-modal\"].hide();\r\n        },\r\n    }\r\n}\r\n</script>\r\n  \r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LopHocListModal2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LopHocListModal2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LopHocListModal2.vue?vue&type=template&id=6c80843f&\"\nimport script from \"./LopHocListModal2.vue?vue&type=script&lang=js&\"\nexport * from \"./LopHocListModal2.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div class=\\\"MonHocToan\\\">\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./LopHocListModal2.vue').default\\\"></raw-loader>\\r\\n\\r\\n        <div class=\\\"\\\">\\r\\n            <div class=\\\"p-3\\\">\\r\\n                <b-row>\\r\\n                    <b-col :class=\\\"{ 'border': true, 'pt-3': true, 'pb-3': true, 'bg-light': (k % 2 == 0) ? true : false }\\\"\\r\\n                        lg=\\\"4\\\" v-for=\\\"(v, k) in items\\\" :key=\\\"k\\\">\\r\\n                        <h4 class=\\\"\\\">Id : {{ v.Id }} - {{ k }}</h4>\\r\\n                        <div>\\r\\n                            {{ v }}\\r\\n                        </div>\\r\\n                        <div class=\\\"text-right mt-5\\\">\\r\\n                            <button @click=\\\"onEdit(v)\\\" class=\\\"mr-1\\\">Edit</button>\\r\\n                            <button @click=\\\"onDel(v)\\\">Del</button>\\r\\n                        </div>\\r\\n                    </b-col>\\r\\n                </b-row>\\r\\n            </div>\\r\\n            <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n                <b-modal ref=\\\"my-modal\\\" size=\\\"md\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer\\r\\n                    :title=\\\"(sel2[pri] == 0) ? 'form Add' : 'form Edit'\\\">\\r\\n                    <div class=\\\"d-block\\\">\\r\\n                        <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n                            <div class=\\\"\\\">\\r\\n                                <div class=\\\"form-group row\\\" v-for=\\\"(v, k) in sel2\\\" :key=\\\"k\\\">\\r\\n\\r\\n                                    <template v-if=\\\"(k == pri)\\\">\\r\\n                                        <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n                                        <div class=\\\"col-sm-8\\\">\\r\\n                                            <input :readonly=\\\"true\\\" :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'TenLop'\\\">\\r\\n                                        <label class=\\\"col-sm-4 col-form-label\\\">Tên Lớp</label>\\r\\n                                        <div class=\\\"col-sm-8\\\">\\r\\n                                            <input :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" autocomplete=\\\"off\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" v-validate=\\\"'required'\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"text-right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn mr-1\\\">Save</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </b-modal>\\r\\n\\r\\n                <b-row>\\r\\n                    <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                        <b-form-group label=\\\"Tìm kiếm\\\" label-for=\\\"filter-input\\\" label-cols-sm=\\\"3\\\" label-align-sm=\\\"right\\\"\\r\\n                            label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                            <b-input-group size=\\\"sm\\\">\\r\\n                                <b-form-input id=\\\"filter-input\\\" v-model=\\\"filter\\\" type=\\\"search\\\" placeholder=\\\"Type to Search\\\">\\r\\n                                </b-form-input>\\r\\n\\r\\n                                <b-input-group-append>\\r\\n                                    <b-button :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\">Clear</b-button>\\r\\n                                </b-input-group-append>\\r\\n                            </b-input-group>\\r\\n                        </b-form-group>\\r\\n                    </b-col>\\r\\n                    <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                        <b-form-group label=\\\"Số dòng\\\" label-for=\\\"per-page-select\\\" label-cols-sm=\\\"6\\\" label-cols-md=\\\"4\\\"\\r\\n                            label-cols-lg=\\\"3\\\" label-align-sm=\\\"right\\\" label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                            <b-form-select @input=\\\"onChangePerPage\\\" id=\\\"per-page-select\\\" v-model=\\\"perPage\\\"\\r\\n                                :options=\\\"pageOptions\\\" size=\\\"sm\\\">\\r\\n                            </b-form-select>\\r\\n                        </b-form-group>\\r\\n                    </b-col>\\r\\n\\r\\n                    <b-col sm=\\\"6\\\" class=\\\"my-1 text-right\\\">\\r\\n                        <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\\r\\n                        <b-button :disabled=\\\"adding == true || isEditing() == true\\\" class=\\\"mr-1 mb-1\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnAdd\\\">\\r\\n                            <b>Add</b></b-button>\\r\\n                    </b-col>\\r\\n                    <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                        <b-pagination :disabled=\\\"adding == true || isEditing() == true\\\" ref=\\\"mypage\\\" v-model=\\\"currentPage\\\"\\r\\n                            :total-rows=\\\"totalRows\\\" :per-page=\\\"perPage\\\" size=\\\"sm\\\" align=\\\"fill\\\" @input=\\\"onChangePage\\\"\\r\\n                            first-text=\\\"First\\\" prev-text=\\\"Prev\\\" next-text=\\\"Next\\\" last-text=\\\"Last\\\">\\r\\n                        </b-pagination>\\r\\n                    </b-col>\\r\\n                </b-row>\\r\\n            </form>\\r\\n            <!-- Info modal -->\\r\\n            <b-modal :id=\\\"infoModal.id\\\" :title=\\\"infoModal.title\\\" ok-only @hide=\\\"resetInfoModal\\\">\\r\\n                <pre>{{ infoModal.content }}</pre>\\r\\n            </b-modal>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n});\\r\\n\\r\\nimport VueTypeaheadBootstrap from \\\"vue-typeahead-bootstrap\\\";\\r\\nimport { debounce } from \\\"lodash\\\";\\r\\n\\r\\nimport fetchClient from \\\"@/fetchClient\\\";\\r\\nimport TumLum from \\\"@/TumLum\\\";\\r\\n\\r\\nimport moment from \\\"moment\\\"\\r\\n\\r\\nexport default {\\r\\n    components: {\\r\\n        VueTypeaheadBootstrap,\\r\\n    },\\r\\n    data() {\\r\\n        return {\\r\\n            items: [\\r\\n            ],\\r\\n            fields: [],\\r\\n            totalRows: 1,\\r\\n            currentPage: 1,\\r\\n            perPage: 5,\\r\\n            pageOptions: [5, 10, 15, { value: 100, text: \\\"Show a lot\\\" }],\\r\\n            sortBy: '',\\r\\n            sortDesc: false,\\r\\n            sortDirection: 'asc',\\r\\n            filter: null,\\r\\n            filterOn: [],\\r\\n            infoModal: {\\r\\n                id: 'info-modal',\\r\\n                title: '',\\r\\n                content: ''\\r\\n            },\\r\\n            sel: {},\\r\\n            sel2: {},\\r\\n            pri: \\\"Id\\\",\\r\\n            last_page: 0,\\r\\n            adding: false,\\r\\n            ListAuto: [],\\r\\n\\r\\n            title: \\\"hello title\\\",\\r\\n            url: `/api/LopHoc4`,\\r\\n        }\\r\\n    },\\r\\n\\r\\n    watch: {\\r\\n        last_page: function (newValue, oldValue) {\\r\\n        },\\r\\n        currentPage: function (val) {\\r\\n        },\\r\\n        totalRows: function (newValue, oldValue) {\\r\\n        }\\r\\n    },\\r\\n    computed: {\\r\\n    },\\r\\n    mounted() {\\r\\n        this.Lds(this.currentPage, this.perPage);\\r\\n    },\\r\\n    methods: {\\r\\n        onChangePerPage() {\\r\\n            this.Lds(this.currentPage, this.perPage);\\r\\n        },\\r\\n\\r\\n        OnSearch: debounce(function (query) {\\r\\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\\r\\n                .then((response) => {\\r\\n                    return response.json();\\r\\n                })\\r\\n                .then((data) => {\\r\\n                    console.log(JSON.stringify(data))\\r\\n                    this.ListAuto = data.items;\\r\\n                });\\r\\n        }, 500),\\r\\n        onPagingInput() {\\r\\n        },\\r\\n        myProvider(ctx) {\\r\\n            let currentPage = ctx.currentPage;\\r\\n            let perPage = ctx.perPage;\\r\\n            let sortBy = ctx.sortBy;\\r\\n            let sortDesc = ctx.sortDesc;\\r\\n            let vm = this;\\r\\n            let url = `${this.url}/GetPage2`;\\r\\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\\r\\n            if (ctx.filter) {\\r\\n                let filter = ctx.filter;\\r\\n                url = `${url}&filter=${filter}`;\\r\\n            }\\r\\n            return fetchClient.get(url)\\r\\n                .then(res => {\\r\\n                    vm.last_page = res.data.last_page;\\r\\n                    vm.totalRows = res.data.rowCount;\\r\\n                    vm.items = res.data.data;\\r\\n                    if (this.adding == true) {\\r\\n                        let r = {};\\r\\n                        r[this.pri] = 0;\\r\\n                        r[\\\"TenKhach\\\"] = \\\"xxx\\\";\\r\\n                        r[\\\"Ngay\\\"] = new Date();\\r\\n                        res.data.data.unshift(r);\\r\\n                    }\\r\\n                    return vm.mapData(res.data.data); //res.data.data;\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        mapData(data) {\\r\\n            let kq = [];\\r\\n            data.forEach(obj => {\\r\\n                let x = {};\\r\\n                Object.keys(obj).forEach(key => {\\r\\n                    let k = key;\\r\\n                    x[k] = obj[key];\\r\\n                });\\r\\n                kq.push(x);\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        onChangePage() {\\r\\n            this.Lds(this.currentPage, this.perPage);\\r\\n            this.sel = {};\\r\\n            this.adding = false;\\r\\n        },\\r\\n        OnAdd() {\\r\\n            this.sel2 = {\\r\\n                Id: 0,\\r\\n                TenLop: \\\"sfsfsf\\\"\\r\\n            }\\r\\n            this.showModal();\\r\\n        },\\r\\n        onEdit(item) {\\r\\n            alert(`edit ${JSON.stringify(item)}`)\\r\\n        },\\r\\n        // OnEdit(item) {\\r\\n        //     alert('edit');\\r\\n        //     return;\\r\\n        //     if (JSON.stringify(this.sel) != \\\"{}\\\" || this.adding == true) {\\r\\n        //         return;\\r\\n        //     }\\r\\n        //     /*\\r\\n        //     this.sel2 = JSON.parse(JSON.stringify(item));\\r\\n        //     this.showModal();\\r\\n        //     */\\r\\n        //     this.getById(item[this.pri]);\\r\\n        //     // this.getById(item[this.pri]).then(res => {\\r\\n        //     //     this.sel2 = res.data;\\r\\n        //     //     this.showModal();\\r\\n        //     //{\\\"data\\\":{\\\"Id\\\":1,\\\"TenLop\\\":\\\"Lop 11A1sfsf\\\"},\\\"status\\\":200,\\\"statusText\\\":\\\"OK\\\",\\\"headers\\\":{\\\"content-length\\\":\\\"32\\\",\\\"            \\r\\n        //     // })\\r\\n        // },\\r\\n        onSaveModal() {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(this.sel2));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r);\\r\\n                } else {\\r\\n                    this.Update(r);\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n\\r\\n        onSave(item) {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(item));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r).then(res => {\\r\\n                        if (res.data.kq == 'ok') {\\r\\n                            this.toast(`${res.data.msg}`);\\r\\n                            this.adding = false;\\r\\n                            this.$refs.mytable.refresh();\\r\\n                        }\\r\\n                    })\\r\\n                } else {\\r\\n                    //tien hanh sua\\r\\n                    this.Update(r).then(res => {\\r\\n                        this.toast(`${res.data.msg}`);\\r\\n                        this.adding = false;\\r\\n                        this.sel = {};\\r\\n                        this.$refs.mytable.refresh();\\r\\n                    })\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        OnCancel(item) {\\r\\n            if (item[this.pri] != 0) {\\r\\n                this.doCancel(item);\\r\\n                this.sel = {};\\r\\n            } else {\\r\\n                this.adding = false;\\r\\n                this.$refs.mytable.refresh();\\r\\n            }\\r\\n        },\\r\\n        onDel(item) {\\r\\n            alert(`Del ${JSON.stringify(item)}`);\\r\\n        },\\r\\n        /*\\r\\n        OnDel(item) {\\r\\n            this.Del(item[this.pri]).then(res => {\\r\\n                if (res.data.kq == 'nook') {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    return;\\r\\n                }\\r\\n                this.toast(`${res.data.msg}`);\\r\\n                let lastPage = this.getLastPage(this.totalRows - 1);\\r\\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\\r\\n                this.$refs.mytable.refresh();\\r\\n            })\\r\\n        },\\r\\n        */\\r\\n        delRow(item) {\\r\\n            let id = item.id;\\r\\n            let index = this.items.findIndex(x => x.id == id);\\r\\n            this.items.splice(index, 1);\\r\\n        },\\r\\n        isEditing() {\\r\\n            return JSON.stringify(this.sel) != \\\"{}\\\"\\r\\n        },\\r\\n        isAdded() {\\r\\n            let kq = false;\\r\\n            this.items.forEach(x => {\\r\\n                if (x.id == 0) kq = true;\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        doCancel(item) {\\r\\n            for (let key in item) {\\r\\n                if (item[key] != this.sel[key]) {\\r\\n                    item[key] = this.sel[key]\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        getLastPage(count) {\\r\\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\\r\\n            let du = count % pageSize;\\r\\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n        },\\r\\n        gotoPage(page) {\\r\\n            this.currentPage = page;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n\\r\\n        async Add(r) {\\r\\n            return await fetchClient.post(`${this.url}/Add`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.hideModal();\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Update(r) {\\r\\n            return await fetchClient.post(`${this.url}/Update`, r)\\r\\n                .then(res => {\\r\\n                    this.hideModal();\\r\\n                    this.toast(`${res.data.msg}`)\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Del(id) {\\r\\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`)\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async getById(id) {\\r\\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.sel2 = res.data;\\r\\n                    this.showModal();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n\\r\\n        async Lds(page, size) {\\r\\n            return await fetchClient.get(`/api/LopHoc4/GetPage2?page=${page}&size=${size}`)\\r\\n                .then(res => {\\r\\n                    this.items = res.data.data;\\r\\n                    this.last_page = res.data.last_page;\\r\\n                    this.totalRows = res.data.rowCount;\\r\\n\\r\\n                    /*\\r\\n                    vm.last_page = res.data.last_page;\\r\\n                    vm.totalRows = res.data.rowCount;\\r\\n                    vm.items = res.data.data;\\r\\n                    if (this.adding == true) {\\r\\n                        let r = {};\\r\\n                        r[this.pri] = 0;\\r\\n                        r[\\\"TenKhach\\\"] = \\\"xxx\\\";\\r\\n                        r[\\\"Ngay\\\"] = new Date();\\r\\n                        res.data.data.unshift(r);\\r\\n                    }\\r\\n                    return vm.mapData(res.data.data); //res.data.data;\\r\\n                    */\\r\\n\\r\\n\\r\\n                    //alert(JSON.stringify(res));\\r\\n                    /*{\\\"data\\\":{\\r\\n                        \\\"last_page\\\":2,\\r\\n                        \\\"rowCount\\\":6,\\r\\n                        \\\"data\\\":[{\\r\\n                            \\\"Id\\\":1,\\r\\n                            \\\"TenLop\\\":\\\"Lớp 11A\\\"}\\r\\n                    */\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        info(item, index, button) {\\r\\n            this.infoModal.title = `Row index: ${index}`\\r\\n            this.infoModal.content = JSON.stringify(item, null, 2)\\r\\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\\r\\n        },\\r\\n        resetInfoModal() {\\r\\n            this.infoModal.title = ''\\r\\n            this.infoModal.content = ''\\r\\n        },\\r\\n        onFiltered(filteredItems) {\\r\\n            console.log('onFiltered' + JSON.stringify(filteredItems));\\r\\n            this.totalRows = filteredItems.length\\r\\n            this.currentPage = 1\\r\\n        },\\r\\n        showModal() {\\r\\n            this.$refs[\\\"my-modal\\\"].show();\\r\\n        },\\r\\n        hideModal() {\\r\\n            this.$refs[\\\"my-modal\\\"].hide();\\r\\n        },\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n  \\r\\n  \";","export default {\r\n    XuLyErr(err) {\r\n        let code = JSON.parse(JSON.stringify(err)).status;\r\n        if (code == 400) {\r\n            let msg = JSON.parse(JSON.stringify(err.response)).data.message;\r\n            alert(msg);\r\n        } else {\r\n            if (err.response) {\r\n                if (err.response.status == 401)\r\n                    alert(\"Chưa đăng nhập hoặc token hết hạn\");\r\n                else if (err.response.status == 403)\r\n                    alert(\"Bạn ko có quyền\");\r\n            } else if (err.request) {\r\n                alert(JSON.stringify(err.request));\r\n            } else if (err.message) {\r\n                alert(JSON.stringify(err.message));\r\n            }\r\n        }\r\n    }\r\n}\r\n  /*\r\nimport TumLum from '@/TumLum';\r\n*/","import axios from 'axios';\r\n\r\nconst fetchClient = () => {\r\n  const defaultOptions = {\r\n    baseURL: '',\r\n    method: 'get',\r\n    headers: {\r\n      //'Content-Type': 'application/json',\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n  };\r\n\r\n  // Create instance\r\n  let instance = axios.create(defaultOptions);\r\n\r\n  // Set the AUTH token for any request\r\n  instance.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem('token');\r\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\r\n    return config;\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport default fetchClient();"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_l","v","k","key","class","_v","_s","Id","on","$event","onEdit","onDel","stopPropagation","preventDefault","onSaveModal","apply","arguments","ref","sel2","pri","directives","name","rawName","value","expression","errors","has","domProps","target","composing","$set","_e","hideModal","model","callback","$$v","filter","pageOptions","onChangePerPage","perPage","currentPage","last_page","totalRows","adding","isEditing","OnAdd","onChangePage","infoModal","id","title","resetInfoModal","content","staticRenderFns","Vue","classes","fieldsBagName","components","VueTypeaheadBootstrap","data","items","fields","text","sortBy","sortDesc","sortDirection","filterOn","sel","ListAuto","url","watch","computed","mounted","methods","OnSearch","fetch","then","response","console","onPagingInput","myProvider","res","vm","r","catch","err","TumLum","mapData","Object","x","kq","TenLop","alert","onSave","OnCancel","delRow","isAdded","doCancel","item","getLastPage","gotoPage","toast","variant","solid","info","onFiltered","showModal","component","XuLyErr","code","JSON","parse","stringify","status","msg","message","request","fetchClient","defaultOptions","baseURL","method","headers","instance","axios","interceptors","use","config","token","localStorage","getItem","Authorization"],"sourceRoot":""}