{"version":3,"file":"js/3393.86b7383a.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/NguoiDung2/NDRoleClaim.vue?a797","webpack://vue_start_1/src/views/NguoiDung2/NDRoleClaim.vue","webpack://vue_start_1/./src/views/NguoiDung2/NDRoleClaim.vue?5c73","webpack://vue_start_1/./src/views/NguoiDung2/NDRoleClaim.vue?c835","webpack://vue_start_1/./src/views/NguoiDung2/NDRoleClaim.vue","webpack://vue_start_1/./src/TumLum.js","webpack://vue_start_1/./src/fetchClient.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"MonHocToan\"},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./NDRoleClaim.vue').default}}),_c('h1',[_vm._v(\"Role Claims\")]),_c('div',[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSave.apply(null, arguments)}}},[_c('b-table',{ref:\"mytable\",attrs:{\"thead-class\":\"myTable\",\"items\":_vm.myProvider,\"fields\":_vm.fields,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"filter-included-fields\":_vm.filterOn,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"stacked\":\"sm\",\"show-empty\":\"\",\"small\":\"\",\"fixed\":\"\",\"outlined\":\"\",\"bordered\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\nvar value = ref.value;\nvar item = ref.item;\nvar key = ref.field.key;\nreturn [(_vm.sel[_vm.pri] != item[_vm.pri])?[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:[_vm._v(\" \"+_vm._s(value)+\" \")]]:_vm._e()]:_vm._e(),((_vm.sel[_vm.pri] == item[_vm.pri] || item[_vm.pri] == 0))?[(key == 'Id')?[_c('span',[_vm._v(_vm._s(value))])]:_vm._e(),(key == 'ClaimValue')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e(),(key == 'RoleStr')?[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:(''),expression:\"''\"}],class:{ danger: _vm.errors.has(key) },attrs:{\"multiple\":\"\",\"name\":key,\"reduce\":function (option) { return option.id; },\"options\":_vm.ds_roles,\"has-error\":_vm.errors.has(key)},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e()]:_vm._e()]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}},{key:\"bottom-row\",fn:function(data){return [_c('td',{attrs:{\"colspan\":data.columns}},[_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Tìm kiếm\",\"label-for\":\"filter-input\",\"label-cols-sm\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-input-group',{attrs:{\"size\":\"sm\"}},[_c('b-form-input',{attrs:{\"id\":\"filter-input\",\"type\":\"search\",\"placeholder\":\"Type to Search\"},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(\"Clear\")])],1)],1)],1)],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Số dòng\",\"label-for\":\"per-page-select\",\"label-cols-sm\":\"6\",\"label-cols-md\":\"4\",\"label-cols-lg\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-form-select',{attrs:{\"id\":\"per-page-select\",\"options\":_vm.pageOptions,\"size\":\"sm\"},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1),_c('b-col',{staticClass:\"my-1 text-right\",attrs:{\"sm\":\"6\"}},[_c('span',[_vm._v(\"page : \"+_vm._s(_vm.currentPage)+\" / \"+_vm._s(_vm.last_page)+\" of \"+_vm._s(_vm.totalRows)+\" \")]),_c('b-button',{staticClass:\"mr-1 mb-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"size\":\"sm\"},on:{\"click\":_vm.OnAdd}},[_c('b',[_vm._v(\"Add\")])])],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-pagination',{ref:\"mypage\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"size\":\"sm\",\"align\":\"fill\",\"first-text\":\"First\",\"prev-text\":\"Prev\",\"next-text\":\"Next\",\"last-text\":\"Last\"},on:{\"change\":_vm.onChangePage,\"input\":_vm.onPagingInput},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1)]}},{key:\"row-details\",fn:function(row){return [_c('b-card',[_c('ul',_vm._l((row.item),function(value,key){return _c('li',{key:key},[_vm._v(_vm._s(key)+\": \"+_vm._s(value))])}),0)])]}}])})],1),_c('b-modal',{attrs:{\"id\":_vm.infoModal.id,\"title\":_vm.infoModal.title,\"ok-only\":\"\"},on:{\"hide\":_vm.resetInfoModal}},[_c('pre',[_vm._v(_vm._s(_vm.infoModal.content))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"MonHocToan\">\r\n        <raw-loader :mytxt=\"require('!raw-loader!./NDRoleClaim.vue').default\"></raw-loader>\r\n        <h1>Role Claims</h1>\r\n        <div>\r\n            <form @submit.stop.prevent=\"onSave\">\r\n                <!-- <div>{{ ds_roles }}</div> -->\r\n                <b-table thead-class=\"myTable\" ref=\"mytable\" :items=\"myProvider\" :fields=\"fields\"\r\n                    :current-page=\"currentPage\" :per-page=\"perPage\" :filter=\"filter\" :filter-included-fields=\"filterOn\"\r\n                    :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" :sort-direction=\"sortDirection\" stacked=\"sm\"\r\n                    show-empty small fixed outlined bordered @filtered=\"onFiltered\">\r\n                    <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n                        <template v-if=\"sel[pri] != item[pri]\">\r\n                            <template v-if=\"item[pri] != 0\">\r\n                                <template v-if=\"key == pri\">\r\n                                    {{ value }}\r\n                                </template>\r\n                                <template v-else>\r\n                                    {{ value }}\r\n                                </template>\r\n                            </template>\r\n                        </template>\r\n                        <template v-if=\"(sel[pri] == item[pri] || item[pri] == 0)\">\r\n                            <template v-if=\"key == 'Id'\">\r\n                                <span>{{ value }}</span>\r\n                            </template>\r\n\r\n                            <!-- \"Id\":1,\r\n                            \"ClaimValue\":\"them.hs\",\r\n                            \"RoleStr\":\"1,4,3,2\"}, -->\r\n\r\n\r\n                            <template v-if=\"key == 'ClaimValue'\">\r\n                                <b-form-input v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\" placeholder=\"\"\r\n                                    :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                                </b-form-input>\r\n                            </template>\r\n                            <template v-if=\"key == 'RoleStr'\">\r\n                                <v-select multiple v-model=\"item[key]\" v-validate=\"''\" :name=\"key\"\r\n                                :reduce=\"(option) => option.id\" :options=\"\r\n                                    ds_roles\r\n                                \" :has-error=\"errors.has(key)\" :class=\"{ danger: errors.has(key) }\" />\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                    <template #cell(cmd)=\"row\">\r\n                        <template v-if=\"row.item[pri] == 0\">\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                        <template v-else>\r\n                            <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnEdit(row.item)\">\r\n                                <b-icon-pencil-square></b-icon-pencil-square>\r\n                            </b-button>\r\n                            <!-- <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnDel(row.item)\">\r\n                                <b-icon-trash></b-icon-trash>\r\n                            </b-button> -->\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                    </template>\r\n\r\n                    <template #bottom-row=\"data\">\r\n                        <td :colspan=\"data.columns\">\r\n                            <b-row>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Tìm kiếm\" label-for=\"filter-input\" label-cols-sm=\"3\"\r\n                                        label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                                        <b-input-group size=\"sm\">\r\n                                            <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\r\n                                                placeholder=\"Type to Search\">\r\n                                            </b-form-input>\r\n\r\n                                            <b-input-group-append>\r\n                                                <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                                            </b-input-group-append>\r\n                                        </b-input-group>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Số dòng\" label-for=\"per-page-select\" label-cols-sm=\"6\"\r\n                                        label-cols-md=\"4\" label-cols-lg=\"3\" label-align-sm=\"right\" label-size=\"sm\"\r\n                                        class=\"mb-0\">\r\n                                        <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\"\r\n                                            size=\"sm\">\r\n                                        </b-form-select>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n\r\n                                <b-col sm=\"6\" class=\"my-1 text-right\">\r\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\r\n                                    <b-button :disabled=\"adding == true || isEditing() == true\" class=\"mr-1 mb-1\" size=\"sm\"\r\n                                        @click=\"OnAdd\">\r\n                                        <b>Add</b></b-button>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-pagination :disabled=\"adding == true || isEditing() == true\" ref=\"mypage\"\r\n                                        v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" size=\"sm\"\r\n                                        align=\"fill\" @change=\"onChangePage\" @input=\"onPagingInput\" first-text=\"First\"\r\n                                        prev-text=\"Prev\" next-text=\"Next\" last-text=\"Last\">\r\n                                    </b-pagination>\r\n                                </b-col>\r\n                            </b-row>\r\n\r\n                        </td>\r\n                    </template>\r\n\r\n                    <template #row-details=\"row\">\r\n                        <b-card>\r\n                            <ul>\r\n                                <li v-for=\"(value, key) in row.item\" :key=\"key\">{{ key }}: {{ value }}</li>\r\n                            </ul>\r\n                        </b-card>\r\n                    </template>\r\n                </b-table>\r\n\r\n            </form>\r\n            <!-- Info modal -->\r\n            <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n                <pre>{{ infoModal.content }}</pre>\r\n            </b-modal>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\n\r\nimport VueTypeaheadBootstrap from \"vue-typeahead-bootstrap\";\r\nimport { debounce } from \"lodash\";\r\n\r\nimport fetchClient from \"@/fetchClient\";\r\nimport moment from \"moment\";\r\nimport TumLum from \"@/TumLum\";\r\nexport default {\r\n    components: {\r\n        VueTypeaheadBootstrap\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [\r\n                {\r\n                    key: 'Id',\r\n                    formatter: (value, key, item) => {\r\n                        return value;\r\n                    },\r\n                    sortable: true,\r\n                    thClass: 'text-center',\r\n                    tdClass: 'text-center align-middle',\r\n                    thStyle: { width: \"8%\" },\r\n                },\r\n                //{ key: 'TenHocSinh', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"80%\" }, },\r\n                { key: 'ClaimValue', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"20%\" }, },\r\n                {\r\n                    key: 'RoleStr',\r\n\r\n                    formatter: (value, key, item) => {\r\n                        let kq = \"\";//JSON.stringify(this.ds_roles); //value;\r\n                        let ar = this.ds_roles;\r\n                        let ar2 = [];\r\n                        value.forEach(x => {\r\n                            let index = ar.findIndex(y => y.id == x);\r\n                            if (index >= 0) {\r\n                                ar2.push(ar[index].label);\r\n                            }\r\n                        })\r\n                        kq = JSON.stringify(ar2);\r\n                        return kq;\r\n                    },\r\n                    sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"60%\" },\r\n                },\r\n                {\r\n                    key: 'cmd',\r\n                    class: 'text-center',\r\n                    thClass: 'text-center',\r\n                    tdClass: 'align-middle',\r\n                    thStyle: { width: \"12%\" }\r\n                }\r\n            ],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            pageOptions: [5, 10, 15, { value: 100, text: \"Show a lot\" }],\r\n            sortBy: '',\r\n            sortDesc: false,\r\n            sortDirection: 'asc',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: 'info-modal',\r\n                title: '',\r\n                content: ''\r\n            },\r\n            sel: {},\r\n            pri: \"Id\",\r\n            last_page: 0,\r\n            adding: false,\r\n            ListAuto: [],\r\n            Lops: [],\r\n\r\n            url: `/api/HocSinh4`,\r\n            ds_roles: []\r\n\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        last_page: function (newValue, oldValue) {\r\n        },\r\n        currentPage: function (val) {\r\n        },\r\n        totalRows: function (newValue, oldValue) {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        OnSearch: debounce(function (query) {\r\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(JSON.stringify(data))\r\n                    this.ListAuto = data.items;\r\n                });\r\n        }, 500),\r\n        onPagingInput() {\r\n        },\r\n        myProvider(ctx) {\r\n            let currentPage = ctx.currentPage;\r\n            let perPage = ctx.perPage;\r\n            let sortBy = ctx.sortBy;\r\n            let sortDesc = ctx.sortDesc;\r\n            let vm = this;\r\n            let url = `/api/NguoiDung5/ClaimRole_GetPage2`;\r\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\r\n            if (ctx.filter) {\r\n                let filter = ctx.filter;\r\n                url = `${url}&filter=${filter}`;\r\n            }\r\n            return fetchClient.get(url)\r\n                .then(res => {\r\n                    this.GetComboRole();\r\n                    //alert(JSON.stringify(res));\r\n                    //this.LdsLop();\r\n                    /*\r\n                    {\"data\":{\"last_page\":2,\"rowCount\":7,\r\n                        \"data\":[{\r\n                            \"Id\":1,\r\n                            \"ClaimValue\":\"them.hs\",\r\n                            \"RoleStr\":\"1,4,3,2\"},\r\n                    */\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    if (this.adding == true) {\r\n                        /*\r\n                        let r2={}\r\n                        r2[this.pri]=0;\r\n                        this.fields.forEach(element => {\r\n                            if(element.key!='cmd' && element.key!=this.pri) r2[element.key]=\"xyz\"\r\n                        });\r\n                        alert(JSON.stringify(r2));\r\n                        {\"Id\":0,\"TenHocSinh\":\"xyz\",\"NamSinh\":\"xyz\",\"LopHocId\":\"xyz\"}\r\n                        */\r\n                        let r = {};\r\n                        r[this.pri] = 0;\r\n                        r[\"TenHocSinh\"] = \"thuc\";\r\n                        r[\"NamSinh\"] = new Date();\r\n                        r[\"LopHocId\"] = null;\r\n                        res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                })\r\n        },\r\n        mapData(data) {\r\n            let kq = [];\r\n            data.forEach(obj => {\r\n                let x = {};\r\n                Object.keys(obj).forEach(key => {\r\n                    let k = key;\r\n                    if (k == \"RoleStr\") {\r\n                        x[k] = (obj[key] != \"\") ? obj[key].split(\",\") : [];\r\n                    } else {\r\n                        x[k] = obj[key];\r\n                    }\r\n                });\r\n                kq.push(x);\r\n            })\r\n            return kq;\r\n        },\r\n        onChangePage() {\r\n            this.sel = {};\r\n            this.adding = false;\r\n        },\r\n        OnAdd() {\r\n            this.adding = true;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        OnEdit(item) {\r\n            if (JSON.stringify(this.sel) != \"{}\" || this.adding == true) {\r\n                return;\r\n            }\r\n            this.sel = JSON.parse(JSON.stringify(item));\r\n            //this.getById(item[this.pri]);\r\n\r\n            return;\r\n            this.getById(item[this.pri]).then(res => {\r\n                this.sel = res.data;\r\n            })\r\n        },\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r);\r\n                } else {\r\n                    r.RoleStr=r.RoleStr.toString();                    \r\n                    //alert(JSON.stringify(r));\r\n                    //return;\r\n                    this.Update(r);\r\n                }\r\n            });\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] != 0) {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            } else {\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            }\r\n        },\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]);\r\n        },\r\n        delRow(item) {\r\n            let id = item.id;\r\n            let index = this.items.findIndex(x => x.id == id);\r\n            this.items.splice(index, 1);\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != \"{}\"\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x.id == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        gotoPage(page) {\r\n            this.currentPage = page;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async Add(r) {\r\n            return await fetchClient.post(`${this.url}/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.adding = false;\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update_(r) {\r\n            return await fetchClient.post(`${this.url}/Update`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.adding = false;\r\n                    this.sel = {};\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`/api/NguoiDung5/RoleClaimSave`,r)\r\n            .then(res=>{\r\n                this.toast(`${res.data.kq}`);\r\n                this.adding = false;\r\n                this.sel = {};\r\n                this.$refs.mytable.refresh();\r\n            }).catch(err=>{\r\n                TumLum.XuLyErr(err);\r\n            })\r\n        },\r\n\r\n        async Del(id) {\r\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\r\n                .then(res => {\r\n                    if (res.data.kq == 'nook') {\r\n                        this.toast(`${res.data.msg}`);\r\n                        return;\r\n                    }\r\n                    this.toast(`${res.data.msg}`);\r\n                    let lastPage = this.getLastPage(this.totalRows - 1);\r\n                    if (lastPage < this.currentPage) this.currentPage = lastPage;\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\r\n                .then(res => {\r\n                    this.sel = res.data\r\n                    //alert(JSON.stringify(res));\r\n\r\n                    //{\"data\":{\"Id\":1003,\"TenHocSinh\":\"Võ Tòng\",\"NamSinh\":\"2023-02-26T00:00:00\",\"LopHocId\":1029},\"statu\r\n                    //this.sel = JSON.parse(JSON.stringify(item));\r\n\r\n                    // this.sel2 = res.data;\r\n                    // this.showModal();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async LdsLop() {\r\n            return await fetchClient.get(`/api/LopHoc4/LdsComboItem`)\r\n                .then(res => {\r\n                    this.Lops = res.data.list;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async GetComboRole() {\r\n            return await fetchClient.get(`/api/NguoiDung5/GetComboRole`).then(res => {\r\n                this.ds_roles = res.data;\r\n            }).catch(err => {\r\n\r\n            })\r\n        },\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = ''\r\n            this.infoModal.content = ''\r\n        },\r\n        onFiltered(filteredItems) {\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NDRoleClaim.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NDRoleClaim.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NDRoleClaim.vue?vue&type=template&id=57129b24&\"\nimport script from \"./NDRoleClaim.vue?vue&type=script&lang=js&\"\nexport * from \"./NDRoleClaim.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div class=\\\"MonHocToan\\\">\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./NDRoleClaim.vue').default\\\"></raw-loader>\\r\\n        <h1>Role Claims</h1>\\r\\n        <div>\\r\\n            <form @submit.stop.prevent=\\\"onSave\\\">\\r\\n                <!-- <div>{{ ds_roles }}</div> -->\\r\\n                <b-table thead-class=\\\"myTable\\\" ref=\\\"mytable\\\" :items=\\\"myProvider\\\" :fields=\\\"fields\\\"\\r\\n                    :current-page=\\\"currentPage\\\" :per-page=\\\"perPage\\\" :filter=\\\"filter\\\" :filter-included-fields=\\\"filterOn\\\"\\r\\n                    :sort-by.sync=\\\"sortBy\\\" :sort-desc.sync=\\\"sortDesc\\\" :sort-direction=\\\"sortDirection\\\" stacked=\\\"sm\\\"\\r\\n                    show-empty small fixed outlined bordered @filtered=\\\"onFiltered\\\">\\r\\n                    <template v-slot:cell()=\\\"{ value, item, field: { key } }\\\">\\r\\n                        <template v-if=\\\"sel[pri] != item[pri]\\\">\\r\\n                            <template v-if=\\\"item[pri] != 0\\\">\\r\\n                                <template v-if=\\\"key == pri\\\">\\r\\n                                    {{ value }}\\r\\n                                </template>\\r\\n                                <template v-else>\\r\\n                                    {{ value }}\\r\\n                                </template>\\r\\n                            </template>\\r\\n                        </template>\\r\\n                        <template v-if=\\\"(sel[pri] == item[pri] || item[pri] == 0)\\\">\\r\\n                            <template v-if=\\\"key == 'Id'\\\">\\r\\n                                <span>{{ value }}</span>\\r\\n                            </template>\\r\\n\\r\\n                            <!-- \\\"Id\\\":1,\\r\\n                            \\\"ClaimValue\\\":\\\"them.hs\\\",\\r\\n                            \\\"RoleStr\\\":\\\"1,4,3,2\\\"}, -->\\r\\n\\r\\n\\r\\n                            <template v-if=\\\"key == 'ClaimValue'\\\">\\r\\n                                <b-form-input v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\" placeholder=\\\"\\\"\\r\\n                                    :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                                </b-form-input>\\r\\n                            </template>\\r\\n                            <template v-if=\\\"key == 'RoleStr'\\\">\\r\\n                                <v-select multiple v-model=\\\"item[key]\\\" v-validate=\\\"''\\\" :name=\\\"key\\\"\\r\\n                                :reduce=\\\"(option) => option.id\\\" :options=\\\"\\r\\n                                    ds_roles\\r\\n                                \\\" :has-error=\\\"errors.has(key)\\\" :class=\\\"{ danger: errors.has(key) }\\\" />\\r\\n                            </template>\\r\\n                        </template>\\r\\n                    </template>\\r\\n                    <template #cell(cmd)=\\\"row\\\">\\r\\n                        <template v-if=\\\"row.item[pri] == 0\\\">\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                        <template v-else>\\r\\n                            <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnEdit(row.item)\\\">\\r\\n                                <b-icon-pencil-square></b-icon-pencil-square>\\r\\n                            </b-button>\\r\\n                            <!-- <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnDel(row.item)\\\">\\r\\n                                <b-icon-trash></b-icon-trash>\\r\\n                            </b-button> -->\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                    </template>\\r\\n\\r\\n                    <template #bottom-row=\\\"data\\\">\\r\\n                        <td :colspan=\\\"data.columns\\\">\\r\\n                            <b-row>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Tìm kiếm\\\" label-for=\\\"filter-input\\\" label-cols-sm=\\\"3\\\"\\r\\n                                        label-align-sm=\\\"right\\\" label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                                        <b-input-group size=\\\"sm\\\">\\r\\n                                            <b-form-input id=\\\"filter-input\\\" v-model=\\\"filter\\\" type=\\\"search\\\"\\r\\n                                                placeholder=\\\"Type to Search\\\">\\r\\n                                            </b-form-input>\\r\\n\\r\\n                                            <b-input-group-append>\\r\\n                                                <b-button :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\">Clear</b-button>\\r\\n                                            </b-input-group-append>\\r\\n                                        </b-input-group>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Số dòng\\\" label-for=\\\"per-page-select\\\" label-cols-sm=\\\"6\\\"\\r\\n                                        label-cols-md=\\\"4\\\" label-cols-lg=\\\"3\\\" label-align-sm=\\\"right\\\" label-size=\\\"sm\\\"\\r\\n                                        class=\\\"mb-0\\\">\\r\\n                                        <b-form-select id=\\\"per-page-select\\\" v-model=\\\"perPage\\\" :options=\\\"pageOptions\\\"\\r\\n                                            size=\\\"sm\\\">\\r\\n                                        </b-form-select>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1 text-right\\\">\\r\\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\\r\\n                                    <b-button :disabled=\\\"adding == true || isEditing() == true\\\" class=\\\"mr-1 mb-1\\\" size=\\\"sm\\\"\\r\\n                                        @click=\\\"OnAdd\\\">\\r\\n                                        <b>Add</b></b-button>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-pagination :disabled=\\\"adding == true || isEditing() == true\\\" ref=\\\"mypage\\\"\\r\\n                                        v-model=\\\"currentPage\\\" :total-rows=\\\"totalRows\\\" :per-page=\\\"perPage\\\" size=\\\"sm\\\"\\r\\n                                        align=\\\"fill\\\" @change=\\\"onChangePage\\\" @input=\\\"onPagingInput\\\" first-text=\\\"First\\\"\\r\\n                                        prev-text=\\\"Prev\\\" next-text=\\\"Next\\\" last-text=\\\"Last\\\">\\r\\n                                    </b-pagination>\\r\\n                                </b-col>\\r\\n                            </b-row>\\r\\n\\r\\n                        </td>\\r\\n                    </template>\\r\\n\\r\\n                    <template #row-details=\\\"row\\\">\\r\\n                        <b-card>\\r\\n                            <ul>\\r\\n                                <li v-for=\\\"(value, key) in row.item\\\" :key=\\\"key\\\">{{ key }}: {{ value }}</li>\\r\\n                            </ul>\\r\\n                        </b-card>\\r\\n                    </template>\\r\\n                </b-table>\\r\\n\\r\\n            </form>\\r\\n            <!-- Info modal -->\\r\\n            <b-modal :id=\\\"infoModal.id\\\" :title=\\\"infoModal.title\\\" ok-only @hide=\\\"resetInfoModal\\\">\\r\\n                <pre>{{ infoModal.content }}</pre>\\r\\n            </b-modal>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n});\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\n\\r\\nimport VueTypeaheadBootstrap from \\\"vue-typeahead-bootstrap\\\";\\r\\nimport { debounce } from \\\"lodash\\\";\\r\\n\\r\\nimport fetchClient from \\\"@/fetchClient\\\";\\r\\nimport moment from \\\"moment\\\";\\r\\nimport TumLum from \\\"@/TumLum\\\";\\r\\nexport default {\\r\\n    components: {\\r\\n        VueTypeaheadBootstrap\\r\\n    },\\r\\n\\r\\n    data() {\\r\\n        return {\\r\\n            items: [\\r\\n            ],\\r\\n            fields: [\\r\\n                {\\r\\n                    key: 'Id',\\r\\n                    formatter: (value, key, item) => {\\r\\n                        return value;\\r\\n                    },\\r\\n                    sortable: true,\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'text-center align-middle',\\r\\n                    thStyle: { width: \\\"8%\\\" },\\r\\n                },\\r\\n                //{ key: 'TenHocSinh', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"80%\\\" }, },\\r\\n                { key: 'ClaimValue', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"20%\\\" }, },\\r\\n                {\\r\\n                    key: 'RoleStr',\\r\\n\\r\\n                    formatter: (value, key, item) => {\\r\\n                        let kq = \\\"\\\";//JSON.stringify(this.ds_roles); //value;\\r\\n                        let ar = this.ds_roles;\\r\\n                        let ar2 = [];\\r\\n                        value.forEach(x => {\\r\\n                            let index = ar.findIndex(y => y.id == x);\\r\\n                            if (index >= 0) {\\r\\n                                ar2.push(ar[index].label);\\r\\n                            }\\r\\n                        })\\r\\n                        kq = JSON.stringify(ar2);\\r\\n                        return kq;\\r\\n                    },\\r\\n                    sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"60%\\\" },\\r\\n                },\\r\\n                {\\r\\n                    key: 'cmd',\\r\\n                    class: 'text-center',\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'align-middle',\\r\\n                    thStyle: { width: \\\"12%\\\" }\\r\\n                }\\r\\n            ],\\r\\n            totalRows: 1,\\r\\n            currentPage: 1,\\r\\n            perPage: 5,\\r\\n            pageOptions: [5, 10, 15, { value: 100, text: \\\"Show a lot\\\" }],\\r\\n            sortBy: '',\\r\\n            sortDesc: false,\\r\\n            sortDirection: 'asc',\\r\\n            filter: null,\\r\\n            filterOn: [],\\r\\n            infoModal: {\\r\\n                id: 'info-modal',\\r\\n                title: '',\\r\\n                content: ''\\r\\n            },\\r\\n            sel: {},\\r\\n            pri: \\\"Id\\\",\\r\\n            last_page: 0,\\r\\n            adding: false,\\r\\n            ListAuto: [],\\r\\n            Lops: [],\\r\\n\\r\\n            url: `/api/HocSinh4`,\\r\\n            ds_roles: []\\r\\n\\r\\n        }\\r\\n    },\\r\\n\\r\\n    watch: {\\r\\n        last_page: function (newValue, oldValue) {\\r\\n        },\\r\\n        currentPage: function (val) {\\r\\n        },\\r\\n        totalRows: function (newValue, oldValue) {\\r\\n        }\\r\\n    },\\r\\n    computed: {\\r\\n    },\\r\\n    mounted() {\\r\\n    },\\r\\n    methods: {\\r\\n        OnSearch: debounce(function (query) {\\r\\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\\r\\n                .then((response) => {\\r\\n                    return response.json();\\r\\n                })\\r\\n                .then((data) => {\\r\\n                    console.log(JSON.stringify(data))\\r\\n                    this.ListAuto = data.items;\\r\\n                });\\r\\n        }, 500),\\r\\n        onPagingInput() {\\r\\n        },\\r\\n        myProvider(ctx) {\\r\\n            let currentPage = ctx.currentPage;\\r\\n            let perPage = ctx.perPage;\\r\\n            let sortBy = ctx.sortBy;\\r\\n            let sortDesc = ctx.sortDesc;\\r\\n            let vm = this;\\r\\n            let url = `/api/NguoiDung5/ClaimRole_GetPage2`;\\r\\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\\r\\n            if (ctx.filter) {\\r\\n                let filter = ctx.filter;\\r\\n                url = `${url}&filter=${filter}`;\\r\\n            }\\r\\n            return fetchClient.get(url)\\r\\n                .then(res => {\\r\\n                    this.GetComboRole();\\r\\n                    //alert(JSON.stringify(res));\\r\\n                    //this.LdsLop();\\r\\n                    /*\\r\\n                    {\\\"data\\\":{\\\"last_page\\\":2,\\\"rowCount\\\":7,\\r\\n                        \\\"data\\\":[{\\r\\n                            \\\"Id\\\":1,\\r\\n                            \\\"ClaimValue\\\":\\\"them.hs\\\",\\r\\n                            \\\"RoleStr\\\":\\\"1,4,3,2\\\"},\\r\\n                    */\\r\\n                    vm.last_page = res.data.last_page;\\r\\n                    vm.totalRows = res.data.rowCount;\\r\\n                    if (this.adding == true) {\\r\\n                        /*\\r\\n                        let r2={}\\r\\n                        r2[this.pri]=0;\\r\\n                        this.fields.forEach(element => {\\r\\n                            if(element.key!='cmd' && element.key!=this.pri) r2[element.key]=\\\"xyz\\\"\\r\\n                        });\\r\\n                        alert(JSON.stringify(r2));\\r\\n                        {\\\"Id\\\":0,\\\"TenHocSinh\\\":\\\"xyz\\\",\\\"NamSinh\\\":\\\"xyz\\\",\\\"LopHocId\\\":\\\"xyz\\\"}\\r\\n                        */\\r\\n                        let r = {};\\r\\n                        r[this.pri] = 0;\\r\\n                        r[\\\"TenHocSinh\\\"] = \\\"thuc\\\";\\r\\n                        r[\\\"NamSinh\\\"] = new Date();\\r\\n                        r[\\\"LopHocId\\\"] = null;\\r\\n                        res.data.data.unshift(r);\\r\\n                    }\\r\\n                    return vm.mapData(res.data.data); //res.data.data;\\r\\n                })\\r\\n        },\\r\\n        mapData(data) {\\r\\n            let kq = [];\\r\\n            data.forEach(obj => {\\r\\n                let x = {};\\r\\n                Object.keys(obj).forEach(key => {\\r\\n                    let k = key;\\r\\n                    if (k == \\\"RoleStr\\\") {\\r\\n                        x[k] = (obj[key] != \\\"\\\") ? obj[key].split(\\\",\\\") : [];\\r\\n                    } else {\\r\\n                        x[k] = obj[key];\\r\\n                    }\\r\\n                });\\r\\n                kq.push(x);\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        onChangePage() {\\r\\n            this.sel = {};\\r\\n            this.adding = false;\\r\\n        },\\r\\n        OnAdd() {\\r\\n            this.adding = true;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        OnEdit(item) {\\r\\n            if (JSON.stringify(this.sel) != \\\"{}\\\" || this.adding == true) {\\r\\n                return;\\r\\n            }\\r\\n            this.sel = JSON.parse(JSON.stringify(item));\\r\\n            //this.getById(item[this.pri]);\\r\\n\\r\\n            return;\\r\\n            this.getById(item[this.pri]).then(res => {\\r\\n                this.sel = res.data;\\r\\n            })\\r\\n        },\\r\\n        onSave(item) {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(item));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r);\\r\\n                } else {\\r\\n                    r.RoleStr=r.RoleStr.toString();                    \\r\\n                    //alert(JSON.stringify(r));\\r\\n                    //return;\\r\\n                    this.Update(r);\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        OnCancel(item) {\\r\\n            if (item[this.pri] != 0) {\\r\\n                this.doCancel(item);\\r\\n                this.sel = {};\\r\\n            } else {\\r\\n                this.adding = false;\\r\\n                this.$refs.mytable.refresh();\\r\\n            }\\r\\n        },\\r\\n        OnDel(item) {\\r\\n            this.Del(item[this.pri]);\\r\\n        },\\r\\n        delRow(item) {\\r\\n            let id = item.id;\\r\\n            let index = this.items.findIndex(x => x.id == id);\\r\\n            this.items.splice(index, 1);\\r\\n        },\\r\\n        isEditing() {\\r\\n            return JSON.stringify(this.sel) != \\\"{}\\\"\\r\\n        },\\r\\n        isAdded() {\\r\\n            let kq = false;\\r\\n            this.items.forEach(x => {\\r\\n                if (x.id == 0) kq = true;\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        doCancel(item) {\\r\\n            for (let key in item) {\\r\\n                if (item[key] != this.sel[key]) {\\r\\n                    item[key] = this.sel[key]\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        getLastPage(count) {\\r\\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\\r\\n            let du = count % pageSize;\\r\\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n        },\\r\\n        gotoPage(page) {\\r\\n            this.currentPage = page;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n        async Add(r) {\\r\\n            return await fetchClient.post(`${this.url}/Add`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.adding = false;\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Update_(r) {\\r\\n            return await fetchClient.post(`${this.url}/Update`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.adding = false;\\r\\n                    this.sel = {};\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Update(r) {\\r\\n            return await fetchClient.post(`/api/NguoiDung5/RoleClaimSave`,r)\\r\\n            .then(res=>{\\r\\n                this.toast(`${res.data.kq}`);\\r\\n                this.adding = false;\\r\\n                this.sel = {};\\r\\n                this.$refs.mytable.refresh();\\r\\n            }).catch(err=>{\\r\\n                TumLum.XuLyErr(err);\\r\\n            })\\r\\n        },\\r\\n\\r\\n        async Del(id) {\\r\\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\\r\\n                .then(res => {\\r\\n                    if (res.data.kq == 'nook') {\\r\\n                        this.toast(`${res.data.msg}`);\\r\\n                        return;\\r\\n                    }\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    let lastPage = this.getLastPage(this.totalRows - 1);\\r\\n                    if (lastPage < this.currentPage) this.currentPage = lastPage;\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async getById(id) {\\r\\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.sel = res.data\\r\\n                    //alert(JSON.stringify(res));\\r\\n\\r\\n                    //{\\\"data\\\":{\\\"Id\\\":1003,\\\"TenHocSinh\\\":\\\"Võ Tòng\\\",\\\"NamSinh\\\":\\\"2023-02-26T00:00:00\\\",\\\"LopHocId\\\":1029},\\\"statu\\r\\n                    //this.sel = JSON.parse(JSON.stringify(item));\\r\\n\\r\\n                    // this.sel2 = res.data;\\r\\n                    // this.showModal();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async LdsLop() {\\r\\n            return await fetchClient.get(`/api/LopHoc4/LdsComboItem`)\\r\\n                .then(res => {\\r\\n                    this.Lops = res.data.list;\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async GetComboRole() {\\r\\n            return await fetchClient.get(`/api/NguoiDung5/GetComboRole`).then(res => {\\r\\n                this.ds_roles = res.data;\\r\\n            }).catch(err => {\\r\\n\\r\\n            })\\r\\n        },\\r\\n        info(item, index, button) {\\r\\n            this.infoModal.title = `Row index: ${index}`\\r\\n            this.infoModal.content = JSON.stringify(item, null, 2)\\r\\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\\r\\n        },\\r\\n        resetInfoModal() {\\r\\n            this.infoModal.title = ''\\r\\n            this.infoModal.content = ''\\r\\n        },\\r\\n        onFiltered(filteredItems) {\\r\\n            this.totalRows = filteredItems.length\\r\\n            this.currentPage = 1\\r\\n        }\\r\\n    }\\r\\n}\\r\\n</script>\";","export default {\r\n    XuLyErr(err) {\r\n        let code = JSON.parse(JSON.stringify(err)).status;\r\n        if (code == 400) {\r\n            let msg = JSON.parse(JSON.stringify(err.response)).data.message;\r\n            alert(msg);\r\n        } else {\r\n            if (err.response) {\r\n                if (err.response.status == 401)\r\n                    alert(\"Chưa đăng nhập hoặc token hết hạn\");\r\n                else if (err.response.status == 403)\r\n                    alert(\"Bạn ko có quyền\");\r\n            } else if (err.request) {\r\n                alert(JSON.stringify(err.request));\r\n            } else if (err.message) {\r\n                alert(JSON.stringify(err.message));\r\n            }\r\n        }\r\n    }\r\n}\r\n  /*\r\nimport TumLum from '@/TumLum';\r\n*/","import axios from 'axios';\r\n\r\nconst fetchClient = () => {\r\n  const defaultOptions = {\r\n    baseURL: '',\r\n    method: 'get',\r\n    headers: {\r\n      //'Content-Type': 'application/json',\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n  };\r\n\r\n  // Create instance\r\n  let instance = axios.create(defaultOptions);\r\n\r\n  // Set the AUTH token for any request\r\n  instance.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem('token');\r\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\r\n    return config;\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport default fetchClient();"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","on","$event","stopPropagation","preventDefault","onSave","apply","arguments","ref","myProvider","fields","currentPage","perPage","filter","filterOn","sortBy","sortDesc","sortDirection","onFiltered","scopedSlots","_u","key","fn","value","item","field","sel","pri","_s","_e","directives","name","rawName","expression","class","errors","has","model","callback","$$v","$set","danger","option","id","ds_roles","row","OnCancel","adding","isEditing","OnEdit","data","columns","pageOptions","last_page","totalRows","OnAdd","onChangePage","onPagingInput","_l","infoModal","title","resetInfoModal","content","staticRenderFns","Vue","classes","fieldsBagName","components","VueTypeaheadBootstrap","items","formatter","sortable","thClass","tdClass","thStyle","width","ar2","kq","text","ListAuto","Lops","url","watch","computed","mounted","methods","OnSearch","fetch","then","response","console","res","vm","r","mapData","Object","x","OnDel","delRow","isAdded","doCancel","getLastPage","gotoPage","toast","variant","solid","catch","err","TumLum","info","component","XuLyErr","code","JSON","parse","stringify","status","msg","message","alert","request","fetchClient","defaultOptions","baseURL","method","headers","instance","axios","interceptors","use","config","token","localStorage","getItem","Authorization"],"sourceRoot":""}