"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[7458],{37458:function(n,t,r){r.r(t),r.d(t,{default:function(){return a}});var e=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"MonHocToan"},[e("raw-loader",{attrs:{mytxt:r(1192).Z}}),e("h1",[n._v("List page")]),e("div",[e("ul",n._l(n.ds,(function(t){return e("li",{key:t.id},[n._v(" "+n._s(t)+" "),e("button",{on:{click:function(r){return n.onEdit(t)}}},[n._v("Edit")])])})),0)])],1)},i=[],d=(r(26699),{name:"Tpl",components:{},data(){return{ds:[{id:1,ten:"Ba",pid:0},{id:2,ten:"teo",pid:1},{id:3,ten:"ti",pid:1},{id:4,ten:"vu",pid:1},{id:5,ten:"xuka",pid:3},{id:6,ten:"tini",pid:3}]}},mounted(){this.bdf()},methods:{getItemById(n,t){let r=n.findIndex((n=>n.id==t));return r<0?null:n[r]},bdf(){let n=[],t=[],r=1,e=0;t.push(r),n.push(this.getItemById(this.ds,r));while(0!=n.length){let r=n.pop();console.log(`${JSON.stringify(r)} - level : ${e}`);let i=0;this.ds.forEach((e=>{e.pid==r.id&&0==t.includes(e.id)&&(n.push(e),i++)})),0==i?e=0:e++}}}}),l=d,s=r(1001),u=(0,s.Z)(l,e,i,!1,null,null,null),a=u.exports},1192:function(n,t){t["Z"]="<template>\r\n    <div class=\"MonHocToan\">\r\n        <raw-loader :mytxt=\"require('!raw-loader!./TestTree.vue').default\"></raw-loader>\r\n        <h1>List page</h1>\r\n        <div>\r\n            <ul>\r\n                <li v-for=\"x in ds\" :key=\"x.id\">\r\n                    {{ x }}\r\n                    <button @click=\"onEdit(x)\">Edit</button>\r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Tpl',\r\n    components: {\r\n    },\r\n    data() {\r\n        return {\r\n            ds: [\r\n                { id: 1, ten: \"Ba\", pid: 0 },\r\n                { id: 2, ten: 'teo', pid: 1 },\r\n                { id: 3, ten: 'ti', pid: 1 },\r\n                { id: 4, ten: 'vu', pid: 1 },\r\n                { id: 5, ten: 'xuka', pid: 3 },\r\n                { id: 6, ten: 'tini', pid: 3 },\r\n            ]\r\n        }\r\n    },\r\n    mounted(){\r\n        this.bdf();\r\n    },\r\n    methods: {\r\n        getItemById(ds,id){\r\n            let index=ds.findIndex(x=>x.id==id);\r\n            if( index <0 ) return null;\r\n            return ds[index];\r\n        },\r\n        bdf(){\r\n            let s=[];\r\n            let daduyet=[];\r\n            let start=1;\r\n            let level=0;\r\n            daduyet.push(start);\r\n            s.push(this.getItemById(this.ds,start));\r\n            while(s.length!=0){\r\n                let layra=s.pop();\r\n                console.log(`${JSON.stringify(layra)} - level : ${level}`);\r\n                let count=0;\r\n                this.ds.forEach(x=>{\r\n                    if(x.pid==layra.id && daduyet.includes(x.id)==false  ){\r\n                        s.push(x);\r\n                        count++;\r\n                    }\r\n                })\r\n                if(count==0){\r\n                    level=0;\r\n                }else{\r\n                    level++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n<\/script>\r\n  "}}]);
//# sourceMappingURL=7458.f7167a44.js.map