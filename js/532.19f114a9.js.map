{"version":3,"file":"js/532.19f114a9.js","mappings":"mKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,aAAa,CAACG,MAAM,CAAC,MAAQ,cAAoDH,EAAG,KAAK,CAACJ,EAAIQ,GAAG,sBAAsBJ,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACE,YAAY,eAAeC,MAAM,CAAC,GAAK,MAAM,CAACH,EAAG,OAAO,CAACG,MAAM,CAAC,QAAU,uBAAuBE,GAAG,CAAC,OAAS,SAASC,GAAyD,OAAjDA,EAAOC,kBAAkBD,EAAOE,iBAAwBZ,EAAIa,SAASC,MAAM,KAAMC,cAAc,CAACX,EAAG,QAAQ,CAACY,IAAI,SAAST,MAAM,CAAC,MAAQ,GAAG,IAAM,sBAAsBH,EAAG,QAAQ,CAACY,IAAI,OAAOV,YAAY,MAAMC,MAAM,CAAC,KAAO,OAAO,GAAK,QAAQE,GAAG,CAAC,OAAST,EAAIiB,gBAAgBb,EAAG,MAAMA,EAAG,MAAM,CAACA,EAAG,SAAS,CAACE,YAAY,OAAOC,MAAM,CAAC,KAAO,WAAW,CAACP,EAAIQ,GAAG,YAAYJ,EAAG,SAAS,CAACE,YAAY,OAAOG,GAAG,CAAC,MAAQT,EAAIkB,WAAW,CAAClB,EAAIQ,GAAG,eAAe,KAAKJ,EAAG,QAAQ,CAACG,MAAM,CAAC,GAAK,OAAO,CAACH,EAAG,QAAQJ,EAAImB,GAAInB,EAAM,IAAE,SAASoB,GAAG,OAAOhB,EAAG,QAAQ,CAACiB,IAAID,EAAEE,UAAUhB,YAAY,eAAeC,MAAM,CAAC,GAAK,MAAM,CAACH,EAAG,MAAM,CAACG,MAAM,CAAC,MAAQ,OAAO,OAAS,KAAK,MAAQ,GAAG,IAAO,4BAA+Ba,EAAW,UAAG,IAAM,kBAAiB,GAAGhB,EAAG,OAAO,IAAI,IAAI,IAAI,IAC3pCmB,EAAkB,G,uCCgCtB,GACAC,KAAAA,MACAC,WAAAA,GAEAC,OACA,OACAC,GAAAA,KAGAC,QAAAA,CACAf,WACA,4BACA,sBACA,WACA,mBACAgB,EAAAA,OAAAA,SAAAA,GACAA,EAAAA,OAAAA,SAAAA,YACA,8BACA,yBACAC,GAAAA,CAAAA,KAAAA,MAAAA,MAAAA,IAAAA,IACAA,GAAAA,CAAAA,KAAAA,MAAAA,QAAAA,KAAAA,MAAAA,QAGAb,eACA,4BACA,OACA,mCACAa,GAAAA,CAAAA,KAAAA,MAAAA,QAAAA,KAAAA,MAAAA,OAGAZ,WACAY,GAAAA,CAAAA,KAAAA,MAAAA,QAAAA,KAAAA,MAAAA,IACAA,GAAAA,CAAAA,KAAAA,MAAAA,MAAAA,IAAAA,KAEAC,iBAAAA,GACA,4BACA,qBACAC,EAAAA,OAAAA,KACAC,EAAAA,EAAAA,SAEAD,EAAAA,QAAAA,EACAA,EAAAA,cAAAA,OAGA,qBACA,sBACA,8BAAAH,GACAK,OAAAC,IACAC,QAAAA,IAAAA,SCjFgR,I,UCO5QC,GAAY,OACd,EACAtC,EACAwB,GACA,EACA,KACA,KACA,MAIF,EAAec,EAAiB,S,oBClBhC","sources":["webpack://vue_start_1/./src/views/Upload2/AxiosUpload.vue?f0d6","webpack://vue_start_1/src/views/Upload2/AxiosUpload.vue","webpack://vue_start_1/./src/views/Upload2/AxiosUpload.vue?07f4","webpack://vue_start_1/./src/views/Upload2/AxiosUpload.vue?5130","webpack://vue_start_1/./src/views/Upload2/AxiosUpload.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"MonHocToan\"},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./AxiosUpload.vue').default}}),_c('h1',[_vm._v(\"AxiosUpload page\")]),_c('div',[_c('b-row',[_c('b-col',{staticClass:\"border-right\",attrs:{\"md\":\"2\"}},[_c('form',{attrs:{\"enctype\":\"multipart/form-data\"},on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onUpload.apply(null, arguments)}}},[_c('b-img',{ref:\"output\",attrs:{\"fluid\":\"\",\"alt\":\"Responsive image\"}}),_c('input',{ref:\"file\",staticClass:\"m-1\",attrs:{\"type\":\"file\",\"id\":\"file\"},on:{\"change\":_vm.onFileChange}}),_c('br'),_c('div',[_c('button',{staticClass:\"mr-1\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Upload\")]),_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onRemove}},[_vm._v(\"Remove\")])])],1)]),_c('b-col',{attrs:{\"md\":\"10\"}},[_c('b-row',_vm._l((_vm.ds),function(x){return _c('b-col',{key:x.imageName,staticClass:\"border-right\",attrs:{\"md\":\"1\"}},[_c('img',{attrs:{\"width\":\"100%\",\"height\":\"40\",\"fluid\":\"\",\"src\":(\"/api/FileUpload/GetImage/\" + (x.imageName)),\"alt\":\"Image 1\"}})])}),1),_c('hr')],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"MonHocToan\">\n    <raw-loader :mytxt=\"require('!raw-loader!./AxiosUpload.vue').default\"></raw-loader>\n    <h1>AxiosUpload page</h1>\n    <div>\n\n      <b-row>\n        <b-col md=\"2\" class=\"border-right\">\n          <form enctype=\"multipart/form-data\" @submit.stop.prevent=\"onUpload\">\n            <b-img ref=\"output\" fluid alt=\"Responsive image\"></b-img>\n            <input type=\"file\" id=\"file\" ref=\"file\" class=\"m-1\" @change=\"onFileChange\" /><br>\n            <div>\n              <button type=\"submit\" class=\"mr-1\">Upload</button>\n              <button @click=\"onRemove\" class=\"mr-1\">Remove</button>\n            </div>\n          </form>\n        </b-col>\n        <b-col md=\"10\">\n          <b-row>\n            <b-col md=\"1\" v-for=\"x in ds\" :key=\"x.imageName\" class=\"border-right\">\n              <img width=\"100%\" height=\"40\" fluid :src=\"`/api/FileUpload/GetImage/${x.imageName}`\" alt=\"Image 1\" />\n            </b-col>\n          </b-row>\n          <hr>\n        </b-col>\n      </b-row>\n\n    </div>\n  </div>\n</template>\n<script>\nimport $ from \"jquery\";\nimport axios from \"axios\";\nexport default {\n  name: 'Tpl',\n  components: {\n  },\n  data() {\n    return {\n      ds: []\n    }\n  },\n  methods: {\n    onUpload() {\n      let files = this.$refs.file.files;\n      if (files.length == 0) return;\n      let file = files[0];\n      var formData = new FormData();\n      formData.append(\"myfile\", file);\n      formData.append(\"myName\", \"thuc 101\");\n      this.UploadAxios(formData).then(res => {\n        this.ds.push(res.data.rec);\n        $(this.$refs.file).val(\"\");\n        $(this.$refs.output).attr(\"src\", \"\");\n      })\n    },\n    onFileChange() {\n      let files = this.$refs.file.files;\n      let file = files[0];\n      this.getReadAsDataURL(file).then((res) => {\n        $(this.$refs.output).attr(\"src\", res);\n      });\n    },\n    onRemove() {\n      $(this.$refs.output).attr(\"src\", \"\");\n      $(this.$refs.file).val(\"\");\n    },\n    getReadAsDataURL(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(file);\n      });\n    },\n    async UploadAxios(formData) {\n      return await axios\n        .post(`/api/FileUpload/UploadAxios`, formData)\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AxiosUpload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AxiosUpload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AxiosUpload.vue?vue&type=template&id=732b326c&\"\nimport script from \"./AxiosUpload.vue?vue&type=script&lang=js&\"\nexport * from \"./AxiosUpload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div class=\\\"MonHocToan\\\">\\n    <raw-loader :mytxt=\\\"require('!raw-loader!./AxiosUpload.vue').default\\\"></raw-loader>\\n    <h1>AxiosUpload page</h1>\\n    <div>\\n\\n      <b-row>\\n        <b-col md=\\\"2\\\" class=\\\"border-right\\\">\\n          <form enctype=\\\"multipart/form-data\\\" @submit.stop.prevent=\\\"onUpload\\\">\\n            <b-img ref=\\\"output\\\" fluid alt=\\\"Responsive image\\\"></b-img>\\n            <input type=\\\"file\\\" id=\\\"file\\\" ref=\\\"file\\\" class=\\\"m-1\\\" @change=\\\"onFileChange\\\" /><br>\\n            <div>\\n              <button type=\\\"submit\\\" class=\\\"mr-1\\\">Upload</button>\\n              <button @click=\\\"onRemove\\\" class=\\\"mr-1\\\">Remove</button>\\n            </div>\\n          </form>\\n        </b-col>\\n        <b-col md=\\\"10\\\">\\n          <b-row>\\n            <b-col md=\\\"1\\\" v-for=\\\"x in ds\\\" :key=\\\"x.imageName\\\" class=\\\"border-right\\\">\\n              <img width=\\\"100%\\\" height=\\\"40\\\" fluid :src=\\\"`/api/FileUpload/GetImage/${x.imageName}`\\\" alt=\\\"Image 1\\\" />\\n            </b-col>\\n          </b-row>\\n          <hr>\\n        </b-col>\\n      </b-row>\\n\\n    </div>\\n  </div>\\n</template>\\n<script>\\nimport $ from \\\"jquery\\\";\\nimport axios from \\\"axios\\\";\\nexport default {\\n  name: 'Tpl',\\n  components: {\\n  },\\n  data() {\\n    return {\\n      ds: []\\n    }\\n  },\\n  methods: {\\n    onUpload() {\\n      let files = this.$refs.file.files;\\n      if (files.length == 0) return;\\n      let file = files[0];\\n      var formData = new FormData();\\n      formData.append(\\\"myfile\\\", file);\\n      formData.append(\\\"myName\\\", \\\"thuc 101\\\");\\n      this.UploadAxios(formData).then(res => {\\n        this.ds.push(res.data.rec);\\n        $(this.$refs.file).val(\\\"\\\");\\n        $(this.$refs.output).attr(\\\"src\\\", \\\"\\\");\\n      })\\n    },\\n    onFileChange() {\\n      let files = this.$refs.file.files;\\n      let file = files[0];\\n      this.getReadAsDataURL(file).then((res) => {\\n        $(this.$refs.output).attr(\\\"src\\\", res);\\n      });\\n    },\\n    onRemove() {\\n      $(this.$refs.output).attr(\\\"src\\\", \\\"\\\");\\n      $(this.$refs.file).val(\\\"\\\");\\n    },\\n    getReadAsDataURL(file) {\\n      return new Promise((resolve, reject) => {\\n        let reader = new FileReader();\\n        reader.onload = () => {\\n          resolve(reader.result);\\n        };\\n        reader.onerror = reject;\\n        reader.readAsDataURL(file);\\n      });\\n    },\\n    async UploadAxios(formData) {\\n      return await axios\\n        .post(`/api/FileUpload/UploadAxios`, formData)\\n        .catch((err) => {\\n          console.log(err);\\n        });\\n    },\\n  }\\n}\\n</script>\\n\";"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","on","$event","stopPropagation","preventDefault","onUpload","apply","arguments","ref","onFileChange","onRemove","_l","x","key","imageName","staticRenderFns","name","components","data","ds","methods","formData","$","getReadAsDataURL","reader","resolve","catch","err","console","component"],"sourceRoot":""}