"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[5973],{65203:function(t,e,r){r.r(e),r.d(e,{default:function(){return y}});var n=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"MonHocToan"},[n("raw-loader",{attrs:{mytxt:r(40551).Z}}),n("b-container",{attrs:{fluid:""}},[n("form",{on:{submit:function(e){return e.stopPropagation(),e.preventDefault(),t.onSaveModal.apply(null,arguments)}}},[n("b-modal",{ref:"my-modal",attrs:{size:"md","no-close-on-backdrop":!0,"hide-footer":"",title:0==t.sel2[t.pri]?"form Add":"form Edit"}},[n("div",{staticClass:"d-block"},[n("form",{on:{submit:function(e){return e.stopPropagation(),e.preventDefault(),t.onSaveModal.apply(null,arguments)}}},[n("div",{},[t._l(t.sel2,(function(e,r){return n("div",{key:r,staticClass:"form-group row"},[r==t.pri?[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v("Id")]),n("div",{staticClass:"col-sm-8"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.sel2[r],expression:"sel2[k]"}],class:{"form-control":!0,"ko-hop-le":t.errors.has(r)},attrs:{readonly:!0,name:r,type:"text"},domProps:{value:t.sel2[r]},on:{input:function(e){e.target.composing||t.$set(t.sel2,r,e.target.value)}}})])]:t._e(),"Name"==r?[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v("Tên bàn")]),n("div",{staticClass:"col-sm-8"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.sel2[r],expression:"sel2[k]"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":t.errors.has(r)},attrs:{name:r,autocomplete:"off",type:"text"},domProps:{value:t.sel2[r]},on:{input:function(e){e.target.composing||t.$set(t.sel2,r,e.target.value)}}})])]:t._e()],2)})),n("div",{staticClass:"text-right"},[n("button",{staticClass:"btn mr-1",attrs:{type:"submit"}},[t._v("Save")]),n("button",{staticClass:"btn",attrs:{type:"button"},on:{click:function(e){return t.hideModal()}}},[t._v("Cancel")])])],2)])])]),n("b-table",{ref:"mytable",attrs:{"thead-class":"myTable",items:t.myProvider,fields:t.fields,"current-page":t.currentPage,"per-page":t.perPage,filter:t.filter,"filter-included-fields":t.filterOn,"sort-by":t.sortBy,"sort-desc":t.sortDesc,"sort-direction":t.sortDirection,stacked:"sm","show-empty":"",small:"",fixed:"",outlined:"",bordered:""},on:{"update:sortBy":function(e){t.sortBy=e},"update:sort-by":function(e){t.sortBy=e},"update:sortDesc":function(e){t.sortDesc=e},"update:sort-desc":function(e){t.sortDesc=e},filtered:t.onFiltered},scopedSlots:t._u([{key:"cell()",fn:function(e){var r=e.value,n=e.item,a=e.field.key;return[[0!=n[t.pri]?[a==t.pri?[t._v(" "+t._s(r)+" ")]:t._e(),"Name"==a?[t._v(" "+t._s(r)+" ")]:t._e()]:t._e()]]}},{key:"cell(cmd)",fn:function(e){return[0==e.item[t.pri]?[n("b-button",{staticClass:"mr-1",attrs:{size:"sm"},on:{click:function(r){return t.onSave(e.item)}}},[n("b-icon-hand-thumbs-up")],1),n("b-button",{staticClass:"mr-1",attrs:{size:"sm"},on:{click:function(r){return t.OnCancel(e.item)}}},[n("b-icon-file-x")],1)]:[t.sel[t.pri]!=e.item[t.pri]?n("b-button",{staticClass:"mr-1",attrs:{disabled:1==t.adding||1==t.isEditing(),variant:"outline",size:"sm"},on:{click:function(r){return t.OnEdit(e.item)}}},[n("b-icon-pencil-square")],1):t._e(),t.sel[t.pri]!=e.item[t.pri]?n("b-button",{staticClass:"mr-1",attrs:{disabled:1==t.adding||1==t.isEditing(),variant:"outline",size:"sm"},on:{click:function(r){return t.OnDel(e.item)}}},[n("b-icon-trash")],1):t._e(),t.sel[t.pri]==e.item[t.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(r){return t.onSave(e.item)}}},[n("b-icon-hand-thumbs-up")],1):t._e(),t.sel[t.pri]==e.item[t.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(r){return t.OnCancel(e.item)}}},[n("b-icon-file-x")],1):t._e()]]}},{key:"bottom-row",fn:function(e){return[n("td",{attrs:{colspan:e.columns}},[n("b-row",[n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-form-group",{staticClass:"mb-0",attrs:{label:"Tìm kiếm","label-for":"filter-input","label-cols-sm":"3","label-align-sm":"right","label-size":"sm"}},[n("b-input-group",{attrs:{size:"sm"}},[n("b-form-input",{attrs:{id:"filter-input",type:"search",placeholder:"Type to Search"},model:{value:t.filter,callback:function(e){t.filter=e},expression:"filter"}}),n("b-input-group-append",[n("b-button",{attrs:{disabled:!t.filter},on:{click:function(e){t.filter=""}}},[t._v("Clear")])],1)],1)],1)],1),n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-form-group",{staticClass:"mb-0",attrs:{label:"Số dòng","label-for":"per-page-select","label-cols-sm":"6","label-cols-md":"4","label-cols-lg":"3","label-align-sm":"right","label-size":"sm"}},[n("b-form-select",{attrs:{id:"per-page-select",options:t.pageOptions,size:"sm"},model:{value:t.perPage,callback:function(e){t.perPage=e},expression:"perPage"}})],1)],1),n("b-col",{staticClass:"my-1 text-right",attrs:{sm:"6"}},[n("span",[t._v("page : "+t._s(t.currentPage)+" / "+t._s(t.last_page)+" of "+t._s(t.totalRows)+" ")]),n("b-button",{staticClass:"mr-1 mb-1",attrs:{disabled:1==t.adding||1==t.isEditing(),size:"sm"},on:{click:t.OnAdd}},[n("b",[t._v("Add")])])],1),n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-pagination",{ref:"mypage",attrs:{disabled:1==t.adding||1==t.isEditing(),"total-rows":t.totalRows,"per-page":t.perPage,size:"sm",align:"fill","first-text":"First","prev-text":"Prev","next-text":"Next","last-text":"Last"},on:{change:t.onChangePage,input:t.onPagingInput},model:{value:t.currentPage,callback:function(e){t.currentPage=e},expression:"currentPage"}})],1)],1)],1)]}},{key:"row-details",fn:function(e){return[n("b-card",[n("ul",t._l(e.item,(function(e,r){return n("li",{key:r},[t._v(t._s(r)+": "+t._s(e))])})),0)])]}}])})],1),n("b-modal",{attrs:{id:t.infoModal.id,title:t.infoModal.title,"ok-only":""},on:{hide:t.resetInfoModal}},[n("pre",[t._v(t._s(t.infoModal.content))])])],1)],1)},a=[],s=r(12954),i=r(20144),l=r(85890),o=r(96486),d=r(60325),c=r(70790),m=r(53009),u=r(9669),h=r.n(u);r(30381);i["default"].use(s.ZP,{classes:!0,fieldsBagName:"veeFields"});var p={components:{VueTypeaheadBootstrap:l.Z},data(){return{items:[],fields:[{key:"Id",formatter:(t,e,r)=>t,sortable:!0,thClass:"text-center",tdClass:"text-center align-middle",thStyle:{width:"10%"}},{key:"Name",sortable:!0,thClass:"text-center",tdClass:"align-middle",thStyle:{width:"80%"}},{key:"cmd",class:"text-center",thClass:"text-center",tdClass:"align-middle",thStyle:{width:"10%"}}],totalRows:1,currentPage:1,perPage:5,pageOptions:[5,10,15,{value:100,text:"Show a lot"}],sortBy:"",sortDesc:!1,sortDirection:"asc",filter:null,filterOn:[],infoModal:{id:"info-modal",title:"",content:""},sel:{},sel2:{},pri:"Id",last_page:0,adding:!1,ListAuto:[],title:"hello title"}},watch:{last_page:function(t,e){},currentPage:function(t){},totalRows:function(t,e){}},computed:{},mounted(){},methods:{OnSearch:(0,o.debounce)((function(t){fetch(`/api/Ban/AutoComplete?q=${t}`).then((t=>t.json())).then((t=>{console.log(JSON.stringify(t)),this.ListAuto=t.items}))}),500),onPagingInput(){},myProvider(t){let e=t.currentPage,r=t.perPage,n=t.sortBy,a=t.sortDesc,s=this,i="/api/Ban4/GetPage2";if(i=`${i}?page=${e}&size=${r}&sortBy=${n}&sortDesc=${a}`,t.filter){let e=t.filter;i=`${i}&filter=${e}`}return h().get(i).then((t=>{if(s.last_page=t.data.last_page,s.totalRows=t.data.rowCount,1==this.adding){let e={};e[this.pri]=0,e["TenKhach"]="xxx",e["Ngay"]=new Date,t.data.data.unshift(e)}return s.mapData(t.data.data)}))},mapData(t){let e=[];return t.forEach((t=>{let r={};Object.keys(t).forEach((e=>{let n=e;r[n]=t[e]})),e.push(r)})),e},onChangePage(){this.sel={},this.adding=!1},OnAdd(){this.sel2={Id:0,Name:"Tên bàn"},this.showModal()},OnEdit(t){"{}"==JSON.stringify(this.sel)&&1!=this.adding&&this.getById(t[this.pri])},onSaveModal(){this.$validator.validateAll().then((t=>{if(!t)return void this.toast("Không hợp lệ");let e=JSON.parse(JSON.stringify(this.sel2));0==e[this.pri]?this.Add(e):this.Update(e)}))},onSave(t){this.$validator.validateAll().then((e=>{if(!e)return void this.toast("Không hợp lệ");let r=JSON.parse(JSON.stringify(t));0==r[this.pri]?this.Add(r).then((t=>{"ok"==t.data.kq&&(this.toast(`${t.data.msg}`),this.adding=!1,this.$refs.mytable.refresh())})):this.Update(r).then((t=>{this.toast(`${t.data.msg}`),this.adding=!1,this.sel={},this.$refs.mytable.refresh()}))}))},OnCancel(t){0!=t[this.pri]?(this.doCancel(t),this.sel={}):(this.adding=!1,this.$refs.mytable.refresh())},OnDel(t){this.Del(t[this.pri]).then((t=>{if("nook"==t.data.kq)return void this.toast(`${t.data.msg}`);this.toast(`${t.data.msg}`);let e=this.getLastPage(this.totalRows-1);e<this.currentPage&&(this.currentPage=e),this.$refs.mytable.refresh()}))},delRow(t){let e=t.id,r=this.items.findIndex((t=>t.id==e));this.items.splice(r,1)},isEditing(){return"{}"!=JSON.stringify(this.sel)},isAdded(){let t=!1;return this.items.forEach((e=>{0==e.id&&(t=!0)})),t},doCancel(t){for(let e in t)t[e]!=this.sel[e]&&(t[e]=this.sel[e])},getLastPage(t){let e=this.perPage,r=t%e;return 0==r?t/e:(t-r)/e+1},gotoPage(t){this.currentPage=t,this.$refs.mytable.refresh()},toast(t,e=null){this.$bvToast.toast(t,{title:"Information",variant:e,solid:!0})},async Save(t){return await d.Z.post("/api/Ban/Save",t).catch((t=>{console.log(t)}))},async Add(t){return await c.Z.post("/api/Ban4/Add",t).then((t=>{this.toast(`${t.data.msg}`),this.hideModal(),this.$refs.mytable.refresh()})).catch((t=>{m.Z.XuLyErr(t)}))},async Update(t){return await c.Z.post("/api/Ban4/Update",t).then((t=>{this.hideModal(),this.toast(`${t.data.msg}`),this.$refs.mytable.refresh()})).catch((t=>{m.Z.XuLyErr(t)}))},async Del(t){return await c.Z.get(`/api/Ban4/Delete?id=${t}`).then((t=>{this.toast(`${t.data.msg}`),this.$refs.mytable.refresh()})).catch((t=>{m.Z.XuLyErr(t)}))},async getById(t){return await c.Z.get(`/api/Ban4/GetById?id=${t}`).then((t=>{this.sel2=t.data,this.showModal()})).catch((t=>{m.Z.XuLyErr(t)}))},async GetCombo(){return await d.Z.get("/api/Ban/GetCombo").catch((t=>{console.log(t)}))},info(t,e,r){this.infoModal.title=`Row index: ${e}`,this.infoModal.content=JSON.stringify(t,null,2),this.$root.$emit("bv::show::modal",this.infoModal.id,r)},resetInfoModal(){this.infoModal.title="",this.infoModal.content=""},onFiltered(t){this.totalRows=t.length,this.currentPage=1},showModal(){this.$refs["my-modal"].show()},hideModal(){this.$refs["my-modal"].hide()}}},f=p,g=r(1001),b=(0,g.Z)(f,n,a,!1,null,null,null),y=b.exports},40551:function(t,e){e["Z"]='<template>\r\n    <div class="MonHocToan">\r\n        <raw-loader :mytxt="require(\'!raw-loader!./BanModal.vue\').default"></raw-loader>\r\n\r\n        <b-container fluid>\r\n            \x3c!-- User Interface controls --\x3e\r\n            \x3c!-- Main table element --\x3e\r\n            <form @submit.stop.prevent="onSaveModal">\r\n                <b-modal ref="my-modal" size="md" :no-close-on-backdrop="true" hide-footer\r\n                    :title="(sel2[pri] == 0) ? \'form Add\' : \'form Edit\'">\r\n                    <div class="d-block">\r\n                        <form @submit.stop.prevent="onSaveModal">\r\n                            <div class="">\r\n                                <div class="form-group row" v-for="(v, k) in sel2" :key="k">\r\n\r\n                                    <template v-if="(k == pri)">\r\n                                        <label class="col-sm-4 col-form-label">Id</label>\r\n                                        <div class="col-sm-8">\r\n                                            <input :readonly="true" :name="k" v-model="sel2[k]" :class="{\r\n                                                \'form-control\': true,\r\n                                                \'ko-hop-le\': errors.has(k),\r\n                                            }" type="text" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if="k == \'Name\'">\r\n                                        <label class="col-sm-4 col-form-label">Tên bàn</label>\r\n                                        <div class="col-sm-8">\r\n                                            <input :name="k" v-model="sel2[k]" autocomplete="off" :class="{\r\n                                                \'form-control\': true,\r\n                                                \'ko-hop-le\': errors.has(k),\r\n                                            }" type="text" v-validate="\'required\'" />\r\n                                        </div>\r\n                                    </template>\r\n\r\n                                </div>\r\n                                <div class="text-right">\r\n                                    <button type="submit" class="btn mr-1">Save</button>\r\n                                    <button type="button" class="btn" @click="hideModal()">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </b-modal>\r\n                <b-table thead-class="myTable" ref="mytable" :items="myProvider" :fields="fields"\r\n                    :current-page="currentPage" :per-page="perPage" :filter="filter" :filter-included-fields="filterOn"\r\n                    :sort-by.sync="sortBy" :sort-desc.sync="sortDesc" :sort-direction="sortDirection" stacked="sm"\r\n                    show-empty small fixed outlined bordered @filtered="onFiltered">\r\n                    <template v-slot:cell()="{ value, item, field: { key } }">\r\n                        <template>\r\n                            <template v-if="item[pri] != 0">\r\n                                <template v-if="key == pri">\r\n                                    {{ value }}\r\n                                </template>\r\n                                <template v-if="key == \'Name\'">\r\n                                    {{ value }}\r\n                                </template>\r\n                                \x3c!-- <template v-else>\r\n                                    {{ value }}\r\n                                </template> --\x3e\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                    <template #cell(cmd)="row">\r\n                        <template v-if="row.item[pri] == 0">\r\n                            <b-button class="mr-1" size="sm" @click="onSave(row.item)">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button class="mr-1" size="sm" @click="OnCancel(row.item)">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                        <template v-else>\r\n                            <b-button :disabled="adding == true || isEditing() == true" variant="outline" class="mr-1"\r\n                                v-if="sel[pri] != row.item[pri]" size="sm" @click="OnEdit(row.item)">\r\n                                <b-icon-pencil-square></b-icon-pencil-square>\r\n                            </b-button>\r\n                            <b-button :disabled="adding == true || isEditing() == true" variant="outline" class="mr-1"\r\n                                v-if="sel[pri] != row.item[pri]" size="sm" @click="OnDel(row.item)">\r\n                                <b-icon-trash></b-icon-trash>\r\n                            </b-button>\r\n                            <b-button variant="outline" class="mr-1" v-if="sel[pri] == row.item[pri]" size="sm"\r\n                                @click="onSave(row.item)">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button variant="outline" class="mr-1" v-if="sel[pri] == row.item[pri]" size="sm"\r\n                                @click="OnCancel(row.item)">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                    </template>\r\n                    <template #bottom-row="data">\r\n                        <td :colspan="data.columns">\r\n                            <b-row>\r\n                                <b-col sm="6" class="my-1">\r\n                                    <b-form-group label="Tìm kiếm" label-for="filter-input" label-cols-sm="3"\r\n                                        label-align-sm="right" label-size="sm" class="mb-0">\r\n                                        <b-input-group size="sm">\r\n                                            <b-form-input id="filter-input" v-model="filter" type="search"\r\n                                                placeholder="Type to Search">\r\n                                            </b-form-input>\r\n\r\n                                            <b-input-group-append>\r\n                                                <b-button :disabled="!filter" @click="filter = \'\'">Clear</b-button>\r\n                                            </b-input-group-append>\r\n                                        </b-input-group>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm="6" class="my-1">\r\n                                    <b-form-group label="Số dòng" label-for="per-page-select" label-cols-sm="6"\r\n                                        label-cols-md="4" label-cols-lg="3" label-align-sm="right" label-size="sm"\r\n                                        class="mb-0">\r\n                                        <b-form-select id="per-page-select" v-model="perPage" :options="pageOptions"\r\n                                            size="sm">\r\n                                        </b-form-select>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n\r\n                                <b-col sm="6" class="my-1 text-right">\r\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\r\n                                    <b-button :disabled="adding == true || isEditing() == true" class="mr-1 mb-1" size="sm"\r\n                                        @click="OnAdd">\r\n                                        <b>Add</b></b-button>\r\n                                </b-col>\r\n                                <b-col sm="6" class="my-1">\r\n                                    <b-pagination :disabled="adding == true || isEditing() == true" ref="mypage"\r\n                                        v-model="currentPage" :total-rows="totalRows" :per-page="perPage" size="sm"\r\n                                        align="fill" @change="onChangePage" @input="onPagingInput" first-text="First"\r\n                                        prev-text="Prev" next-text="Next" last-text="Last">\r\n                                    </b-pagination>\r\n                                </b-col>\r\n                            </b-row>\r\n\r\n                        </td>\r\n                    </template>\r\n\r\n                    <template #row-details="row">\r\n                        <b-card>\r\n                            <ul>\r\n                                <li v-for="(value, key) in row.item" :key="key">{{ key }}: {{ value }}</li>\r\n                            </ul>\r\n                        </b-card>\r\n                    </template>\r\n                </b-table>\r\n\r\n            </form>\r\n            \x3c!-- Info modal --\x3e\r\n            <b-modal :id="infoModal.id" :title="infoModal.title" ok-only @hide="resetInfoModal">\r\n                <pre>{{ infoModal.content }}</pre>\r\n            </b-modal>\r\n        </b-container>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport VeeValidate from "vee-validate";\r\nimport Vue from "vue";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: \'veeFields\'\r\n});\r\n\r\nimport VueTypeaheadBootstrap from "vue-typeahead-bootstrap";\r\nimport { debounce } from "lodash";\r\n\r\nimport Repository from "@/Repository"\r\nimport fetchClient from "@/fetchClient";\r\nimport TumLum from "@/TumLum";\r\n\r\nimport axios from \'axios\'\r\nimport moment from "moment"\r\n\r\nexport default {\r\n    components: {\r\n        VueTypeaheadBootstrap,\r\n    },\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [\r\n                {\r\n                    key: \'Id\',\r\n                    formatter: (value, key, item) => {\r\n                        return value;\r\n                    },\r\n                    sortable: true,\r\n                    thClass: \'text-center\',\r\n                    tdClass: \'text-center align-middle\',\r\n                    thStyle: { width: "10%" },\r\n                },\r\n                { key: \'Name\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "80%" }, },\r\n                {\r\n                    key: \'cmd\',\r\n                    class: \'text-center\',\r\n                    thClass: \'text-center\',\r\n                    tdClass: \'align-middle\',\r\n                    thStyle: { width: "10%" }\r\n                }\r\n            ],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            pageOptions: [5, 10, 15, { value: 100, text: "Show a lot" }],\r\n            sortBy: \'\',\r\n            sortDesc: false,\r\n            sortDirection: \'asc\',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: \'info-modal\',\r\n                title: \'\',\r\n                content: \'\'\r\n            },\r\n            sel: {},\r\n            sel2: {},\r\n            pri: "Id",\r\n            last_page: 0,\r\n            adding: false,\r\n            ListAuto: [],\r\n\r\n            title: "hello title"\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        last_page: function (newValue, oldValue) {\r\n        },\r\n        currentPage: function (val) {\r\n        },\r\n        totalRows: function (newValue, oldValue) {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n\r\n        OnSearch: debounce(function (query) {\r\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(JSON.stringify(data))\r\n                    this.ListAuto = data.items;\r\n                });\r\n        }, 500),\r\n        onPagingInput() {\r\n        },\r\n        myProvider(ctx) {\r\n            let currentPage = ctx.currentPage;\r\n            let perPage = ctx.perPage;\r\n            let sortBy = ctx.sortBy;\r\n            let sortDesc = ctx.sortDesc;\r\n            let vm = this;\r\n            let url = `/api/Ban4/GetPage2`;\r\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\r\n            if (ctx.filter) {\r\n                let filter = ctx.filter;\r\n                url = `${url}&filter=${filter}`;\r\n            }\r\n            return axios.get(url)\r\n                .then(res => {\r\n                    //alert(JSON.stringify(res));\r\n                    //return;\r\n                    /*{"data":{"last_page":1,"rowCount":1,"data":[{\r\n                        "Id":3858,\r\n                        "Name":"Bàn số 1"}]},"s                    \r\n                    */\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    if (this.adding == true) {\r\n                        let r = {};\r\n                        r[this.pri] = 0;\r\n                        r["TenKhach"] = "xxx";\r\n                        r["Ngay"] = new Date();\r\n                        res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                })\r\n        },\r\n        mapData(data) {\r\n            let kq = [];\r\n            data.forEach(obj => {\r\n                let x = {};\r\n                Object.keys(obj).forEach(key => {\r\n                    let k = key;\r\n                    x[k] = obj[key];\r\n                });\r\n                kq.push(x);\r\n            })\r\n            return kq;\r\n        },\r\n        onChangePage() {\r\n            this.sel = {};\r\n            this.adding = false;\r\n        },\r\n        OnAdd() {\r\n            this.sel2 = {\r\n                Id: 0,\r\n                Name: "Tên bàn"\r\n            }\r\n            this.showModal();\r\n        },\r\n        OnEdit(item) {\r\n            if (JSON.stringify(this.sel) != "{}" || this.adding == true) {\r\n                return;\r\n            }\r\n            /*\r\n            this.sel2 = JSON.parse(JSON.stringify(item));\r\n            this.showModal();\r\n            */\r\n            this.getById(item[this.pri]);\r\n            // this.getById(item[this.pri]).then(res => {\r\n            //     this.sel2 = res.data;\r\n            //     this.showModal();\r\n            //{"data":{"Id":1,"TenLop":"Lop 11A1sfsf"},"status":200,"statusText":"OK","headers":{"content-length":"32","            \r\n            // })\r\n        },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast("Không hợp lệ");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.sel2));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r);\r\n                } else {\r\n                    this.Update(r);\r\n                }\r\n            });\r\n        },\r\n\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast("Không hợp lệ");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r).then(res => {\r\n                        if (res.data.kq == \'ok\') {\r\n                            this.toast(`${res.data.msg}`);\r\n                            this.adding = false;\r\n                            this.$refs.mytable.refresh();\r\n                        }\r\n                    })\r\n                } else {\r\n                    //tien hanh sua\r\n                    this.Update(r).then(res => {\r\n                        this.toast(`${res.data.msg}`);\r\n                        this.adding = false;\r\n                        this.sel = {};\r\n                        this.$refs.mytable.refresh();\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] != 0) {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            } else {\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            }\r\n        },\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]).then(res => {\r\n                if (res.data.kq == \'nook\') {\r\n                    this.toast(`${res.data.msg}`);\r\n                    return;\r\n                }\r\n                this.toast(`${res.data.msg}`);\r\n                let lastPage = this.getLastPage(this.totalRows - 1);\r\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\r\n                this.$refs.mytable.refresh();\r\n            })\r\n        },\r\n        delRow(item) {\r\n            let id = item.id;\r\n            let index = this.items.findIndex(x => x.id == id);\r\n            this.items.splice(index, 1);\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != "{}"\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x.id == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        gotoPage(page) {\r\n            this.currentPage = page;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async Save(r) {\r\n            return await Repository.post(`/api/Ban/Save`, r).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n\r\n        async Add(r) {\r\n            return await fetchClient.post(`/api/Ban4/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.hideModal();\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`/api/Ban4/Update`, r)\r\n                .then(res => {\r\n                    this.hideModal();\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Del(id) {\r\n            return await fetchClient.get(`/api/Ban4/Delete?id=${id}`)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await fetchClient.get(`/api/Ban4/GetById?id=${id}`)\r\n                .then(res => {\r\n                    this.sel2 = res.data;\r\n                    this.showModal();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async GetCombo() {\r\n            return await Repository.get(`/api/Ban/GetCombo`).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit(\'bv::show::modal\', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = \'\'\r\n            this.infoModal.content = \'\'\r\n        },\r\n        onFiltered(filteredItems) {\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        },\r\n        showModal() {\r\n            this.$refs["my-modal"].show();\r\n        },\r\n        hideModal() {\r\n            this.$refs["my-modal"].hide();\r\n        },\r\n    }\r\n}\r\n<\/script>\r\n  \r\n  '},60325:function(t,e,r){var n=r(9669),a=r.n(n);let s=localStorage.getItem("token");e["Z"]=a().create({baseURL:"",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json;charset=utf-8"}})},53009:function(t,e){e["Z"]={XuLyErr(t){let e=JSON.parse(JSON.stringify(t)).status;if(400==e){let e=JSON.parse(JSON.stringify(t.response)).data.message;alert(e)}else t.response?401==t.response.status?alert("Chưa đăng nhập hoặc token hết hạn"):403==t.response.status&&alert("Bạn ko có quyền"):t.request?alert(JSON.stringify(t.request)):t.message&&alert(JSON.stringify(t.message))}}},70790:function(t,e,r){var n=r(9669),a=r.n(n);const s=()=>{const t={baseURL:"",method:"get",headers:{"Content-Type":"application/json;charset=utf-8"}};let e=a().create(t);return e.interceptors.request.use((function(t){const e=localStorage.getItem("token");return t.headers.Authorization=e?`Bearer ${e}`:"",t})),e};e["Z"]=s()}}]);
//# sourceMappingURL=5973.395ad871.js.map