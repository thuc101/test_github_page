{"version":3,"file":"js/2619.00db20ed.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/BTable4/Users.vue?4dc9","webpack://vue_start_1/src/views/BTable4/Users.vue","webpack://vue_start_1/./src/views/BTable4/Users.vue?ad5e","webpack://vue_start_1/./src/views/BTable4/Users.vue?11c8","webpack://vue_start_1/./src/views/BTable4/Users.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./Users.vue').default}}),_vm._v(\" \"+_vm._s(_vm.items)+\" \"),_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSave.apply(null, arguments)}}},[_c('b-table',{ref:\"mytable\",attrs:{\"items\":_vm.items,\"fields\":_vm.fields,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"filter-included-fields\":_vm.filterOn,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"stacked\":\"md\",\"show-empty\":\"\",\"small\":\"\",\"fixed\":\"\",\"outlined\":\"\",\"bordered\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\nvar value = ref.value;\nvar item = ref.item;\nvar key = ref.field.key;\nreturn [(_vm.sel[_vm.pri] != item[_vm.pri])?[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:[_vm._v(\" \"+_vm._s(value)+\" \")]]:_vm._e()]:_vm._e(),((_vm.sel[_vm.pri] == item[_vm.pri] || item[_vm.pri] == 0))?[(key == _vm.pri)?[_c('span',[_vm._v(_vm._s(value))])]:_vm._e(),(key == 'Username')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e(),(key == 'Password')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e(),(key == 'Roles')?[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has(key) },attrs:{\"multiple\":\"\",\"name\":key,\"reduce\":function (option) { return option.id; },\"options\":[\n                { label: 'Admin', id: 'Admin' },\n                { label: 'ChuQuan', id: 'ChuQuan' },\n                { label: 'NhanVien', id: 'NhanVien' },\n                { label: 'User', id: 'User' }\n                ],\"has-error\":_vm.errors.has(key)},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e()]:_vm._e()]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"disabled\":_vm.isAdded() == true,\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"disabled\":_vm.isAdded() == true,\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnDel(row.item)}}},[_c('b-icon-trash')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}},{key:\"bottom-row\",fn:function(data){return [_c('td',{attrs:{\"colspan\":data.columns}},[_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Filter\",\"label-for\":\"filter-input\",\"label-cols-sm\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-input-group',{attrs:{\"size\":\"sm\"}},[_c('b-form-input',{attrs:{\"id\":\"filter-input\",\"type\":\"search\",\"placeholder\":\"Type to Search\"},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(\"Clear\")])],1)],1)],1)],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Per page\",\"label-for\":\"per-page-select\",\"label-cols-sm\":\"6\",\"label-cols-md\":\"4\",\"label-cols-lg\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-form-select',{attrs:{\"id\":\"per-page-select\",\"options\":_vm.pageOptions,\"size\":\"sm\"},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1),_c('b-col',{staticClass:\"my-1 text-right\",attrs:{\"sm\":\"6\"}},[_vm._v(\" page :\"+_vm._s(_vm.currentPage)+\" / \"+_vm._s(_vm.getLastPage(_vm.totalRows))+\" of \"+_vm._s(_vm.totalRows)+\" \"),_c('b-button',{attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"size\":\"sm\"},on:{\"click\":_vm.OnAdd}},[_c('b',[_vm._v(\"Add\")])])],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-pagination',{staticClass:\"my-0\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"align\":\"fill\",\"size\":\"sm\"},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1)]}}])})],1),_c('b-modal',{attrs:{\"id\":_vm.infoModal.id,\"title\":_vm.infoModal.title,\"ok-only\":\"\"},on:{\"hide\":_vm.resetInfoModal}},[_c('pre',[_vm._v(_vm._s(_vm.infoModal.content))])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <b-container fluid>\r\n      <raw-loader :mytxt=\"require('!raw-loader!./Users.vue').default\"></raw-loader>\r\n      {{ items }}\r\n      <form @submit.stop.prevent=\"onSave\">\r\n        <b-table ref=\"mytable\" :items=\"items\" :fields=\"fields\" :current-page=\"currentPage\" :per-page=\"perPage\"\r\n          :filter=\"filter\" :filter-included-fields=\"filterOn\" :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\"\r\n          :sort-direction=\"sortDirection\" stacked=\"md\" show-empty small fixed outlined bordered @filtered=\"onFiltered\">\r\n  \r\n          <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n            <template v-if=\"sel[pri] != item[pri]\">\r\n              <template v-if=\"item[pri] != 0\">\r\n                <template v-if=\"key == pri\">\r\n                  {{ value }}\r\n                </template>\r\n                <!-- <template v-if=\"key == 'name'\">\r\n                  {{ value }}\r\n                </template> -->\r\n                <template v-else >\r\n                  {{ value }}\r\n                </template>\r\n              </template>\r\n            </template>\r\n            <template v-if=\"(sel[pri] == item[pri] || item[pri] == 0)\">\r\n              <template v-if=\"key == pri\">\r\n                <span>{{ value }}</span>\r\n              </template>\r\n              <template v-if=\"key == 'Username'\">\r\n                <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\" placeholder=\"\"\r\n                  :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                </b-form-input>\r\n              </template>\r\n              <template v-if=\"key == 'Password'\">\r\n                <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\" placeholder=\"\"\r\n                  :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                </b-form-input>\r\n              </template>\r\n              <template v-if=\"key == 'Roles'\">\r\n                <v-select multiple v-model=\"item[key]\" v-validate=\"'required'\" :name=\"key\" :reduce=\"(option) => option.id\"\r\n                    :options=\"[\r\n                    { label: 'Admin', id: 'Admin' },\r\n                    { label: 'ChuQuan', id: 'ChuQuan' },\r\n                    { label: 'NhanVien', id: 'NhanVien' },\r\n                    { label: 'User', id: 'User' }\r\n                    ]\" :has-error=\"errors.has(key)\" :class=\"{ danger: errors.has(key) }\" />\r\n              </template>\r\n\r\n\r\n              <!-- <v-select multiple v-model=\"selected\" :options=\"['Canada','United States']\" /> -->\r\n\r\n              \r\n            </template>\r\n          </template>\r\n  \r\n          <template #cell(cmd)=\"row\">\r\n            <template v-if=\"row.item[pri] == 0\">\r\n              <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"onSave(row.item)\">\r\n                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n              </b-button>\r\n              <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                <b-icon-file-x></b-icon-file-x>\r\n              </b-button>\r\n            </template>\r\n            <template v-else>\r\n              <b-button variant=\"outline\" :disabled=\"isAdded() == true\" class=\"mr-1\" v-if=\"sel[pri] != row.item[pri]\" size=\"sm\"\r\n                @click=\"OnEdit(row.item)\">\r\n                <b-icon-pencil-square></b-icon-pencil-square>\r\n              </b-button>\r\n              <b-button variant=\"outline\" :disabled=\"isAdded() == true\" class=\"mr-1\" v-if=\"sel[pri] != row.item[pri]\" size=\"sm\"\r\n                @click=\"OnDel(row.item)\">\r\n                <b-icon-trash></b-icon-trash>\r\n              </b-button>\r\n              <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\" @click=\"onSave(row.item)\">\r\n                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n              </b-button>\r\n              <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                <b-icon-file-x></b-icon-file-x>\r\n              </b-button>\r\n            </template>\r\n          </template>\r\n  \r\n          <template #bottom-row=\"data\">\r\n            <td :colspan=\"data.columns\">\r\n              <b-row>\r\n                <b-col sm=\"6\" class=\"my-1\">\r\n                  <b-form-group label=\"Filter\" label-for=\"filter-input\" label-cols-sm=\"3\" label-align-sm=\"right\"\r\n                    label-size=\"sm\" class=\"mb-0\">\r\n                    <b-input-group size=\"sm\">\r\n                      <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\r\n                        placeholder=\"Type to Search\"></b-form-input>\r\n                      <b-input-group-append>\r\n                        <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                      </b-input-group-append>\r\n                    </b-input-group>\r\n                  </b-form-group>\r\n                </b-col>\r\n                <b-col sm=\"6\" class=\"my-1\">\r\n                  <b-form-group label=\"Per page\" label-for=\"per-page-select\" label-cols-sm=\"6\" label-cols-md=\"4\"\r\n                    label-cols-lg=\"3\" label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                    <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\"\r\n                      size=\"sm\"></b-form-select>\r\n                  </b-form-group>\r\n                </b-col>\r\n                <b-col sm=\"6\" class=\"my-1 text-right\">\r\n                  page :{{ currentPage }} / {{ getLastPage(totalRows) }} of {{ totalRows }}\r\n                  <b-button :disabled=\"adding == true || isEditing() == true\" @click=\"OnAdd\"\r\n                    size=\"sm\"><b>Add</b></b-button>\r\n                </b-col>\r\n                <b-col sm=\"6\" class=\"my-1\">\r\n                  <b-pagination :disabled=\" adding == true || isEditing() == true \" v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" align=\"fill\" size=\"sm\"\r\n                    class=\"my-0\"></b-pagination>\r\n                </b-col>\r\n              </b-row>\r\n  \r\n            </td>\r\n          </template>\r\n  \r\n        </b-table>\r\n      </form>\r\n      <!-- Info modal -->\r\n      <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n        <pre>{{ infoModal.content }}</pre>\r\n      </b-modal>\r\n    </b-container>\r\n  </template>\r\n  \r\n  <script>\r\n  \r\n  import VeeValidate from \"vee-validate\";\r\n  import Vue from \"vue\";\r\n  Vue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n  });\r\n  \r\n  import moment from \"moment\";\r\n  \r\n  import vSelect from \"vue-select\";\r\n  Vue.component(\"v-select\", vSelect);\r\n  //import \"vue-select/dist/vue-select.css\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        items: [\r\n        ],\r\n        fields: [\r\n          {\r\n            key: 'Id',\r\n            sortable: true,\r\n            thClass: 'text-center',\r\n            tdClass: 'text-center align-middle',\r\n            //tdClass: 'align-middle'\r\n            thStyle: { width: \"8%\" },\r\n          },\r\n          { key: 'Username', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"20%\" }},\r\n          { key: 'Password', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"10%\" }},\r\n          { key: 'Roles', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"50%\" }},\r\n          {\r\n            key: 'cmd',\r\n            class: 'text-center',\r\n            thClass: 'text-center',\r\n            tdClass: 'align-middle',\r\n            thStyle: { width: \"12%\" }\r\n          }\r\n        ],\r\n        totalRows: 1,\r\n        currentPage: 1,\r\n        perPage: 3,\r\n        pageOptions: [3,5, 10, 15, { value: 100, text: \"Show a lot\" }],\r\n        sortBy: '',\r\n        sortDesc: false,\r\n        sortDirection: 'asc',\r\n        filter: null,\r\n        filterOn: [],\r\n        infoModal: {\r\n          id: 'info-modal',\r\n          title: '',\r\n          content: ''\r\n        },\r\n  \r\n        sel: {},\r\n        pri: 'Id',\r\n        adding: false,\r\n        lastPage:0,\r\n  \r\n      }\r\n    },\r\n    computed: {\r\n      sortOptions() {\r\n        // Create an options list from our fields\r\n        return this.fields\r\n          .filter(f => f.sortable)\r\n          .map(f => {\r\n            return { text: f.label, value: f.key }\r\n          })\r\n      }\r\n    },\r\n    mounted() {\r\n      let items = [\r\n      ];\r\n      items.push(\r\n        {Id:1,Username:'admin',Password:'123',Roles:[\"Admin\",\"ChuQuan\"]}\r\n      )\r\n    //   for(var i=1;i<6;i++){\r\n    //     items.push({\r\n    //       id:i,\r\n    //       name:`thuc ${i}`\r\n    //     })\r\n    //   }\r\n      this.items = items;\r\n      this.totalRows = this.items.length;\r\n      this.lastPage=this.getLastPage(this.totalRows);\r\n    },\r\n    methods: {\r\n      createId(){\r\n        let max=0;\r\n        this.items.forEach(x=>{\r\n          if(x[this.pri] > max){\r\n            max=x[this.pri];\r\n          }\r\n        })\r\n        return max+1;\r\n      },\r\n      onSave(item) {\r\n        this.$validator.validateAll().then((result) => {\r\n          if (!result) {\r\n            this.toast(\"Không hợp lệ\");\r\n            return;\r\n          }\r\n          let r = JSON.parse(JSON.stringify(item));\r\n          if(r[this.pri]==0){\r\n            let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\r\n            r[this.pri] = this.createId();//new Date().getTime();\r\n            this.$set(this.items, index, r);\r\n            this.adding=false;\r\n            this.$refs.mytable.refresh();\r\n          }else{\r\n            let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\r\n            this.$set(this.items, index, r);\r\n            this.sel={};\r\n          }\r\n        });\r\n      },\r\n      OnDel(item) {\r\n        this.delRow(item);\r\n      },\r\n      delRow(item) {\r\n        let id = item[this.pri];\r\n        let index = this.items.findIndex(x => x[this.pri] == id);\r\n        this.items.splice(index, 1);\r\n        this.totalRows = this.items.length;\r\n        this.lastPage = this.getLastPage(this.totalRows);\r\n      },\r\n      doCancel(item) {\r\n        for (let key in item) {\r\n          if (item[key] != this.sel[key]) {\r\n            item[key] = this.sel[key]\r\n          }\r\n        }\r\n      },\r\n      isAdded() {\r\n        let kq = false;\r\n        this.items.forEach(x => {\r\n          if (x[this.pri] == 0) kq = true;\r\n        })\r\n        return kq;\r\n      },\r\n      OnEdit(item) {\r\n        if (JSON.stringify(this.sel) != \"{}\") return;\r\n        this.sel = JSON.parse(JSON.stringify(item));\r\n      },\r\n      OnCancel(item) {\r\n        if (item[this.pri] == 0) {\r\n          let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\r\n          this.items.splice(index, 1);\r\n          this.adding = false;\r\n          this.$refs.mytable.refresh();\r\n        } else {\r\n          this.doCancel(item);\r\n          this.sel = {};\r\n        }\r\n      },\r\n      OnAdd() {\r\n        // let r = {\r\n        //   id: 0,\r\n        //   name: 'Thức',\r\n        // }\r\n        let r={Id:0,Username:'sfsf',Password:'sfsf',Roles:'User'};\r\n        this.items.unshift(r);\r\n        this.adding = true;\r\n        this.currentPage=1;\r\n        this.totalRows=this.items.length;\r\n        this.$refs.mytable.refresh();\r\n      },\r\n      isEditing() {\r\n        return JSON.stringify(this.sel) != \"{}\"\r\n      },\r\n      getLastPage(count) {\r\n        let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n        let du = count % pageSize;\r\n        return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n      },\r\n      info(item, index, button) {\r\n        this.infoModal.title = `Row index: ${index}`\r\n        this.infoModal.content = JSON.stringify(item, null, 2)\r\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n      },\r\n      resetInfoModal() {\r\n        this.infoModal.title = ''\r\n        this.infoModal.content = ''\r\n      },\r\n      onFiltered(filteredItems) {\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      },\r\n      toast(msg, variant = null) {\r\n        this.$bvToast.toast(msg, {\r\n          title: `Information`,\r\n          variant: variant,\r\n          solid: true,\r\n        });\r\n      },\r\n  \r\n    }\r\n  }\r\n  </script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Users.vue?vue&type=template&id=6261f23c&\"\nimport script from \"./Users.vue?vue&type=script&lang=js&\"\nexport * from \"./Users.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <b-container fluid>\\r\\n      <raw-loader :mytxt=\\\"require('!raw-loader!./Users.vue').default\\\"></raw-loader>\\r\\n      {{ items }}\\r\\n      <form @submit.stop.prevent=\\\"onSave\\\">\\r\\n        <b-table ref=\\\"mytable\\\" :items=\\\"items\\\" :fields=\\\"fields\\\" :current-page=\\\"currentPage\\\" :per-page=\\\"perPage\\\"\\r\\n          :filter=\\\"filter\\\" :filter-included-fields=\\\"filterOn\\\" :sort-by.sync=\\\"sortBy\\\" :sort-desc.sync=\\\"sortDesc\\\"\\r\\n          :sort-direction=\\\"sortDirection\\\" stacked=\\\"md\\\" show-empty small fixed outlined bordered @filtered=\\\"onFiltered\\\">\\r\\n  \\r\\n          <template v-slot:cell()=\\\"{ value, item, field: { key } }\\\">\\r\\n            <template v-if=\\\"sel[pri] != item[pri]\\\">\\r\\n              <template v-if=\\\"item[pri] != 0\\\">\\r\\n                <template v-if=\\\"key == pri\\\">\\r\\n                  {{ value }}\\r\\n                </template>\\r\\n                <!-- <template v-if=\\\"key == 'name'\\\">\\r\\n                  {{ value }}\\r\\n                </template> -->\\r\\n                <template v-else >\\r\\n                  {{ value }}\\r\\n                </template>\\r\\n              </template>\\r\\n            </template>\\r\\n            <template v-if=\\\"(sel[pri] == item[pri] || item[pri] == 0)\\\">\\r\\n              <template v-if=\\\"key == pri\\\">\\r\\n                <span>{{ value }}</span>\\r\\n              </template>\\r\\n              <template v-if=\\\"key == 'Username'\\\">\\r\\n                <b-form-input autocomplete=\\\"off\\\" v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\" placeholder=\\\"\\\"\\r\\n                  :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                </b-form-input>\\r\\n              </template>\\r\\n              <template v-if=\\\"key == 'Password'\\\">\\r\\n                <b-form-input autocomplete=\\\"off\\\" v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\" placeholder=\\\"\\\"\\r\\n                  :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                </b-form-input>\\r\\n              </template>\\r\\n              <template v-if=\\\"key == 'Roles'\\\">\\r\\n                <v-select multiple v-model=\\\"item[key]\\\" v-validate=\\\"'required'\\\" :name=\\\"key\\\" :reduce=\\\"(option) => option.id\\\"\\r\\n                    :options=\\\"[\\r\\n                    { label: 'Admin', id: 'Admin' },\\r\\n                    { label: 'ChuQuan', id: 'ChuQuan' },\\r\\n                    { label: 'NhanVien', id: 'NhanVien' },\\r\\n                    { label: 'User', id: 'User' }\\r\\n                    ]\\\" :has-error=\\\"errors.has(key)\\\" :class=\\\"{ danger: errors.has(key) }\\\" />\\r\\n              </template>\\r\\n\\r\\n\\r\\n              <!-- <v-select multiple v-model=\\\"selected\\\" :options=\\\"['Canada','United States']\\\" /> -->\\r\\n\\r\\n              \\r\\n            </template>\\r\\n          </template>\\r\\n  \\r\\n          <template #cell(cmd)=\\\"row\\\">\\r\\n            <template v-if=\\\"row.item[pri] == 0\\\">\\r\\n              <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"onSave(row.item)\\\">\\r\\n                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n              </b-button>\\r\\n              <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                <b-icon-file-x></b-icon-file-x>\\r\\n              </b-button>\\r\\n            </template>\\r\\n            <template v-else>\\r\\n              <b-button variant=\\\"outline\\\" :disabled=\\\"isAdded() == true\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                @click=\\\"OnEdit(row.item)\\\">\\r\\n                <b-icon-pencil-square></b-icon-pencil-square>\\r\\n              </b-button>\\r\\n              <b-button variant=\\\"outline\\\" :disabled=\\\"isAdded() == true\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                @click=\\\"OnDel(row.item)\\\">\\r\\n                <b-icon-trash></b-icon-trash>\\r\\n              </b-button>\\r\\n              <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"onSave(row.item)\\\">\\r\\n                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n              </b-button>\\r\\n              <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                <b-icon-file-x></b-icon-file-x>\\r\\n              </b-button>\\r\\n            </template>\\r\\n          </template>\\r\\n  \\r\\n          <template #bottom-row=\\\"data\\\">\\r\\n            <td :colspan=\\\"data.columns\\\">\\r\\n              <b-row>\\r\\n                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                  <b-form-group label=\\\"Filter\\\" label-for=\\\"filter-input\\\" label-cols-sm=\\\"3\\\" label-align-sm=\\\"right\\\"\\r\\n                    label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                    <b-input-group size=\\\"sm\\\">\\r\\n                      <b-form-input id=\\\"filter-input\\\" v-model=\\\"filter\\\" type=\\\"search\\\"\\r\\n                        placeholder=\\\"Type to Search\\\"></b-form-input>\\r\\n                      <b-input-group-append>\\r\\n                        <b-button :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\">Clear</b-button>\\r\\n                      </b-input-group-append>\\r\\n                    </b-input-group>\\r\\n                  </b-form-group>\\r\\n                </b-col>\\r\\n                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                  <b-form-group label=\\\"Per page\\\" label-for=\\\"per-page-select\\\" label-cols-sm=\\\"6\\\" label-cols-md=\\\"4\\\"\\r\\n                    label-cols-lg=\\\"3\\\" label-align-sm=\\\"right\\\" label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                    <b-form-select id=\\\"per-page-select\\\" v-model=\\\"perPage\\\" :options=\\\"pageOptions\\\"\\r\\n                      size=\\\"sm\\\"></b-form-select>\\r\\n                  </b-form-group>\\r\\n                </b-col>\\r\\n                <b-col sm=\\\"6\\\" class=\\\"my-1 text-right\\\">\\r\\n                  page :{{ currentPage }} / {{ getLastPage(totalRows) }} of {{ totalRows }}\\r\\n                  <b-button :disabled=\\\"adding == true || isEditing() == true\\\" @click=\\\"OnAdd\\\"\\r\\n                    size=\\\"sm\\\"><b>Add</b></b-button>\\r\\n                </b-col>\\r\\n                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                  <b-pagination :disabled=\\\" adding == true || isEditing() == true \\\" v-model=\\\"currentPage\\\" :total-rows=\\\"totalRows\\\" :per-page=\\\"perPage\\\" align=\\\"fill\\\" size=\\\"sm\\\"\\r\\n                    class=\\\"my-0\\\"></b-pagination>\\r\\n                </b-col>\\r\\n              </b-row>\\r\\n  \\r\\n            </td>\\r\\n          </template>\\r\\n  \\r\\n        </b-table>\\r\\n      </form>\\r\\n      <!-- Info modal -->\\r\\n      <b-modal :id=\\\"infoModal.id\\\" :title=\\\"infoModal.title\\\" ok-only @hide=\\\"resetInfoModal\\\">\\r\\n        <pre>{{ infoModal.content }}</pre>\\r\\n      </b-modal>\\r\\n    </b-container>\\r\\n  </template>\\r\\n  \\r\\n  <script>\\r\\n  \\r\\n  import VeeValidate from \\\"vee-validate\\\";\\r\\n  import Vue from \\\"vue\\\";\\r\\n  Vue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n  });\\r\\n  \\r\\n  import moment from \\\"moment\\\";\\r\\n  \\r\\n  import vSelect from \\\"vue-select\\\";\\r\\n  Vue.component(\\\"v-select\\\", vSelect);\\r\\n  //import \\\"vue-select/dist/vue-select.css\\\";\\r\\n  \\r\\n  export default {\\r\\n    data() {\\r\\n      return {\\r\\n        items: [\\r\\n        ],\\r\\n        fields: [\\r\\n          {\\r\\n            key: 'Id',\\r\\n            sortable: true,\\r\\n            thClass: 'text-center',\\r\\n            tdClass: 'text-center align-middle',\\r\\n            //tdClass: 'align-middle'\\r\\n            thStyle: { width: \\\"8%\\\" },\\r\\n          },\\r\\n          { key: 'Username', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"20%\\\" }},\\r\\n          { key: 'Password', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"10%\\\" }},\\r\\n          { key: 'Roles', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"50%\\\" }},\\r\\n          {\\r\\n            key: 'cmd',\\r\\n            class: 'text-center',\\r\\n            thClass: 'text-center',\\r\\n            tdClass: 'align-middle',\\r\\n            thStyle: { width: \\\"12%\\\" }\\r\\n          }\\r\\n        ],\\r\\n        totalRows: 1,\\r\\n        currentPage: 1,\\r\\n        perPage: 3,\\r\\n        pageOptions: [3,5, 10, 15, { value: 100, text: \\\"Show a lot\\\" }],\\r\\n        sortBy: '',\\r\\n        sortDesc: false,\\r\\n        sortDirection: 'asc',\\r\\n        filter: null,\\r\\n        filterOn: [],\\r\\n        infoModal: {\\r\\n          id: 'info-modal',\\r\\n          title: '',\\r\\n          content: ''\\r\\n        },\\r\\n  \\r\\n        sel: {},\\r\\n        pri: 'Id',\\r\\n        adding: false,\\r\\n        lastPage:0,\\r\\n  \\r\\n      }\\r\\n    },\\r\\n    computed: {\\r\\n      sortOptions() {\\r\\n        // Create an options list from our fields\\r\\n        return this.fields\\r\\n          .filter(f => f.sortable)\\r\\n          .map(f => {\\r\\n            return { text: f.label, value: f.key }\\r\\n          })\\r\\n      }\\r\\n    },\\r\\n    mounted() {\\r\\n      let items = [\\r\\n      ];\\r\\n      items.push(\\r\\n        {Id:1,Username:'admin',Password:'123',Roles:[\\\"Admin\\\",\\\"ChuQuan\\\"]}\\r\\n      )\\r\\n    //   for(var i=1;i<6;i++){\\r\\n    //     items.push({\\r\\n    //       id:i,\\r\\n    //       name:`thuc ${i}`\\r\\n    //     })\\r\\n    //   }\\r\\n      this.items = items;\\r\\n      this.totalRows = this.items.length;\\r\\n      this.lastPage=this.getLastPage(this.totalRows);\\r\\n    },\\r\\n    methods: {\\r\\n      createId(){\\r\\n        let max=0;\\r\\n        this.items.forEach(x=>{\\r\\n          if(x[this.pri] > max){\\r\\n            max=x[this.pri];\\r\\n          }\\r\\n        })\\r\\n        return max+1;\\r\\n      },\\r\\n      onSave(item) {\\r\\n        this.$validator.validateAll().then((result) => {\\r\\n          if (!result) {\\r\\n            this.toast(\\\"Không hợp lệ\\\");\\r\\n            return;\\r\\n          }\\r\\n          let r = JSON.parse(JSON.stringify(item));\\r\\n          if(r[this.pri]==0){\\r\\n            let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\\r\\n            r[this.pri] = this.createId();//new Date().getTime();\\r\\n            this.$set(this.items, index, r);\\r\\n            this.adding=false;\\r\\n            this.$refs.mytable.refresh();\\r\\n          }else{\\r\\n            let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\\r\\n            this.$set(this.items, index, r);\\r\\n            this.sel={};\\r\\n          }\\r\\n        });\\r\\n      },\\r\\n      OnDel(item) {\\r\\n        this.delRow(item);\\r\\n      },\\r\\n      delRow(item) {\\r\\n        let id = item[this.pri];\\r\\n        let index = this.items.findIndex(x => x[this.pri] == id);\\r\\n        this.items.splice(index, 1);\\r\\n        this.totalRows = this.items.length;\\r\\n        this.lastPage = this.getLastPage(this.totalRows);\\r\\n      },\\r\\n      doCancel(item) {\\r\\n        for (let key in item) {\\r\\n          if (item[key] != this.sel[key]) {\\r\\n            item[key] = this.sel[key]\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      isAdded() {\\r\\n        let kq = false;\\r\\n        this.items.forEach(x => {\\r\\n          if (x[this.pri] == 0) kq = true;\\r\\n        })\\r\\n        return kq;\\r\\n      },\\r\\n      OnEdit(item) {\\r\\n        if (JSON.stringify(this.sel) != \\\"{}\\\") return;\\r\\n        this.sel = JSON.parse(JSON.stringify(item));\\r\\n      },\\r\\n      OnCancel(item) {\\r\\n        if (item[this.pri] == 0) {\\r\\n          let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\\r\\n          this.items.splice(index, 1);\\r\\n          this.adding = false;\\r\\n          this.$refs.mytable.refresh();\\r\\n        } else {\\r\\n          this.doCancel(item);\\r\\n          this.sel = {};\\r\\n        }\\r\\n      },\\r\\n      OnAdd() {\\r\\n        // let r = {\\r\\n        //   id: 0,\\r\\n        //   name: 'Thức',\\r\\n        // }\\r\\n        let r={Id:0,Username:'sfsf',Password:'sfsf',Roles:'User'};\\r\\n        this.items.unshift(r);\\r\\n        this.adding = true;\\r\\n        this.currentPage=1;\\r\\n        this.totalRows=this.items.length;\\r\\n        this.$refs.mytable.refresh();\\r\\n      },\\r\\n      isEditing() {\\r\\n        return JSON.stringify(this.sel) != \\\"{}\\\"\\r\\n      },\\r\\n      getLastPage(count) {\\r\\n        let pageSize = this.perPage;//this.tabulator.getPageSize();\\r\\n        let du = count % pageSize;\\r\\n        return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n      },\\r\\n      info(item, index, button) {\\r\\n        this.infoModal.title = `Row index: ${index}`\\r\\n        this.infoModal.content = JSON.stringify(item, null, 2)\\r\\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\\r\\n      },\\r\\n      resetInfoModal() {\\r\\n        this.infoModal.title = ''\\r\\n        this.infoModal.content = ''\\r\\n      },\\r\\n      onFiltered(filteredItems) {\\r\\n        this.totalRows = filteredItems.length\\r\\n        this.currentPage = 1\\r\\n      },\\r\\n      toast(msg, variant = null) {\\r\\n        this.$bvToast.toast(msg, {\\r\\n          title: `Information`,\\r\\n          variant: variant,\\r\\n          solid: true,\\r\\n        });\\r\\n      },\\r\\n  \\r\\n    }\\r\\n  }\\r\\n  </script>\\r\\n\";"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","items","on","$event","stopPropagation","preventDefault","onSave","apply","arguments","ref","fields","currentPage","perPage","filter","filterOn","sortBy","sortDesc","sortDirection","onFiltered","scopedSlots","_u","key","fn","value","item","field","sel","pri","_e","directives","name","rawName","expression","class","errors","has","model","callback","$$v","$set","danger","option","id","label","row","staticClass","OnCancel","isAdded","OnEdit","OnDel","data","columns","pageOptions","getLastPage","totalRows","adding","isEditing","OnAdd","infoModal","title","resetInfoModal","content","staticRenderFns","Vue","classes","fieldsBagName","sortable","thClass","tdClass","thStyle","width","text","lastPage","computed","sortOptions","f","map","mounted","Id","Username","Password","Roles","methods","createId","max","r","delRow","doCancel","info","toast","variant","solid","component"],"sourceRoot":""}