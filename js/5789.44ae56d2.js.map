{"version":3,"file":"js/5789.44ae56d2.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/Tabulator/TabulatorModalLocal.vue?7edc","webpack://vue_start_1/src/views/Tabulator/TabulatorModalLocal.vue","webpack://vue_start_1/./src/views/Tabulator/TabulatorModalLocal.vue?abe2","webpack://vue_start_1/./src/views/Tabulator/TabulatorModalLocal.vue?bc50","webpack://vue_start_1/./src/views/Tabulator/TabulatorModalLocal.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tpl\"},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./TabulatorModalLocal.vue').default}}),_c('h1',[_vm._v(\"This is Tabulator2\")]),_c('div',[_c('div',{staticClass:\"mb-1\"},[_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onTest}},[_vm._v(\"Test\")]),_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onAdd}},[_vm._v(\"Add\")])]),_vm._v(\" \"+_vm._s(_vm.msg)+\" \"),_c('div',{ref:\"table\"})]),_c('b-modal',{ref:\"my-modal2\",attrs:{\"id\":\"modal-1\",\"size\":\"sm\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":\"BootstrapVue\"}},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.id),expression:\"r.id\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"disabled\":\"\"},domProps:{\"value\":(_vm.r.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"id\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Name \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.name),expression:\"r.name\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                  'form-control': true,\n                  'ko-hop-le': _vm.errors.has('name'),\n              },attrs:{\"type\":\"text\",\"name\":\"name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.r.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"name\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Ngay \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-datepicker',{staticClass:\"mb-2\",attrs:{\"date-format-options\":{ year: 'numeric', month: 'numeric', day: 'numeric' },\"locale\":\"vi\"},model:{value:(_vm.r.ngay),callback:function ($$v) {_vm.$set(_vm.r, \"ngay\", $$v)},expression:\"r.ngay\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Act \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-checkbox',{attrs:{\"name\":\"checkbox-1\",\"value\":\"true\",\"unchecked-value\":\"false\"},on:{\"change\":_vm.ChangeAct},model:{value:(_vm.r.act),callback:function ($$v) {_vm.$set(_vm.r, \"act\", $$v)},expression:\"r.act\"}},[_vm._v(\" Active \")])],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Thành phố \"+_vm._s(_vm.errors.has('tp'))+\" \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('tp') },attrs:{\"name\":\"tp\",\"reduce\":function (option) { return option.id; },\"options\":_vm.tps,\"has-error\":_vm.errors.has('tp')},model:{value:(_vm.r.tp),callback:function ($$v) {_vm.$set(_vm.r, \"tp\", $$v)},expression:\"r.tp\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Quyền \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('quyen') },attrs:{\"multiple\":\"\",\"name\":\"quyen\",\"options\":['Admin','User','Editor']},model:{value:(_vm.r.quyen),callback:function ($$v) {_vm.$set(_vm.r, \"quyen\", $$v)},expression:\"r.quyen\"}})],1)])]),_c('div',{staticClass:\"float-right\"},[_c('button',{staticClass:\"btn btn-primary mr-1 btn-sm\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn btn-sm\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"tpl\">\r\n    <raw-loader :mytxt=\" require('!raw-loader!./TabulatorModalLocal.vue').default \"></raw-loader>\r\n    <h1>This is Tabulator2</h1>\r\n    <div>\r\n      <div class=\"mb-1\">\r\n        <button class=\"mr-1\" @click=\"onTest\" >Test</button>\r\n        <button class=\"mr-1\" @click=\"onAdd\" >Add</button>\r\n      </div>\r\n      {{msg}}\r\n      <div ref=\"table\"></div>    \r\n    </div>\r\n\r\n    <b-modal ref=\"my-modal2\" id=\"modal-1\" size=\"sm\" :no-close-on-backdrop=\"true\" hide-footer title=\"BootstrapVue\">\r\n      <form @submit.stop.prevent=\"onSaveModal\">\r\n        <div>\r\n          <!-- {{r}} -->\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">Id</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" class=\"form-control\" disabled v-model=\"r.id\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Name\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"r.name\"\r\n                name=\"name\"\r\n                v-validate=\"'required'\"                \r\n                :class=\"{\r\n                    'form-control': true,\r\n                    'ko-hop-le': errors.has('name'),\r\n                }\"\r\n                autocomplete=\"off\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Ngay\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <b-form-datepicker \r\n                v-model=\"r.ngay\" \r\n                :date-format-options=\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\"\r\n                locale=\"vi\"\r\n                class=\"mb-2\" >\r\n              </b-form-datepicker>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Act\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <b-form-checkbox\r\n                v-model=\"r.act\"\r\n                name=\"checkbox-1\"\r\n                value=true\r\n                unchecked-value=false\r\n                @change=\"ChangeAct\"                \r\n              >\r\n                Active\r\n              </b-form-checkbox>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Thành phố {{ errors.has('tp') }}\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <v-select\r\n                v-model=\"r.tp\"\r\n                name=\"tp\"\r\n                v-validate=\"'required'\"\r\n                :reduce=\"(option) => option.id\"\r\n                :options=\"tps\"\r\n                :has-error=\"errors.has('tp')\"\r\n                :class=\"{ danger: errors.has('tp') }\"                \r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Quyền\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <v-select \r\n                multiple\r\n                name=\"quyen\" \r\n                v-model=\"r.quyen\" \r\n                :options=\"['Admin','User','Editor']\" \r\n                v-validate=\"'required'\"\r\n                :class=\"{ danger: errors.has('quyen') }\"                \r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!--\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">Id</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" class=\"form-control\" v-model=\"r.Id\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Name\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"r.Name\"\r\n                v-validate=\"'required'\"\r\n                name=\"Name\"\r\n                :class=\" 'form-control' \" \r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Thành phố\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <v-select\r\n                v-model=\"r.Tp\"\r\n                v-validate=\"'required'\"\r\n                :reduce=\"(option) => option.id\"\r\n                :options=\"[\r\n                  { label: 'Huế', id: 'HUE' },\r\n                  { label: 'Sài gòn', id: 'SG' },\r\n                  { label: 'Đà nẵng', id: 'DN' },\r\n                ]\"\r\n              />\r\n            </div>\r\n          </div>\r\n          -->\r\n\r\n\r\n        </div>  \r\n        <div class=\"float-right\">\r\n          <button type=\"submit\" class=\"btn btn-primary mr-1 btn-sm\">Save</button>\r\n          <button type=\"button\" class=\"btn btn-sm\" @click=\"hideModal()\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </b-modal>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport {TabulatorFull as Tabulator} from 'tabulator-tables';\r\nimport $ from \"jquery\";\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n  classes: true,\r\n});\r\n\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\nimport \"vue-select/dist/vue-select.css\";\r\n\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n  name: 'Tpl',\r\n  components: {\r\n  },\r\n  data(){\r\n    return {\r\n      msg:\"thuc 101\",\r\n      tabulator: null, //variable to hold your table\r\n      tableData: [\r\n\r\n        {id:1,name:\"thuc 101\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] },\r\n        {id:2,name:\"thuc 102\",ngay:new Date(),act:false,tp:\"QN\",quyen:[] },\r\n        {id:3,name:\"thuc 103\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] }\r\n\r\n\r\n\r\n      ], //data for table to display\r\n      r:{},\r\n      tps:[\r\n        { label: 'Huế', id: 'HUE' },\r\n        { label: 'Sài gòn', id: 'SG' },\r\n        { label: 'Đà nẵng', id: 'DN' },\r\n        { label: 'Quảng ngãi', id: 'QN' },\r\n      ]\r\n    }\r\n  },\r\n  mounted(){\r\n      let that=this;\r\n      var dateFormatter = function(cell, formatterParams){\r\n        var value = cell.getValue();\r\n        if(value){\r\n          value = moment(value , \"YYYY/MM/DD\").format(\"DD/MM/YYYY\");\r\n        }\r\n        return value;\r\n      };\r\n      this.tabulator = new Tabulator(this.$refs.table, {\r\n        // data: this.tableData, //link data to table\r\n        reactiveData:true, //enable data reactivity\r\n        // columns: [], //define table columns\r\n        data:this.tableData,      //load row data from array\r\n        //layout:\"fitColumns\",      //fit columns to width of table\r\n        responsiveLayout:\"hide\",  //hide columns that dont fit on the table\r\n        addRowPos:\"bottom\",       //top,bottom//when adding a new row, add it to the top of the table\r\n        history:true,             //allow undo and redo actions on the table\r\n        pagination:\"local\",       //paginate the data\r\n        paginationSize:3,         //allow 7 rows per page of data\r\n        paginationCounter:\"rows\", //display count of paginated rows in footer\r\n\r\n        paginationInitialPage:1, //optional parameter to set the initial page to load    \r\n        paginationSizeSelector: [5, 10, 20, 30, 50],\r\n\r\n        movableColumns:true,      //allow column order to be changed\r\n        initialSort:[             //set the initial sort order of the data\r\n            {column:\"name\", dir:\"asc\"},\r\n        ],\r\n        height:$(window).innerHeight()-400,//'200px',//$(window).innerHeight()\r\n        layout:\"fitDataFill\",//fitColumns//fitDataFill//fitData//fitDataStretch//fitDataTable//\r\n\r\n        //footerElement:$(\"<div class='tabulator-footer'><span>Custom Span With Stuff In</span></div>\"),\r\n        //footerElement: \"<div>Hello world</div>\",\r\n        footerElement:\"<button id='customButton' class='mr-1'>Custom Button</button>\",\r\n\r\n        index:\"id\",\r\n        //autoColumns:true,\r\n        columns: [                 //define the table columns\r\n          {\r\n            title: \"STT\",\r\n            formatter: \"rownum\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n          },\r\n          {\r\n            title: \"Cmd\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            headerSort: false,\r\n            width: 75,\r\n            formatter: function (cell, formatterParams, onRendered) {\r\n              onRendered(function () {\r\n                $(cell.getElement()).find(\"#edit\").on(\"click\", cell.getRow(), that.onEdit);\r\n                $(cell.getElement()).find(\"#del\").on(\"click\", cell.getRow(), that.onDel);\r\n              });\r\n              let $div = $(\"<div>\");\r\n              let $btnEdit=  $(\"<button>\", { text: \"Edit\", class: \"mr-1\" }).attr(\"id\", \"edit\");\r\n              let $btnDel=  $(\"<button>\", { text: \"Del\", class: \"mr-1\" }).attr(\"id\", \"del\");\r\n              $div.append($btnEdit);\r\n              $div.append($btnDel);\r\n              return $div[0];\r\n            },\r\n          },\r\n          {\r\n            title: \"Id\",\r\n            field: \"id\",\r\n            width: 60,\r\n            //headerFilter: true,\r\n            hozAlign: \"center\",\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            width: 200,\r\n          },\r\n          {\r\n            title: \"Ngày\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            field: \"ngay\",\r\n            width: 100,\r\n            formatter:dateFormatter,\r\n          },\r\n          /*\r\n          Tại sao không hoạt động\r\n          {title:\"Act\", field:\"act\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            formatter:\"tickCross\", \r\n            formatterParams:{\r\n              allowEmpty:true,\r\n              allowTruthy:true,\r\n              tickElement:\"yes\",//\"<i class='fa fa-check'></i>\",\r\n              crossElement:\"no\"//\"<i class='fa fa-times'></i>\",\r\n            }\r\n          },\r\n          */\r\n          {title:\"Act\", field:\"act\", \r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            formatter:function(cell, formatterParams, onRendered){\r\n              let $chk=$(\"<input type='checkbox'>\").prop(\"checked\",cell.getValue()).attr(\"disabled\", true);\r\n              return $chk[0];\r\n            },\r\n          },\r\n          {\r\n            title: \"Thành phố\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            field: \"tp\",\r\n            width: 130,\r\n            formatter:function(cell, formatterParams, onRendered){\r\n              let tp=cell.getValue();\r\n              let tps=that.tps;\r\n              let index=that.tps.findIndex(x=>x.id==tp);\r\n              return `${tp} - ${that.tps[index].label}`;\r\n            },\r\n          },\r\n          {\r\n            title: \"Quyền\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            field: \"quyen\",\r\n            width: 150,\r\n            formatter:function(cell, formatterParams, onRendered){\r\n              return JSON.stringify(cell.getValue());\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      this.tabulator.on(\"dataLoaded\", function(data){\r\n        //$(\"#table1\").tabulator(\"setData\", \r\n        let ar=[\r\n          {id:1,name:\"thuc 101\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] },\r\n          {id:2,name:\"thuc 102\",ngay:new Date(),act:false,tp:\"QN\",quyen:[] },\r\n          {id:3,name:\"thuc 103\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] }\r\n        ]\r\n        ar.forEach(x=>{\r\n          //that.tabulatorAdd(x);\r\n        })\r\n        /*\r\n        that.tabulator.replaceData([\r\n          {id:1,name:\"thuc 101\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] },\r\n          {id:2,name:\"thuc 102\",ngay:new Date(),act:false,tp:\"QN\",quyen:[] },\r\n          {id:3,name:\"thuc 103\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] }\r\n        ]); //load data array\r\n        */        \r\n        let $tabu=$(that.$refs.table);\r\n        //$tabu.tabulator(\"addData\",ar,true);\r\n        //$tabu.tabulator();\r\n        //table.addData([{id:1, name:\"bob\", gender:\"male\"}, {id:2, name:\"Jenny\", gender:\"female\"}], true);\r\n        let $span = $(\"<span id='total' class='mr-1'>\").text(\"[total]\");\r\n        $tabu.find(\".tabulator-footer-contents span.tabulator-paginator\").prepend($span);\r\n        $tabu.find(\"#customButton\").on(\"click\",function(){\r\n          alert('hello');\r\n        })\r\n        let $myAddBtn=$(\"<button class='mr-1'>MyAdd</button>\");\r\n        $myAddBtn.on(\"click\",function(){\r\n          alert(\"hello myAddBtn\");\r\n        })\r\n        $tabu.find(\".tabulator-footer-contents span.tabulator-paginator\").prepend($myAddBtn);\r\n      });\r\n      this.tabulator.on(\"pageLoaded\", function(pageno){\r\n        let $tabu=$(that.$refs.table);\r\n        $tabu.find(\".tabulator-footer-contents\").find(\"span#total\").text(`[${new Date().getTime()}]`);\r\n      }); \r\n      this.tabulator.on(\"dataChanged\", function(data){\r\n        console.log('data change')\r\n        let r={\r\n          data:data,\r\n          tableData:that.tableData,\r\n          getPageSize:that.tabulatorGetPageSize(),\r\n          getPage:that.tabulatorGetPage(),\r\n          total:that.tabulatorGetData().length,\r\n          lastPage:that.tabulatorGetLastPage( that.tabulatorGetData().length ),\r\n        }\r\n        that.msg=r;\r\n      });\r\n      this.tabulator.on(\"cellEdited\", function (cell) {\r\n          let index = cell.getRow().getIndex();\r\n          let row = cell.getRow();\r\n          cell.getData().dirty = true;\r\n          /*Code update row here*/\r\n          //that.onUpdateRow(row);\r\n          /*Code update row here*/\r\n      });  \r\n      $(\"#customButton\").on(\"click\",function(){\r\n        alert('hello');\r\n      })  \r\n  },\r\n  watch: {\r\n    tableData: {\r\n      handler: function (newData) {\r\n        this.tabulator.replaceData(newData);\r\n      },\r\n      deep: true\r\n    }\r\n  },  \r\n  created(){\r\n\r\n    this.$nextTick(() => {\r\n          //alert(this.tabulator);\r\n      let ar=[\r\n        {id:1,name:\"thuc 101\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] },\r\n        {id:2,name:\"thuc 102\",ngay:new Date(),act:false,tp:\"QN\",quyen:[] },\r\n        {id:3,name:\"thuc 103\",ngay:new Date(),act:true,tp:\"QN\",quyen:[] }\r\n      ]\r\n      // ar.forEach(x=>{\r\n      //   //this.tabulatorAdd(x);\r\n      //   //console.log(x);\r\n      // })\r\n      //this.tableData=ar;\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n  },\r\n  methods:{\r\n    ChangeAct(){\r\n      let act=(this.r.act=='true') ? true : false;\r\n      this.r.act=act;\r\n    },\r\n    onSaveModal(){\r\n      this.$validator.validateAll().then((result) => {\r\n        if (!result) {\r\n          this.toast(\"Không hợp lệ\");\r\n          return;\r\n        }\r\n        let r=JSON.parse(JSON.stringify(this.r));\r\n        if(r.id==0){\r\n          r.id=new Date().getTime();\r\n          this.tabulatorAdd(r);        \r\n          this.hideModal();\r\n        }else{\r\n          this.tabulatorUpdate(r);\r\n          this.hideModal();\r\n        }\r\n      })//end validator\r\n    },    \r\n    onAdd(){\r\n      this.r={\r\n        id:0,\r\n        name:\"thuc 101\",\r\n        ngay:new Date(),\r\n        act:true,\r\n        tp:\"QN\",\r\n        quyen:[] \r\n      };\r\n      this.showModal();\r\n    },\r\n    onDataLoaded(data){\r\n      let ar=[];\r\n      data.forEach((x,i)=>{\r\n        ar.push({x:x.id});\r\n      })\r\n      let curPage= this.tabulator.getPage();\r\n      this.msg={ar:ar,curPage:curPage};\r\n    },\r\n    add(r){\r\n      this.tabulator.addData([r], true);        \r\n    },\r\n    onTest(){\r\n      let ar=this.tabulatorGetData();\r\n      let r={\r\n        ar:ar,\r\n        getPageSize:this.tabulatorGetPageSize(),\r\n        getPage:this.tabulatorGetPage(),\r\n        total:this.tabulatorGetData().length,\r\n        lastPage:this.tabulatorGetLastPage( this.tabulatorGetData().length ),\r\n      }\r\n      alert(JSON.stringify(r));\r\n    },\r\n    onSave(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      if (\r\n        this.rowValidate(row) == true\r\n        // && row.getData().monid != 0\r\n        // && row.getData().banid != 0\r\n        //    && row.getData().solg > 0\r\n      ) {\r\n        let r1 = row.getData();\r\n        let r = JSON.parse(JSON.stringify(r1));\r\n        /*                                                                                  convert data date nếu cần */\r\n        // let Ngay = this.DateToYMD(r.Ngay);\r\n        // r.Ngay = Ngay;\r\n        /*                                                                                  convert data nếu cần */\r\n        /*\r\n        this.Save(r).then((res) => {\r\n          if (res.data.kq == \"ok\") {\r\n            this.toast(res.data.msg);\r\n            this.setPage(this.getPage());\r\n          } else {\r\n            this.toast(res.data.msg);\r\n          }\r\n        });\r\n        */\r\n      } else {\r\n        this.toast(\"Dữ liệu không hợp lệ!\");\r\n        return;\r\n      }\r\n    },\r\n    onCancel(e) {\r\n      e.preventDefault();\r\n      this.setPage(this.getPage());\r\n    },\r\n\r\n    onDel(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      this.tabulator.deleteRow(id);\r\n      /*\r\n\r\n      this.Del(id).then((res) => {\r\n        //alert(JSON.stringify(res));\r\n        //{\"data\":{\"kq\":\"ok\",\"msg\":\"Delete bàn ok\"},\"status\":200,\"\r\n        if (res.data.kq == \"ok\") {\r\n          if (this.getData().length != 1) {\r\n            this.setPage(this.getPage());\r\n          } else {\r\n            if(this.getPage()!=1){\r\n              this.setPage(this.getPage() - 1);\r\n            }else{\r\n              this.setPage(this.getPage());\r\n            } \r\n          }\r\n        }\r\n        this.toast(res.data.msg);\r\n      });\r\n\r\n      */\r\n    },\r\n    onEdit(e){\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      let r=this.tabulatorGetRow(id);\r\n      this.r=r;\r\n      this.showModal();\r\n    }, \r\n\r\n    tabulatorGetLastPage(count) {\r\n      let pageSize = this.tabulator.getPageSize();\r\n      let du = count % pageSize;\r\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n    },\r\n    tabulatorGetPageSize() {\r\n      return this.tabulator.getPageSize();\r\n    },\r\n    tabulatorGetPage() {\r\n      return this.tabulator.getPage();\r\n    },\r\n    tabulatorSetPage(_page) {\r\n      this.tabulator.setPage(_page);\r\n    },\r\n    tabulatorGetData(){\r\n      return this.tabulator.getData();\r\n    },\r\n    tabulatorAdd(r){\r\n      this.tabulator.addData([r], true);        \r\n    },\r\n    tabulatorDel(id){\r\n      this.tabulator.deleteRow(id);\r\n    },\r\n    tabulatorUpdate(r){\r\n      this.tabulator.updateData([r]);\r\n      //table.updateData([{id:1, name:\"bob\"}]); //update data\r\n    },\r\n    tabulatorGetRow(id){\r\n      let index=this.tabulator.getData().findIndex(x=>x.id==id);\r\n      let r=this.tabulator.getData()[index];\r\n      return r;\r\n    },\r\n    toast(msg, variant = null) {\r\n      this.$bvToast.toast(msg, {\r\n        title: `Information`,\r\n        variant: variant,\r\n        solid: true,\r\n      });\r\n    },\r\n    showModal() {\r\n        this.$refs['my-modal2'].show()\r\n    },\r\n    hideModal() {\r\n      this.$refs['my-modal2'].hide()\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n  $vs-red:red;\r\n  $vs-default:rgba(60, 60, 60, 0.26);\r\n  $vs-colors: (\r\n      lightest: $vs-default,//$vs-red, //rgba(60, 60, 60, 0.26),\r\n      light: rgba(60, 60, 60, 0.5),\r\n      dark: #333,\r\n      darkest: rgba(0, 0, 0, 0.15),\r\n  ) !default;\r\n\r\n  //  Global Component Variables\r\n  $vs-component-bg: none !default;\r\n  $vs-component-line-height: 1.8 !default;\r\n  $vs-component-placeholder-color: inherit !default;\r\n\r\n  //  Active State\r\n  $vs-state-active-bg: #5897fb !default;\r\n  $vs-state-active-color: #fff !default;\r\n\r\n  //  Deselect State\r\n  $vs-state-deselect-bg: #fb5858 !default;\r\n  $vs-state-deselect-color: #fff !default;\r\n\r\n  //  Disabled State\r\n  $vs-state-disabled-bg: rgb(248, 248, 248) !default;\r\n  $vs-state-disabled-color: map_get($vs-colors, 'light') !default;\r\n  $vs-state-disabled-controls-color: map_get($vs-colors, 'light') !default;\r\n  $vs-state-disabled-cursor: not-allowed !default;\r\n\r\n  //  Borders\r\n  $vs-border-width: 1px !default;\r\n  $vs-border-style: solid !default;\r\n  $vs-border-radius: 4px !default;\r\n  $vs-border-color: map_get($vs-colors, 'lightest') !default;\r\n\r\n  //  Component Controls: Clear, Open Indicator\r\n  $vs-controls-color: map_get($vs-colors, 'light') !default;\r\n  $vs-controls-size: 1 !default;\r\n  $vs-controls-deselect-text-shadow: 0 1px 0 #fff !default;\r\n\r\n  //  Selected\r\n  $vs-selected-bg: #f0f0f0 !default;\r\n  $vs-selected-border-color: $vs-border-color !default;\r\n  $vs-selected-border-style: $vs-border-style !default;\r\n  $vs-selected-border-width: $vs-border-width !default;\r\n\r\n  //  Dropdown\r\n  $vs-dropdown-z-index: 1000 !default;\r\n  $vs-dropdown-min-width: 160px !default;\r\n  $vs-dropdown-max-height: 350px !default;\r\n  $vs-dropdown-box-shadow: 0px 3px 6px 0px map_get($vs-colors, 'darkest') !default;\r\n  $vs-dropdown-bg: #fff !default;\r\n\r\n  @import \"vue-select/src/scss/vue-select.scss\";\r\n  .xyz{\r\n    border: 1px solid red;\r\n  }\r\n\r\n  .danger, \r\n  .danger .dropdown-toggle, \r\n  .danger .selected-tag {\r\n    background-color: aqua;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .ko-hop-le {\r\n    border-radius: 4px;\r\n    background-color: aqua;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n/*  \r\n  .style-chooser .vs__search::placeholder,\r\n  .style-chooser .vs__dropdown-toggle,\r\n  .style-chooser .vs__dropdown-menu {\r\n    background: #dfe5fb;\r\n    border: none;\r\n    color: #394066;\r\n    text-transform: lowercase;\r\n    font-variant: small-caps;\r\n  }\r\n\r\n  .style-chooser .vs__clear,\r\n  .style-chooser .vs__open-indicator {\r\n    fill: #394066;\r\n  }\r\n*/\r\n\r\n  $textSize: 8.5px; //14px !default; //table text size\r\n  @import \"~tabulator-tables/src/scss/tabulator.scss\";\r\n  .tabulator-col-title {\r\n    text-align: center;\r\n  }\r\n  .tabulator .tabulator-footer .tabulator-page.active {\r\n    background-color: greenyellow !important;\r\n    color: blue !important;\r\n  }\r\n  .b-calendar .b-calendar-grid-body .col[data-date] .btn {\r\n    width: 24px;\r\n    height: 24px;\r\n    font-size: 10px;\r\n    line-height: 1;\r\n    margin: 0px auto;\r\n    padding: 6px 0;\r\n  }\r\n  .custom-control.custom-checkbox {\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    min-height: 0.9rem;\r\n    padding-left: 1.5rem;\r\n    padding-top: 0.3rem;\r\n  }\r\n  .col-4 input {\r\n    margin-bottom: 1px;\r\n  }\r\n  .form-group {\r\n    margin-bottom: 0.3rem;\r\n  }\r\n\r\n\r\n/*\r\n  .select2,\r\n  .select2-selection {\r\n    width: 100% !important;\r\n  }\r\n  .select2-container .select2-selection--single {\r\n    height: 27px;\r\n  }\r\n  .select2-container--default .select2-selection--single .select2-selection__rendered {\r\n    color: #444;\r\n    line-height: 26px;\r\n  }\r\n  .ko-hop-le-select2 {\r\n    border: 1px solid red;\r\n    border-radius: 10px;\r\n  }\r\n  .ko-hop-le {\r\n    border: 1px solid red;\r\n    border-radius: 10px;\r\n  }\r\n  .datepicker td,\r\n  th {\r\n    text-align: center;\r\n    padding: 0px 6px;\r\n    font-size: 10px;\r\n  }\r\n  .my-invalid .select2-container {\r\n    border: 1px solid red;\r\n    border-radius: 5px;\r\n  }\r\n  .col-form-label {\r\n    padding-top: calc(0.375rem + 1px);\r\n    padding-bottom: calc(0.375rem + 1px);\r\n    margin-bottom: 0;\r\n    font-size: inherit;\r\n    line-height: 1.5;\r\n    font-weight: bold;\r\n  }\r\n  .vs__dropdown-toggle {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    background: none;\r\n    border: var(--vs-border-width) var(--vs-border-style) var(--vs-border-color);\r\n    border-radius: var(--vs-border-radius);\r\n    display: flex;\r\n    padding: 0 0 0px;\r\n    white-space: normal;\r\n  }\r\n  .ko-hop-le-select2 {\r\n    border: 1px solid red;\r\n    border-radius: 10px;\r\n  }\r\n  .ko-hop-le{\r\n    border: 1px solid red;\r\n    background: orange;\r\n    border-radius: 10px;\r\n  }\r\n  */\r\n\r\n  </style>\r\n\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TabulatorModalLocal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TabulatorModalLocal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TabulatorModalLocal.vue?vue&type=template&id=5d840b30&\"\nimport script from \"./TabulatorModalLocal.vue?vue&type=script&lang=js&\"\nexport * from \"./TabulatorModalLocal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TabulatorModalLocal.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div class=\\\"tpl\\\">\\r\\n    <raw-loader :mytxt=\\\" require('!raw-loader!./TabulatorModalLocal.vue').default \\\"></raw-loader>\\r\\n    <h1>This is Tabulator2</h1>\\r\\n    <div>\\r\\n      <div class=\\\"mb-1\\\">\\r\\n        <button class=\\\"mr-1\\\" @click=\\\"onTest\\\" >Test</button>\\r\\n        <button class=\\\"mr-1\\\" @click=\\\"onAdd\\\" >Add</button>\\r\\n      </div>\\r\\n      {{msg}}\\r\\n      <div ref=\\\"table\\\"></div>    \\r\\n    </div>\\r\\n\\r\\n    <b-modal ref=\\\"my-modal2\\\" id=\\\"modal-1\\\" size=\\\"sm\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer title=\\\"BootstrapVue\\\">\\r\\n      <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n        <div>\\r\\n          <!-- {{r}} -->\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" disabled v-model=\\\"r.id\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Name\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input \\r\\n                type=\\\"text\\\" \\r\\n                v-model=\\\"r.name\\\"\\r\\n                name=\\\"name\\\"\\r\\n                v-validate=\\\"'required'\\\"                \\r\\n                :class=\\\"{\\r\\n                    'form-control': true,\\r\\n                    'ko-hop-le': errors.has('name'),\\r\\n                }\\\"\\r\\n                autocomplete=\\\"off\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Ngay\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-datepicker \\r\\n                v-model=\\\"r.ngay\\\" \\r\\n                :date-format-options=\\\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\\\"\\r\\n                locale=\\\"vi\\\"\\r\\n                class=\\\"mb-2\\\" >\\r\\n              </b-form-datepicker>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Act\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-checkbox\\r\\n                v-model=\\\"r.act\\\"\\r\\n                name=\\\"checkbox-1\\\"\\r\\n                value=true\\r\\n                unchecked-value=false\\r\\n                @change=\\\"ChangeAct\\\"                \\r\\n              >\\r\\n                Active\\r\\n              </b-form-checkbox>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Thành phố {{ errors.has('tp') }}\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select\\r\\n                v-model=\\\"r.tp\\\"\\r\\n                name=\\\"tp\\\"\\r\\n                v-validate=\\\"'required'\\\"\\r\\n                :reduce=\\\"(option) => option.id\\\"\\r\\n                :options=\\\"tps\\\"\\r\\n                :has-error=\\\"errors.has('tp')\\\"\\r\\n                :class=\\\"{ danger: errors.has('tp') }\\\"                \\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Quyền\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select \\r\\n                multiple\\r\\n                name=\\\"quyen\\\" \\r\\n                v-model=\\\"r.quyen\\\" \\r\\n                :options=\\\"['Admin','User','Editor']\\\" \\r\\n                v-validate=\\\"'required'\\\"\\r\\n                :class=\\\"{ danger: errors.has('quyen') }\\\"                \\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!--\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" v-model=\\\"r.Id\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Name\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input \\r\\n                type=\\\"text\\\" \\r\\n                v-model=\\\"r.Name\\\"\\r\\n                v-validate=\\\"'required'\\\"\\r\\n                name=\\\"Name\\\"\\r\\n                :class=\\\" 'form-control' \\\" \\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Thành phố\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select\\r\\n                v-model=\\\"r.Tp\\\"\\r\\n                v-validate=\\\"'required'\\\"\\r\\n                :reduce=\\\"(option) => option.id\\\"\\r\\n                :options=\\\"[\\r\\n                  { label: 'Huế', id: 'HUE' },\\r\\n                  { label: 'Sài gòn', id: 'SG' },\\r\\n                  { label: 'Đà nẵng', id: 'DN' },\\r\\n                ]\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          -->\\r\\n\\r\\n\\r\\n        </div>  \\r\\n        <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-1 btn-sm\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </b-modal>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n</template>\\r\\n<script>\\r\\nimport {TabulatorFull as Tabulator} from 'tabulator-tables';\\r\\nimport $ from \\\"jquery\\\";\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n  classes: true,\\r\\n});\\r\\n\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\nimport \\\"vue-select/dist/vue-select.css\\\";\\r\\n\\r\\nimport moment from 'moment';\\r\\n\\r\\nexport default {\\r\\n  name: 'Tpl',\\r\\n  components: {\\r\\n  },\\r\\n  data(){\\r\\n    return {\\r\\n      msg:\\\"thuc 101\\\",\\r\\n      tabulator: null, //variable to hold your table\\r\\n      tableData: [\\r\\n\\r\\n        {id:1,name:\\\"thuc 101\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] },\\r\\n        {id:2,name:\\\"thuc 102\\\",ngay:new Date(),act:false,tp:\\\"QN\\\",quyen:[] },\\r\\n        {id:3,name:\\\"thuc 103\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] }\\r\\n\\r\\n\\r\\n\\r\\n      ], //data for table to display\\r\\n      r:{},\\r\\n      tps:[\\r\\n        { label: 'Huế', id: 'HUE' },\\r\\n        { label: 'Sài gòn', id: 'SG' },\\r\\n        { label: 'Đà nẵng', id: 'DN' },\\r\\n        { label: 'Quảng ngãi', id: 'QN' },\\r\\n      ]\\r\\n    }\\r\\n  },\\r\\n  mounted(){\\r\\n      let that=this;\\r\\n      var dateFormatter = function(cell, formatterParams){\\r\\n        var value = cell.getValue();\\r\\n        if(value){\\r\\n          value = moment(value , \\\"YYYY/MM/DD\\\").format(\\\"DD/MM/YYYY\\\");\\r\\n        }\\r\\n        return value;\\r\\n      };\\r\\n      this.tabulator = new Tabulator(this.$refs.table, {\\r\\n        // data: this.tableData, //link data to table\\r\\n        reactiveData:true, //enable data reactivity\\r\\n        // columns: [], //define table columns\\r\\n        data:this.tableData,      //load row data from array\\r\\n        //layout:\\\"fitColumns\\\",      //fit columns to width of table\\r\\n        responsiveLayout:\\\"hide\\\",  //hide columns that dont fit on the table\\r\\n        addRowPos:\\\"bottom\\\",       //top,bottom//when adding a new row, add it to the top of the table\\r\\n        history:true,             //allow undo and redo actions on the table\\r\\n        pagination:\\\"local\\\",       //paginate the data\\r\\n        paginationSize:3,         //allow 7 rows per page of data\\r\\n        paginationCounter:\\\"rows\\\", //display count of paginated rows in footer\\r\\n\\r\\n        paginationInitialPage:1, //optional parameter to set the initial page to load    \\r\\n        paginationSizeSelector: [5, 10, 20, 30, 50],\\r\\n\\r\\n        movableColumns:true,      //allow column order to be changed\\r\\n        initialSort:[             //set the initial sort order of the data\\r\\n            {column:\\\"name\\\", dir:\\\"asc\\\"},\\r\\n        ],\\r\\n        height:$(window).innerHeight()-400,//'200px',//$(window).innerHeight()\\r\\n        layout:\\\"fitDataFill\\\",//fitColumns//fitDataFill//fitData//fitDataStretch//fitDataTable//\\r\\n\\r\\n        //footerElement:$(\\\"<div class='tabulator-footer'><span>Custom Span With Stuff In</span></div>\\\"),\\r\\n        //footerElement: \\\"<div>Hello world</div>\\\",\\r\\n        footerElement:\\\"<button id='customButton' class='mr-1'>Custom Button</button>\\\",\\r\\n\\r\\n        index:\\\"id\\\",\\r\\n        //autoColumns:true,\\r\\n        columns: [                 //define the table columns\\r\\n          {\\r\\n            title: \\\"STT\\\",\\r\\n            formatter: \\\"rownum\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Cmd\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            headerSort: false,\\r\\n            width: 75,\\r\\n            formatter: function (cell, formatterParams, onRendered) {\\r\\n              onRendered(function () {\\r\\n                $(cell.getElement()).find(\\\"#edit\\\").on(\\\"click\\\", cell.getRow(), that.onEdit);\\r\\n                $(cell.getElement()).find(\\\"#del\\\").on(\\\"click\\\", cell.getRow(), that.onDel);\\r\\n              });\\r\\n              let $div = $(\\\"<div>\\\");\\r\\n              let $btnEdit=  $(\\\"<button>\\\", { text: \\\"Edit\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"edit\\\");\\r\\n              let $btnDel=  $(\\\"<button>\\\", { text: \\\"Del\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"del\\\");\\r\\n              $div.append($btnEdit);\\r\\n              $div.append($btnDel);\\r\\n              return $div[0];\\r\\n            },\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Id\\\",\\r\\n            field: \\\"id\\\",\\r\\n            width: 60,\\r\\n            //headerFilter: true,\\r\\n            hozAlign: \\\"center\\\",\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Name\\\",\\r\\n            field: \\\"name\\\",\\r\\n            width: 200,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Ngày\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            field: \\\"ngay\\\",\\r\\n            width: 100,\\r\\n            formatter:dateFormatter,\\r\\n          },\\r\\n          /*\\r\\n          Tại sao không hoạt động\\r\\n          {title:\\\"Act\\\", field:\\\"act\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            formatter:\\\"tickCross\\\", \\r\\n            formatterParams:{\\r\\n              allowEmpty:true,\\r\\n              allowTruthy:true,\\r\\n              tickElement:\\\"yes\\\",//\\\"<i class='fa fa-check'></i>\\\",\\r\\n              crossElement:\\\"no\\\"//\\\"<i class='fa fa-times'></i>\\\",\\r\\n            }\\r\\n          },\\r\\n          */\\r\\n          {title:\\\"Act\\\", field:\\\"act\\\", \\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            formatter:function(cell, formatterParams, onRendered){\\r\\n              let $chk=$(\\\"<input type='checkbox'>\\\").prop(\\\"checked\\\",cell.getValue()).attr(\\\"disabled\\\", true);\\r\\n              return $chk[0];\\r\\n            },\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Thành phố\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            field: \\\"tp\\\",\\r\\n            width: 130,\\r\\n            formatter:function(cell, formatterParams, onRendered){\\r\\n              let tp=cell.getValue();\\r\\n              let tps=that.tps;\\r\\n              let index=that.tps.findIndex(x=>x.id==tp);\\r\\n              return `${tp} - ${that.tps[index].label}`;\\r\\n            },\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Quyền\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            field: \\\"quyen\\\",\\r\\n            width: 150,\\r\\n            formatter:function(cell, formatterParams, onRendered){\\r\\n              return JSON.stringify(cell.getValue());\\r\\n            },\\r\\n          },\\r\\n        ],\\r\\n      });\\r\\n      this.tabulator.on(\\\"dataLoaded\\\", function(data){\\r\\n        //$(\\\"#table1\\\").tabulator(\\\"setData\\\", \\r\\n        let ar=[\\r\\n          {id:1,name:\\\"thuc 101\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] },\\r\\n          {id:2,name:\\\"thuc 102\\\",ngay:new Date(),act:false,tp:\\\"QN\\\",quyen:[] },\\r\\n          {id:3,name:\\\"thuc 103\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] }\\r\\n        ]\\r\\n        ar.forEach(x=>{\\r\\n          //that.tabulatorAdd(x);\\r\\n        })\\r\\n        /*\\r\\n        that.tabulator.replaceData([\\r\\n          {id:1,name:\\\"thuc 101\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] },\\r\\n          {id:2,name:\\\"thuc 102\\\",ngay:new Date(),act:false,tp:\\\"QN\\\",quyen:[] },\\r\\n          {id:3,name:\\\"thuc 103\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] }\\r\\n        ]); //load data array\\r\\n        */        \\r\\n        let $tabu=$(that.$refs.table);\\r\\n        //$tabu.tabulator(\\\"addData\\\",ar,true);\\r\\n        //$tabu.tabulator();\\r\\n        //table.addData([{id:1, name:\\\"bob\\\", gender:\\\"male\\\"}, {id:2, name:\\\"Jenny\\\", gender:\\\"female\\\"}], true);\\r\\n        let $span = $(\\\"<span id='total' class='mr-1'>\\\").text(\\\"[total]\\\");\\r\\n        $tabu.find(\\\".tabulator-footer-contents span.tabulator-paginator\\\").prepend($span);\\r\\n        $tabu.find(\\\"#customButton\\\").on(\\\"click\\\",function(){\\r\\n          alert('hello');\\r\\n        })\\r\\n        let $myAddBtn=$(\\\"<button class='mr-1'>MyAdd</button>\\\");\\r\\n        $myAddBtn.on(\\\"click\\\",function(){\\r\\n          alert(\\\"hello myAddBtn\\\");\\r\\n        })\\r\\n        $tabu.find(\\\".tabulator-footer-contents span.tabulator-paginator\\\").prepend($myAddBtn);\\r\\n      });\\r\\n      this.tabulator.on(\\\"pageLoaded\\\", function(pageno){\\r\\n        let $tabu=$(that.$refs.table);\\r\\n        $tabu.find(\\\".tabulator-footer-contents\\\").find(\\\"span#total\\\").text(`[${new Date().getTime()}]`);\\r\\n      }); \\r\\n      this.tabulator.on(\\\"dataChanged\\\", function(data){\\r\\n        console.log('data change')\\r\\n        let r={\\r\\n          data:data,\\r\\n          tableData:that.tableData,\\r\\n          getPageSize:that.tabulatorGetPageSize(),\\r\\n          getPage:that.tabulatorGetPage(),\\r\\n          total:that.tabulatorGetData().length,\\r\\n          lastPage:that.tabulatorGetLastPage( that.tabulatorGetData().length ),\\r\\n        }\\r\\n        that.msg=r;\\r\\n      });\\r\\n      this.tabulator.on(\\\"cellEdited\\\", function (cell) {\\r\\n          let index = cell.getRow().getIndex();\\r\\n          let row = cell.getRow();\\r\\n          cell.getData().dirty = true;\\r\\n          /*Code update row here*/\\r\\n          //that.onUpdateRow(row);\\r\\n          /*Code update row here*/\\r\\n      });  \\r\\n      $(\\\"#customButton\\\").on(\\\"click\\\",function(){\\r\\n        alert('hello');\\r\\n      })  \\r\\n  },\\r\\n  watch: {\\r\\n    tableData: {\\r\\n      handler: function (newData) {\\r\\n        this.tabulator.replaceData(newData);\\r\\n      },\\r\\n      deep: true\\r\\n    }\\r\\n  },  \\r\\n  created(){\\r\\n\\r\\n    this.$nextTick(() => {\\r\\n          //alert(this.tabulator);\\r\\n      let ar=[\\r\\n        {id:1,name:\\\"thuc 101\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] },\\r\\n        {id:2,name:\\\"thuc 102\\\",ngay:new Date(),act:false,tp:\\\"QN\\\",quyen:[] },\\r\\n        {id:3,name:\\\"thuc 103\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] }\\r\\n      ]\\r\\n      // ar.forEach(x=>{\\r\\n      //   //this.tabulatorAdd(x);\\r\\n      //   //console.log(x);\\r\\n      // })\\r\\n      //this.tableData=ar;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    });\\r\\n\\r\\n\\r\\n  },\\r\\n  methods:{\\r\\n    ChangeAct(){\\r\\n      let act=(this.r.act=='true') ? true : false;\\r\\n      this.r.act=act;\\r\\n    },\\r\\n    onSaveModal(){\\r\\n      this.$validator.validateAll().then((result) => {\\r\\n        if (!result) {\\r\\n          this.toast(\\\"Không hợp lệ\\\");\\r\\n          return;\\r\\n        }\\r\\n        let r=JSON.parse(JSON.stringify(this.r));\\r\\n        if(r.id==0){\\r\\n          r.id=new Date().getTime();\\r\\n          this.tabulatorAdd(r);        \\r\\n          this.hideModal();\\r\\n        }else{\\r\\n          this.tabulatorUpdate(r);\\r\\n          this.hideModal();\\r\\n        }\\r\\n      })//end validator\\r\\n    },    \\r\\n    onAdd(){\\r\\n      this.r={\\r\\n        id:0,\\r\\n        name:\\\"thuc 101\\\",\\r\\n        ngay:new Date(),\\r\\n        act:true,\\r\\n        tp:\\\"QN\\\",\\r\\n        quyen:[] \\r\\n      };\\r\\n      this.showModal();\\r\\n    },\\r\\n    onDataLoaded(data){\\r\\n      let ar=[];\\r\\n      data.forEach((x,i)=>{\\r\\n        ar.push({x:x.id});\\r\\n      })\\r\\n      let curPage= this.tabulator.getPage();\\r\\n      this.msg={ar:ar,curPage:curPage};\\r\\n    },\\r\\n    add(r){\\r\\n      this.tabulator.addData([r], true);        \\r\\n    },\\r\\n    onTest(){\\r\\n      let ar=this.tabulatorGetData();\\r\\n      let r={\\r\\n        ar:ar,\\r\\n        getPageSize:this.tabulatorGetPageSize(),\\r\\n        getPage:this.tabulatorGetPage(),\\r\\n        total:this.tabulatorGetData().length,\\r\\n        lastPage:this.tabulatorGetLastPage( this.tabulatorGetData().length ),\\r\\n      }\\r\\n      alert(JSON.stringify(r));\\r\\n    },\\r\\n    onSave(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      if (\\r\\n        this.rowValidate(row) == true\\r\\n        // && row.getData().monid != 0\\r\\n        // && row.getData().banid != 0\\r\\n        //    && row.getData().solg > 0\\r\\n      ) {\\r\\n        let r1 = row.getData();\\r\\n        let r = JSON.parse(JSON.stringify(r1));\\r\\n        /*                                                                                  convert data date nếu cần */\\r\\n        // let Ngay = this.DateToYMD(r.Ngay);\\r\\n        // r.Ngay = Ngay;\\r\\n        /*                                                                                  convert data nếu cần */\\r\\n        /*\\r\\n        this.Save(r).then((res) => {\\r\\n          if (res.data.kq == \\\"ok\\\") {\\r\\n            this.toast(res.data.msg);\\r\\n            this.setPage(this.getPage());\\r\\n          } else {\\r\\n            this.toast(res.data.msg);\\r\\n          }\\r\\n        });\\r\\n        */\\r\\n      } else {\\r\\n        this.toast(\\\"Dữ liệu không hợp lệ!\\\");\\r\\n        return;\\r\\n      }\\r\\n    },\\r\\n    onCancel(e) {\\r\\n      e.preventDefault();\\r\\n      this.setPage(this.getPage());\\r\\n    },\\r\\n\\r\\n    onDel(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      let id = row.getIndex();\\r\\n      this.tabulator.deleteRow(id);\\r\\n      /*\\r\\n\\r\\n      this.Del(id).then((res) => {\\r\\n        //alert(JSON.stringify(res));\\r\\n        //{\\\"data\\\":{\\\"kq\\\":\\\"ok\\\",\\\"msg\\\":\\\"Delete bàn ok\\\"},\\\"status\\\":200,\\\"\\r\\n        if (res.data.kq == \\\"ok\\\") {\\r\\n          if (this.getData().length != 1) {\\r\\n            this.setPage(this.getPage());\\r\\n          } else {\\r\\n            if(this.getPage()!=1){\\r\\n              this.setPage(this.getPage() - 1);\\r\\n            }else{\\r\\n              this.setPage(this.getPage());\\r\\n            } \\r\\n          }\\r\\n        }\\r\\n        this.toast(res.data.msg);\\r\\n      });\\r\\n\\r\\n      */\\r\\n    },\\r\\n    onEdit(e){\\r\\n      let row = e.data;\\r\\n      let id = row.getIndex();\\r\\n      let r=this.tabulatorGetRow(id);\\r\\n      this.r=r;\\r\\n      this.showModal();\\r\\n    }, \\r\\n\\r\\n    tabulatorGetLastPage(count) {\\r\\n      let pageSize = this.tabulator.getPageSize();\\r\\n      let du = count % pageSize;\\r\\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n    },\\r\\n    tabulatorGetPageSize() {\\r\\n      return this.tabulator.getPageSize();\\r\\n    },\\r\\n    tabulatorGetPage() {\\r\\n      return this.tabulator.getPage();\\r\\n    },\\r\\n    tabulatorSetPage(_page) {\\r\\n      this.tabulator.setPage(_page);\\r\\n    },\\r\\n    tabulatorGetData(){\\r\\n      return this.tabulator.getData();\\r\\n    },\\r\\n    tabulatorAdd(r){\\r\\n      this.tabulator.addData([r], true);        \\r\\n    },\\r\\n    tabulatorDel(id){\\r\\n      this.tabulator.deleteRow(id);\\r\\n    },\\r\\n    tabulatorUpdate(r){\\r\\n      this.tabulator.updateData([r]);\\r\\n      //table.updateData([{id:1, name:\\\"bob\\\"}]); //update data\\r\\n    },\\r\\n    tabulatorGetRow(id){\\r\\n      let index=this.tabulator.getData().findIndex(x=>x.id==id);\\r\\n      let r=this.tabulator.getData()[index];\\r\\n      return r;\\r\\n    },\\r\\n    toast(msg, variant = null) {\\r\\n      this.$bvToast.toast(msg, {\\r\\n        title: `Information`,\\r\\n        variant: variant,\\r\\n        solid: true,\\r\\n      });\\r\\n    },\\r\\n    showModal() {\\r\\n        this.$refs['my-modal2'].show()\\r\\n    },\\r\\n    hideModal() {\\r\\n      this.$refs['my-modal2'].hide()\\r\\n    },\\r\\n  }\\r\\n}\\r\\n</script>\\r\\n<style lang=\\\"scss\\\">\\r\\n\\r\\n  $vs-red:red;\\r\\n  $vs-default:rgba(60, 60, 60, 0.26);\\r\\n  $vs-colors: (\\r\\n      lightest: $vs-default,//$vs-red, //rgba(60, 60, 60, 0.26),\\r\\n      light: rgba(60, 60, 60, 0.5),\\r\\n      dark: #333,\\r\\n      darkest: rgba(0, 0, 0, 0.15),\\r\\n  ) !default;\\r\\n\\r\\n  //  Global Component Variables\\r\\n  $vs-component-bg: none !default;\\r\\n  $vs-component-line-height: 1.8 !default;\\r\\n  $vs-component-placeholder-color: inherit !default;\\r\\n\\r\\n  //  Active State\\r\\n  $vs-state-active-bg: #5897fb !default;\\r\\n  $vs-state-active-color: #fff !default;\\r\\n\\r\\n  //  Deselect State\\r\\n  $vs-state-deselect-bg: #fb5858 !default;\\r\\n  $vs-state-deselect-color: #fff !default;\\r\\n\\r\\n  //  Disabled State\\r\\n  $vs-state-disabled-bg: rgb(248, 248, 248) !default;\\r\\n  $vs-state-disabled-color: map_get($vs-colors, 'light') !default;\\r\\n  $vs-state-disabled-controls-color: map_get($vs-colors, 'light') !default;\\r\\n  $vs-state-disabled-cursor: not-allowed !default;\\r\\n\\r\\n  //  Borders\\r\\n  $vs-border-width: 1px !default;\\r\\n  $vs-border-style: solid !default;\\r\\n  $vs-border-radius: 4px !default;\\r\\n  $vs-border-color: map_get($vs-colors, 'lightest') !default;\\r\\n\\r\\n  //  Component Controls: Clear, Open Indicator\\r\\n  $vs-controls-color: map_get($vs-colors, 'light') !default;\\r\\n  $vs-controls-size: 1 !default;\\r\\n  $vs-controls-deselect-text-shadow: 0 1px 0 #fff !default;\\r\\n\\r\\n  //  Selected\\r\\n  $vs-selected-bg: #f0f0f0 !default;\\r\\n  $vs-selected-border-color: $vs-border-color !default;\\r\\n  $vs-selected-border-style: $vs-border-style !default;\\r\\n  $vs-selected-border-width: $vs-border-width !default;\\r\\n\\r\\n  //  Dropdown\\r\\n  $vs-dropdown-z-index: 1000 !default;\\r\\n  $vs-dropdown-min-width: 160px !default;\\r\\n  $vs-dropdown-max-height: 350px !default;\\r\\n  $vs-dropdown-box-shadow: 0px 3px 6px 0px map_get($vs-colors, 'darkest') !default;\\r\\n  $vs-dropdown-bg: #fff !default;\\r\\n\\r\\n  @import \\\"vue-select/src/scss/vue-select.scss\\\";\\r\\n  .xyz{\\r\\n    border: 1px solid red;\\r\\n  }\\r\\n\\r\\n  .danger, \\r\\n  .danger .dropdown-toggle, \\r\\n  .danger .selected-tag {\\r\\n    background-color: aqua;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n\\r\\n  .ko-hop-le {\\r\\n    border-radius: 4px;\\r\\n    background-color: aqua;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*  \\r\\n  .style-chooser .vs__search::placeholder,\\r\\n  .style-chooser .vs__dropdown-toggle,\\r\\n  .style-chooser .vs__dropdown-menu {\\r\\n    background: #dfe5fb;\\r\\n    border: none;\\r\\n    color: #394066;\\r\\n    text-transform: lowercase;\\r\\n    font-variant: small-caps;\\r\\n  }\\r\\n\\r\\n  .style-chooser .vs__clear,\\r\\n  .style-chooser .vs__open-indicator {\\r\\n    fill: #394066;\\r\\n  }\\r\\n*/\\r\\n\\r\\n  $textSize: 8.5px; //14px !default; //table text size\\r\\n  @import \\\"~tabulator-tables/src/scss/tabulator.scss\\\";\\r\\n  .tabulator-col-title {\\r\\n    text-align: center;\\r\\n  }\\r\\n  .tabulator .tabulator-footer .tabulator-page.active {\\r\\n    background-color: greenyellow !important;\\r\\n    color: blue !important;\\r\\n  }\\r\\n  .b-calendar .b-calendar-grid-body .col[data-date] .btn {\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    font-size: 10px;\\r\\n    line-height: 1;\\r\\n    margin: 0px auto;\\r\\n    padding: 6px 0;\\r\\n  }\\r\\n  .custom-control.custom-checkbox {\\r\\n    position: relative;\\r\\n    z-index: 1;\\r\\n    display: block;\\r\\n    min-height: 0.9rem;\\r\\n    padding-left: 1.5rem;\\r\\n    padding-top: 0.3rem;\\r\\n  }\\r\\n  .col-4 input {\\r\\n    margin-bottom: 1px;\\r\\n  }\\r\\n  .form-group {\\r\\n    margin-bottom: 0.3rem;\\r\\n  }\\r\\n\\r\\n\\r\\n/*\\r\\n  .select2,\\r\\n  .select2-selection {\\r\\n    width: 100% !important;\\r\\n  }\\r\\n  .select2-container .select2-selection--single {\\r\\n    height: 27px;\\r\\n  }\\r\\n  .select2-container--default .select2-selection--single .select2-selection__rendered {\\r\\n    color: #444;\\r\\n    line-height: 26px;\\r\\n  }\\r\\n  .ko-hop-le-select2 {\\r\\n    border: 1px solid red;\\r\\n    border-radius: 10px;\\r\\n  }\\r\\n  .ko-hop-le {\\r\\n    border: 1px solid red;\\r\\n    border-radius: 10px;\\r\\n  }\\r\\n  .datepicker td,\\r\\n  th {\\r\\n    text-align: center;\\r\\n    padding: 0px 6px;\\r\\n    font-size: 10px;\\r\\n  }\\r\\n  .my-invalid .select2-container {\\r\\n    border: 1px solid red;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  .col-form-label {\\r\\n    padding-top: calc(0.375rem + 1px);\\r\\n    padding-bottom: calc(0.375rem + 1px);\\r\\n    margin-bottom: 0;\\r\\n    font-size: inherit;\\r\\n    line-height: 1.5;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  .vs__dropdown-toggle {\\r\\n    -webkit-appearance: none;\\r\\n    -moz-appearance: none;\\r\\n    appearance: none;\\r\\n    background: none;\\r\\n    border: var(--vs-border-width) var(--vs-border-style) var(--vs-border-color);\\r\\n    border-radius: var(--vs-border-radius);\\r\\n    display: flex;\\r\\n    padding: 0 0 0px;\\r\\n    white-space: normal;\\r\\n  }\\r\\n  .ko-hop-le-select2 {\\r\\n    border: 1px solid red;\\r\\n    border-radius: 10px;\\r\\n  }\\r\\n  .ko-hop-le{\\r\\n    border: 1px solid red;\\r\\n    background: orange;\\r\\n    border-radius: 10px;\\r\\n  }\\r\\n  */\\r\\n\\r\\n  </style>\\r\\n\\r\\n\";"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","on","onTest","onAdd","_s","msg","ref","$event","stopPropagation","preventDefault","onSaveModal","apply","arguments","directives","name","rawName","value","r","expression","domProps","target","composing","$set","class","errors","has","year","month","day","model","callback","$$v","ChangeAct","danger","option","id","tps","hideModal","staticRenderFns","Vue","classes","components","data","tabulator","tableData","ngay","act","tp","quyen","label","mounted","reactiveData","responsiveLayout","addRowPos","history","pagination","paginationSize","paginationCounter","paginationInitialPage","paginationSizeSelector","movableColumns","initialSort","column","dir","height","layout","footerElement","index","columns","title","formatter","headerHozAlign","hozAlign","headerSort","width","onRendered","$","text","$div","field","ar","$tabu","alert","$myAddBtn","console","getPageSize","getPage","total","lastPage","that","cell","watch","handler","deep","created","methods","onDataLoaded","x","curPage","add","onSave","e","onCancel","onDel","onEdit","tabulatorGetLastPage","tabulatorGetPageSize","tabulatorGetPage","tabulatorSetPage","tabulatorGetData","tabulatorAdd","tabulatorDel","tabulatorUpdate","tabulatorGetRow","toast","variant","solid","showModal","component"],"sourceRoot":""}