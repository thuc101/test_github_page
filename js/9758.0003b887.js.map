{"version":3,"file":"js/9758.0003b887.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/LopHoc2/LopHocSub.vue?27a9","webpack://vue_start_1/./src/views/LopHoc2/HocSinhTblSubCom.vue?d807","webpack://vue_start_1/src/views/LopHoc2/HocSinhTblSubCom.vue","webpack://vue_start_1/./src/views/LopHoc2/HocSinhTblSubCom.vue?5fae","webpack://vue_start_1/./src/views/LopHoc2/HocSinhTblSubCom.vue","webpack://vue_start_1/src/views/LopHoc2/LopHocSub.vue","webpack://vue_start_1/./src/views/LopHoc2/LopHocSub.vue?326a","webpack://vue_start_1/./src/views/LopHoc2/LopHocSub.vue?9809","webpack://vue_start_1/./src/views/LopHoc2/LopHocSub.vue","webpack://vue_start_1/./src/ListMixin.js","webpack://vue_start_1/./src/TumLum.js","webpack://vue_start_1/./src/fetchClient.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"MonHocToan\"},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./LopHocSub.vue').default}}),_c('div',[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('b-modal',{ref:\"my-modal\",attrs:{\"size\":\"lg\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":(_vm.sel2[_vm.pri] == 0) ? 'form Add' : 'form Edit'}},[_c('div',{staticClass:\"d-block\"},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',{},[_vm._l((_vm.sel2),function(v,k){return _c('div',{key:k,staticClass:\"form-group row\"},[((k == _vm.pri))?[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"readonly\":true,\"name\":k,\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e(),(k == 'TenLop')?[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Tên Lớp\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"name\":k,\"autocomplete\":\"off\",\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e()],2)}),_c('div',[_c('hoc-sinh-tbl-sub-com',{ref:\"sub\",attrs:{\"LopHocId\":_vm.sel2[this.pri]}})],1),_c('div',{staticClass:\"text-right\"},[_c('button',{staticClass:\"btn mr-1\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])],2)])])]),_c('b-table',{ref:\"mytable\",attrs:{\"thead-class\":\"myTable\",\"items\":_vm.myProvider,\"fields\":_vm.fields,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"filter-included-fields\":_vm.filterOn,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"stacked\":\"sm\",\"show-empty\":\"\",\"small\":\"\",\"fixed\":\"\",\"outlined\":\"\",\"bordered\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\n                                        var value = ref.value;\n                                        var item = ref.item;\n                                        var key = ref.field.key;\nreturn [[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:[_vm._v(\" \"+_vm._s(value)+\" \")]]:_vm._e()]]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnDel(row.item)}}},[_c('b-icon-trash')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}},{key:\"bottom-row\",fn:function(data){return [_c('td',{attrs:{\"colspan\":data.columns}},[_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Tìm kiếm\",\"label-for\":\"filter-input\",\"label-cols-sm\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-input-group',{attrs:{\"size\":\"sm\"}},[_c('b-form-input',{attrs:{\"id\":\"filter-input\",\"type\":\"search\",\"placeholder\":\"Type to Search\"},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(\"Clear\")])],1)],1)],1)],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Số dòng\",\"label-for\":\"per-page-select\",\"label-cols-sm\":\"6\",\"label-cols-md\":\"4\",\"label-cols-lg\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-form-select',{attrs:{\"id\":\"per-page-select\",\"options\":_vm.pageOptions,\"size\":\"sm\"},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1),_c('b-col',{staticClass:\"my-1 text-right\",attrs:{\"sm\":\"6\"}},[_c('span',[_vm._v(\"page : \"+_vm._s(_vm.currentPage)+\" / \"+_vm._s(_vm.last_page)+\" of \"+_vm._s(_vm.totalRows)+\" \")]),_c('b-button',{staticClass:\"mr-1 mb-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"size\":\"sm\"},on:{\"click\":_vm.OnAdd}},[_c('b',[_vm._v(\"Add\")])])],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-pagination',{ref:\"mypage\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"size\":\"sm\",\"align\":\"fill\",\"first-text\":\"First\",\"prev-text\":\"Prev\",\"next-text\":\"Next\",\"last-text\":\"Last\"},on:{\"change\":_vm.onChangePage,\"input\":_vm.onPagingInput},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1)]}},{key:\"row-details\",fn:function(row){return [_c('b-card',[_c('ul',_vm._l((row.item),function(value,key){return _c('li',{key:key},[_vm._v(_vm._s(key)+\": \"+_vm._s(value))])}),0)])]}}])})],1),_c('b-modal',{attrs:{\"id\":_vm.infoModal.id,\"title\":_vm.infoModal.title,\"ok-only\":\"\"},on:{\"hide\":_vm.resetInfoModal}},[_c('pre',[_vm._v(_vm._s(_vm.infoModal.content))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSave.apply(null, arguments)}}},[_c('b-table',{ref:\"mytable\",attrs:{\"items\":_vm.items,\"fields\":_vm.fields,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"filter-included-fields\":_vm.filterOn,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"stacked\":\"md\",\"striped\":\"\",\"show-empty\":\"\",\"small\":\"\",\"fixed\":\"\",\"outlined\":\"\",\"bordered\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\nvar value = ref.value;\nvar item = ref.item;\nvar key = ref.field.key;\nreturn [(_vm.sel[_vm.pri] != item[_vm.pri])?[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),(key == 'TenHocSinh')?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),(key == 'NamSinh')?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),(key == 'LopHocId')?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e()]:_vm._e()]:_vm._e(),((_vm.sel[_vm.pri] == item[_vm.pri] || item[_vm.pri] == 0))?[(key == _vm.pri)?[_c('span',[_vm._v(_vm._s(value))])]:_vm._e(),(key == 'TenHocSinh')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key), 'text-right': false },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e(),(key == 'NamSinh')?[_c('b-form-datepicker',{attrs:{\"date-format-options\":{ year: 'numeric', month: 'numeric', day: 'numeric' },\"locale\":\"vi\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e(),(key == 'LopHocId')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key), 'text-center': true },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e()]:_vm._e()]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"disabled\":_vm.isAdded() == true,\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"disabled\":_vm.isAdded() == true,\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnDel(row.item)}}},[_c('b-icon-trash')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}},{key:\"bottom-row\",fn:function(data){return [_c('td',{attrs:{\"colspan\":data.columns}},[_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Filter\",\"label-for\":\"filter-input\",\"label-cols-sm\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-input-group',{attrs:{\"size\":\"sm\"}},[_c('b-form-input',{attrs:{\"id\":\"filter-input\",\"type\":\"search\",\"placeholder\":\"Type to Search\"},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(\"Clear\")])],1)],1)],1)],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Per page\",\"label-for\":\"per-page-select\",\"label-cols-sm\":\"6\",\"label-cols-md\":\"4\",\"label-cols-lg\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-form-select',{attrs:{\"id\":\"per-page-select\",\"options\":_vm.pageOptions,\"size\":\"sm\"},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1),_c('b-col',{staticClass:\"my-1 text-right\",attrs:{\"sm\":\"6\"}},[_vm._v(\" page :\"+_vm._s(_vm.currentPage)+\" / \"+_vm._s(_vm.getLastPage(_vm.totalRows))+\" of \"+_vm._s(_vm.totalRows)+\" \"),_c('b-button',{attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"size\":\"sm\"},on:{\"click\":_vm.OnAdd}},[_c('b',[_vm._v(\"Add\")])])],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-pagination',{staticClass:\"my-0\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"align\":\"fill\",\"size\":\"sm\"},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1)]}}])})],1),_c('b-modal',{attrs:{\"id\":_vm.infoModal.id,\"title\":_vm.infoModal.title,\"ok-only\":\"\"},on:{\"hide\":_vm.resetInfoModal}},[_c('pre',[_vm._v(_vm._s(_vm.infoModal.content))])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!-- <div>{{ Lds() }}</div> -->\r\n        <!-- <div>{{ Mons }}</div> -->\r\n        <!-- <button :disabled=\"adding == true || isEditing() == true\" @click=\"onSave1\">Save</button> -->\r\n        <!-- {{ LopHocId }} -->\r\n        <form @submit.stop.prevent=\"onSave\">\r\n            <b-table ref=\"mytable\" :items=\"items\" :fields=\"fields\" :current-page=\"currentPage\" :per-page=\"perPage\"\r\n                :filter=\"filter\" :filter-included-fields=\"filterOn\" :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\"\r\n                :sort-direction=\"sortDirection\" stacked=\"md\" striped show-empty small fixed outlined bordered\r\n                @filtered=\"onFiltered\">\r\n                <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n                    <template v-if=\"sel[pri] != item[pri]\">\r\n                        <template v-if=\"item[pri] != 0\">\r\n                            <template v-if=\"key == pri\">\r\n                                {{ value }}\r\n                            </template>\r\n                            <template v-if=\"key == 'TenHocSinh'\">\r\n                                {{ value }}\r\n                            </template>\r\n                            <template v-if=\"key == 'NamSinh'\">\r\n                                {{ value }}\r\n                            </template>\r\n                            <template v-if=\"key == 'LopHocId'\">\r\n                                {{ value }}\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                    <template v-if=\"(sel[pri] == item[pri] || item[pri] == 0)\">\r\n                        <template v-if=\"key == pri\">\r\n                            <span>{{ value }}</span>\r\n                        </template>\r\n                        <template v-if=\"key == 'TenHocSinh'\">\r\n                            <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\"\r\n                                placeholder=\"\" :class=\"{ 'ko-hop-le': errors.has(key), 'text-right': false }\">\r\n                            </b-form-input>\r\n                        </template>\r\n                        <template v-if=\"key == 'NamSinh'\">\r\n                            <b-form-datepicker v-model=\"item[key]\"\r\n                                :date-format-options=\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\" locale=\"vi\"\r\n                                class=\"\">\r\n                            </b-form-datepicker>\r\n                        </template>\r\n                        <template v-if=\"key == 'LopHocId'\">\r\n                            <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\"\r\n                                placeholder=\"\" :class=\"{ 'ko-hop-le': errors.has(key), 'text-center': true }\">\r\n                            </b-form-input>\r\n                        </template>\r\n\r\n                    </template>\r\n                </template>\r\n\r\n                <template #cell(cmd)=\"row\">\r\n                    <template v-if=\"row.item[pri] == 0\">\r\n                        <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"onSave(row.item)\">\r\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                            <b-icon-file-x></b-icon-file-x>\r\n                        </b-button>\r\n                    </template>\r\n                    <template v-else>\r\n                        <b-button variant=\"outline\" :disabled=\"isAdded() == true\" class=\"mr-1\"\r\n                            v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnEdit(row.item)\">\r\n                            <b-icon-pencil-square></b-icon-pencil-square>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" :disabled=\"isAdded() == true\" class=\"mr-1\"\r\n                            v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnDel(row.item)\">\r\n                            <b-icon-trash></b-icon-trash>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                            @click=\"onSave(row.item)\">\r\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnCancel(row.item)\">\r\n                            <b-icon-file-x></b-icon-file-x>\r\n                        </b-button>\r\n                    </template>\r\n                </template>\r\n                <template #bottom-row=\"data\">\r\n                    <td :colspan=\"data.columns\">\r\n                        <b-row>\r\n                            <b-col sm=\"6\" class=\"my-1\">\r\n                                <b-form-group label=\"Filter\" label-for=\"filter-input\" label-cols-sm=\"3\"\r\n                                    label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                                    <b-input-group size=\"sm\">\r\n                                        <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\r\n                                            placeholder=\"Type to Search\"></b-form-input>\r\n                                        <b-input-group-append>\r\n                                            <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                                        </b-input-group-append>\r\n                                    </b-input-group>\r\n                                </b-form-group>\r\n                            </b-col>\r\n                            <b-col sm=\"6\" class=\"my-1\">\r\n                                <b-form-group label=\"Per page\" label-for=\"per-page-select\" label-cols-sm=\"6\"\r\n                                    label-cols-md=\"4\" label-cols-lg=\"3\" label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                                    <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\"\r\n                                        size=\"sm\"></b-form-select>\r\n                                </b-form-group>\r\n                            </b-col>\r\n                            <b-col sm=\"6\" class=\"my-1 text-right\">\r\n                                page :{{ currentPage }} / {{ getLastPage(totalRows) }} of {{ totalRows }}\r\n                                <b-button :disabled=\"adding == true || isEditing() == true\" @click=\"OnAdd\"\r\n                                    size=\"sm\"><b>Add</b></b-button>\r\n                            </b-col>\r\n                            <b-col sm=\"6\" class=\"my-1\">\r\n                                <b-pagination :disabled=\"adding == true || isEditing() == true\" v-model=\"currentPage\"\r\n                                    :total-rows=\"totalRows\" :per-page=\"perPage\" align=\"fill\" size=\"sm\"\r\n                                    class=\"my-0\"></b-pagination>\r\n                            </b-col>\r\n                        </b-row>\r\n                    </td>\r\n                </template>\r\n            </b-table>\r\n        </form>\r\n        <!-- Info modal -->\r\n        <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n            <pre>{{ infoModal.content }}</pre>\r\n        </b-modal>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\n\r\nimport moment from \"moment\";\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\nimport ListMixin from \"@/ListMixin\"\r\n\r\nimport fetchClient from '@/fetchClient';\r\nimport TumLum from '@/TumLum';\r\n\r\nexport default {\r\n    props: [\"LopHocId\"],\r\n    mixins: [ListMixin],\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [\r\n                {\r\n                    key: 'Id',\r\n                    formatter: (value, key, item) => {\r\n                        let text = value.toString();\r\n                        return (text.length < 4) ? text : text.substring(0, 4) + \"...\";\r\n                    },\r\n                    sortable: true,\r\n                    thClass: 'text-center',\r\n                    tdClass: 'text-center align-middle',\r\n                    //tdClass: 'align-middle'\r\n                    thStyle: { width: \"10%\" },\r\n                },\r\n                //{ key: 'TenHocSinh', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"80%\" }, },\r\n                { key: 'TenHocSinh', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"45%\" }, },\r\n                {\r\n                    key: 'NamSinh',\r\n                    formatter: (value, key, item) => {\r\n                        return moment(value).format(\"DD/MM/YYYY\");\r\n                    },\r\n                    sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \"20%\" },\r\n                },\r\n                { key: 'LopHocId', sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \"10%\" }, },\r\n\r\n                {\r\n                    key: 'cmd',\r\n                    class: 'text-center',\r\n                    thClass: 'text-center',\r\n                    tdClass: 'align-middle',\r\n                    thStyle: { width: \"15%\" }\r\n                }\r\n            ],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 3,\r\n            pageOptions: [3, 5, 10, 15, { value: 100, text: \"Show a lot\" }],\r\n            sortBy: '',\r\n            sortDesc: false,\r\n            sortDirection: 'asc',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: 'info-modal',\r\n                title: '',\r\n                content: ''\r\n            },\r\n\r\n            sel: {},\r\n            pri: 'Id',\r\n            adding: false,\r\n            lastPage: 0,\r\n\r\n            ds: [],\r\n            Mons: [],\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        sortOptions() {\r\n            return this.fields\r\n                .filter(f => f.sortable)\r\n                .map(f => {\r\n                    return { text: f.label, value: f.key }\r\n                })\r\n        }\r\n    },\r\n    mounted() {\r\n        //this.GetAll();\r\n        this.GetListById(this.LopHocId);\r\n    },\r\n    methods: {\r\n        UpdateRow(item, DonGia, SoLg, Tien) {\r\n            item.SoLg = 0;\r\n            item.Tien = 0;\r\n        },\r\n        onSoLgChange(item) {\r\n            let Tien = item.SoLg * item.DonGia;\r\n            item.Tien = Tien;\r\n        },\r\n        onMonChange(item) {\r\n            let MonId = item.MonId;\r\n            let index = this.Mons.findIndex(x => x.id == MonId);\r\n            if (index >= 0) {\r\n                let price = this.Mons[index].price;\r\n                let SoLg = item.SoLg;\r\n                let Tien = SoLg * price;\r\n                item.DonGia = price;\r\n                item.Tien = Tien;\r\n            }\r\n        },\r\n        onSave1() {\r\n            let list = this.Lds();\r\n            this.UpdateList(list);\r\n        },\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\r\n\r\n                    r[this.pri] = this.createId();\r\n                    this.Add(r);\r\n\r\n                    this.$set(this.items, index, r);\r\n                    this.adding = false;\r\n                    this.$refs.mytable.refresh();\r\n                } else {\r\n\r\n                    this.Update(r);\r\n\r\n                    let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\r\n                    this.$set(this.items, index, r);\r\n                    this.sel = {};\r\n                }\r\n            });\r\n        },\r\n        OnDel(item) {\r\n            this.delRow(item);\r\n\r\n            this.Del(item);\r\n\r\n        },\r\n        delRow(item) {\r\n            let id = item[this.pri];\r\n            let index = this.items.findIndex(x => x[this.pri] == id);\r\n            this.items.splice(index, 1);\r\n            this.totalRows = this.items.length;\r\n            this.lastPage = this.getLastPage(this.totalRows);\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x[this.pri] == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        OnEdit(item) {\r\n            if (JSON.stringify(this.sel) != \"{}\") return;\r\n            this.sel = JSON.parse(JSON.stringify(item));\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] == 0) {\r\n                let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\r\n                this.items.splice(index, 1);\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            } else {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            }\r\n        },\r\n        OnAdd() {\r\n            //alert(`Add thieu BanId`)\r\n            //return;\r\n            let r = {\r\n                Id: 0,\r\n                TenHocSinh: 'Thức',\r\n                NamSinh: new Date(),\r\n                LopHocId: 0\r\n            }\r\n            this.items.unshift(r);\r\n            this.adding = true;\r\n            this.currentPage = 1;\r\n            this.totalRows = this.items.length;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != \"{}\"\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = ''\r\n            this.infoModal.content = ''\r\n        },\r\n        onFiltered(filteredItems) {\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async GetAll() {\r\n            return await fetchClient.get(`/api/HocSinh4/GetAll`)\r\n                .then(res => {\r\n                    //alert(JSON.stringify(res));\r\n                    /*{\"data\":{\"kq\":\"ok\",\"list\":[{\r\n                        \"Id\":1,\r\n                        \"TenHocSinh\":\"Nguyen van A\",\r\n                        \"NamSinh\":\"2006-09-01T00:00:00\",\r\n                        \"LopHocId\":1},                    \r\n                    */\r\n                    let items = res.data.list;\r\n\r\n                    this.SetPri(this.pri);\r\n                    this.SetDs(items);\r\n\r\n                    this.items = items;\r\n                    this.totalRows = this.items.length;\r\n                    this.lastPage = this.getLastPage(this.totalRows);\r\n\r\n                    this.LdsMon();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async GetListById(LopHocId) {\r\n            return await fetchClient.get(`/api/HocSinh4/GetListById?LopHocId=${LopHocId}`).then(res => {\r\n                //alert(JSON.stringify(res));\r\n                let items = res.data;\r\n\r\n                this.SetPri(this.pri);\r\n                this.SetDs(items);\r\n\r\n                this.items = items;\r\n                this.totalRows = this.items.length;\r\n                this.lastPage = this.getLastPage(this.totalRows);\r\n            })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async LdsMon() {\r\n            return await fetchClient(`/api/Mon2/ListMonComboPrice`).then(res => {\r\n                this.Mons = res.data.list;\r\n            }).catch(err => {\r\n                TumLum.XuLyErr(err);\r\n            })\r\n        },\r\n        async UpdateList(list) {\r\n            return await fetchClient.post(`/api/BanChiTiet2/UpdateBanChiTietNote`, list)\r\n                .then(res => {\r\n                    //alert(JSON.stringify(res));\r\n                    this.GetAll();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HocSinhTblSubCom.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HocSinhTblSubCom.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HocSinhTblSubCom.vue?vue&type=template&id=55a0858a&\"\nimport script from \"./HocSinhTblSubCom.vue?vue&type=script&lang=js&\"\nexport * from \"./HocSinhTblSubCom.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"MonHocToan\">\r\n        <raw-loader :mytxt=\"require('!raw-loader!./LopHocSub.vue').default\"></raw-loader>\r\n\r\n        <div>\r\n            <!-- User Interface controls -->\r\n            <!-- Main table element -->\r\n            <form @submit.stop.prevent=\"onSaveModal\">\r\n                <b-modal ref=\"my-modal\" size=\"lg\" :no-close-on-backdrop=\"true\" hide-footer\r\n                    :title=\"(sel2[pri] == 0) ? 'form Add' : 'form Edit'\">\r\n                    <div class=\"d-block\">\r\n                        <form @submit.stop.prevent=\"onSaveModal\">\r\n                            <div class=\"\">\r\n                                <div class=\"form-group row\" v-for=\"(v, k) in sel2\" :key=\"k\">\r\n\r\n                                    <template v-if=\"(k == pri)\">\r\n                                        <label class=\"col-sm-4 col-form-label\">Id</label>\r\n                                        <div class=\"col-sm-8\">\r\n                                            <input :readonly=\"true\" :name=\"k\" v-model=\"sel2[k]\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'TenLop'\">\r\n                                        <label class=\"col-sm-4 col-form-label\">Tên Lớp</label>\r\n                                        <div class=\"col-sm-8\">\r\n                                            <input :name=\"k\" v-model=\"sel2[k]\" autocomplete=\"off\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" v-validate=\"'required'\" />\r\n                                        </div>\r\n                                    </template>\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <hoc-sinh-tbl-sub-com ref=\"sub\" :LopHocId=\"sel2[this.pri]\"></hoc-sinh-tbl-sub-com>\r\n                                </div>\r\n                                <div class=\"text-right\">\r\n                                    <button type=\"submit\" class=\"btn mr-1\">Save</button>\r\n                                    <button type=\"button\" class=\"btn\" @click=\"hideModal()\">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </b-modal>\r\n                <b-table thead-class=\"myTable\" ref=\"mytable\" :items=\"myProvider\" :fields=\"fields\"\r\n                    :current-page=\"currentPage\" :per-page=\"perPage\" :filter=\"filter\" :filter-included-fields=\"filterOn\"\r\n                    :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" :sort-direction=\"sortDirection\" stacked=\"sm\"\r\n                    show-empty small fixed outlined bordered @filtered=\"onFiltered\">\r\n                    <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n                        <template>\r\n                            <template v-if=\"item[pri] != 0\">\r\n                                <template v-if=\"key == pri\">\r\n                                    {{ value }}\r\n                                </template>\r\n                                <template v-else>\r\n                                    {{ value }}\r\n                                </template>\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                    <template #cell(cmd)=\"row\">\r\n                        <template v-if=\"row.item[pri] == 0\">\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                        <template v-else>\r\n                            <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnEdit(row.item)\">\r\n                                <b-icon-pencil-square></b-icon-pencil-square>\r\n                            </b-button>\r\n                            <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnDel(row.item)\">\r\n                                <b-icon-trash></b-icon-trash>\r\n                            </b-button>\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                    </template>\r\n                    <template #bottom-row=\"data\">\r\n                        <td :colspan=\"data.columns\">\r\n                            <b-row>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Tìm kiếm\" label-for=\"filter-input\" label-cols-sm=\"3\"\r\n                                        label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                                        <b-input-group size=\"sm\">\r\n                                            <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\r\n                                                placeholder=\"Type to Search\">\r\n                                            </b-form-input>\r\n\r\n                                            <b-input-group-append>\r\n                                                <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                                            </b-input-group-append>\r\n                                        </b-input-group>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Số dòng\" label-for=\"per-page-select\" label-cols-sm=\"6\"\r\n                                        label-cols-md=\"4\" label-cols-lg=\"3\" label-align-sm=\"right\" label-size=\"sm\"\r\n                                        class=\"mb-0\">\r\n                                        <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\"\r\n                                            size=\"sm\">\r\n                                        </b-form-select>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n\r\n                                <b-col sm=\"6\" class=\"my-1 text-right\">\r\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\r\n                                    <b-button :disabled=\"adding == true || isEditing() == true\" class=\"mr-1 mb-1\" size=\"sm\"\r\n                                        @click=\"OnAdd\">\r\n                                        <b>Add</b></b-button>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-pagination :disabled=\"adding == true || isEditing() == true\" ref=\"mypage\"\r\n                                        v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" size=\"sm\"\r\n                                        align=\"fill\" @change=\"onChangePage\" @input=\"onPagingInput\" first-text=\"First\"\r\n                                        prev-text=\"Prev\" next-text=\"Next\" last-text=\"Last\">\r\n                                    </b-pagination>\r\n                                </b-col>\r\n                            </b-row>\r\n\r\n                        </td>\r\n                    </template>\r\n\r\n                    <template #row-details=\"row\">\r\n                        <b-card>\r\n                            <ul>\r\n                                <li v-for=\"(value, key) in row.item\" :key=\"key\">{{ key }}: {{ value }}</li>\r\n                            </ul>\r\n                        </b-card>\r\n                    </template>\r\n                </b-table>\r\n\r\n            </form>\r\n            <!-- Info modal -->\r\n            <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n                <pre>{{ infoModal.content }}</pre>\r\n            </b-modal>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\n\r\nimport VueTypeaheadBootstrap from \"vue-typeahead-bootstrap\";\r\nimport { debounce } from \"lodash\";\r\n\r\nimport fetchClient from \"@/fetchClient\";\r\nimport TumLum from \"@/TumLum\";\r\n\r\nimport moment from \"moment\"\r\n\r\nimport HocSinhTblSubCom from '@/views/LopHoc2/HocSinhTblSubCom.vue';\r\n\r\nexport default {\r\n    components: {\r\n        VueTypeaheadBootstrap,\r\n        HocSinhTblSubCom\r\n    },\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [\r\n                {\r\n                    key: 'Id',\r\n                    formatter: (value, key, item) => {\r\n                        return value;\r\n                    },\r\n                    sortable: true,\r\n                    thClass: 'text-center',\r\n                    tdClass: 'text-center align-middle',\r\n                    thStyle: { width: \"8%\" },\r\n                },\r\n                { key: 'TenLop', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"80%\" }, },\r\n                {\r\n                    key: 'cmd',\r\n                    class: 'text-center',\r\n                    thClass: 'text-center',\r\n                    tdClass: 'align-middle',\r\n                    thStyle: { width: \"12%\" }\r\n                }\r\n            ],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            pageOptions: [5, 10, 15, { value: 100, text: \"Show a lot\" }],\r\n            sortBy: '',\r\n            sortDesc: false,\r\n            sortDirection: 'asc',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: 'info-modal',\r\n                title: '',\r\n                content: ''\r\n            },\r\n            sel: {},\r\n            sel2: {},\r\n            pri: \"Id\",\r\n            last_page: 0,\r\n            adding: false,\r\n            ListAuto: [],\r\n\r\n            title: \"hello title\"\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        last_page: function (newValue, oldValue) {\r\n        },\r\n        currentPage: function (val) {\r\n        },\r\n        totalRows: function (newValue, oldValue) {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n\r\n        OnSearch: debounce(function (query) {\r\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(JSON.stringify(data))\r\n                    this.ListAuto = data.items;\r\n                });\r\n        }, 500),\r\n        onPagingInput() {\r\n        },\r\n        myProvider(ctx) {\r\n            let currentPage = ctx.currentPage;\r\n            let perPage = ctx.perPage;\r\n            let sortBy = ctx.sortBy;\r\n            let sortDesc = ctx.sortDesc;\r\n            let vm = this;\r\n            let url = `/api/LopHoc4/GetPage2`;\r\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\r\n            if (ctx.filter) {\r\n                let filter = ctx.filter;\r\n                url = `${url}&filter=${filter}`;\r\n            }\r\n            return fetchClient.get(url)\r\n                .then(res => {\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    vm.items = res.data.data;\r\n                    if (this.adding == true) {\r\n                        let r = {};\r\n                        r[this.pri] = 0;\r\n                        r[\"TenKhach\"] = \"xxx\";\r\n                        r[\"Ngay\"] = new Date();\r\n                        res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n\r\n\r\n\r\n        },\r\n        mapData(data) {\r\n            let kq = [];\r\n            data.forEach(obj => {\r\n                let x = {};\r\n                Object.keys(obj).forEach(key => {\r\n                    let k = key;\r\n                    x[k] = obj[key];\r\n                });\r\n                kq.push(x);\r\n            })\r\n            return kq;\r\n        },\r\n        onChangePage() {\r\n            this.sel = {};\r\n            this.adding = false;\r\n        },\r\n        OnAdd() {\r\n            this.sel2 = {\r\n                Id: 0,\r\n                TenLop: \"sfsfsf\"\r\n            }\r\n            this.showModal();\r\n        },\r\n        OnEdit(item) {\r\n            if (JSON.stringify(this.sel) != \"{}\" || this.adding == true) {\r\n                return;\r\n            }\r\n            /*\r\n            this.sel2 = JSON.parse(JSON.stringify(item));\r\n            this.showModal();\r\n            */\r\n            this.getById(item[this.pri]);\r\n        },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.sel2));\r\n                let List = this.$refs.sub.Lds();\r\n                let model = {\r\n                    Id: r.Id,\r\n                    TenLop: r.TenLop,\r\n                    Sub: List\r\n                }\r\n                if (r[this.pri] == 0) {\r\n                    //this.Add(r);\r\n                    this.AddSub(model);\r\n                } else {\r\n                    //this.Update(r);\r\n                    this.UpdateSub(model);\r\n                }\r\n            });\r\n        },\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r).then(res => {\r\n                        if (res.data.kq == 'ok') {\r\n                            this.toast(`${res.data.msg}`);\r\n                            this.adding = false;\r\n                            this.$refs.mytable.refresh();\r\n                        }\r\n                    })\r\n                } else {\r\n                    //tien hanh sua\r\n                    this.Update(r).then(res => {\r\n                        this.toast(`${res.data.msg}`);\r\n                        this.adding = false;\r\n                        this.sel = {};\r\n                        this.$refs.mytable.refresh();\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] != 0) {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            } else {\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            }\r\n        },\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]).then(res => {\r\n                if (res.data.kq == 'nook') {\r\n                    this.toast(`${res.data.msg}`);\r\n                    return;\r\n                }\r\n                this.toast(`${res.data.msg}`);\r\n                let lastPage = this.getLastPage(this.totalRows - 1);\r\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\r\n                this.$refs.mytable.refresh();\r\n            })\r\n        },\r\n        delRow(item) {\r\n            let id = item.id;\r\n            let index = this.items.findIndex(x => x.id == id);\r\n            this.items.splice(index, 1);\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != \"{}\"\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x.id == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        gotoPage(page) {\r\n            this.currentPage = page;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async Add(r) {\r\n            return await fetchClient.post(`/api/LopHoc4/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.hideModal();\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async AddSub(r) {\r\n            return await fetchClient.post(`/api/LopHoc4/AddSub`, r)\r\n                .then(res => {\r\n                    this.toast(`${JSON.stringify(res.data.msg)}`);\r\n                    this.hideModal();\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`/api/LopHoc4/Update`, r)\r\n                .then(res => {\r\n                    this.hideModal();\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async UpdateSub(r) {\r\n            return await fetchClient.post(`/api/LopHoc4/UpdateSub`, r)\r\n                .then(res => {\r\n                    this.hideModal();\r\n                    this.toast(`${JSON.stringify(res.data.msg)}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Del(id) {\r\n            return await fetchClient.get(`/api/LopHoc4/Delete?id=${id}`)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await fetchClient.get(`/api/LopHoc4/GetById?id=${id}`)\r\n                .then(res => {\r\n                    this.sel2 = res.data;\r\n                    this.showModal();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = ''\r\n            this.infoModal.content = ''\r\n        },\r\n        onFiltered(filteredItems) {\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        },\r\n        showModal() {\r\n            this.$refs[\"my-modal\"].show();\r\n        },\r\n        hideModal() {\r\n            this.$refs[\"my-modal\"].hide();\r\n        },\r\n    }\r\n}\r\n</script>\r\n  \r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LopHocSub.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LopHocSub.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LopHocSub.vue?vue&type=template&id=1f02fad3&\"\nimport script from \"./LopHocSub.vue?vue&type=script&lang=js&\"\nexport * from \"./LopHocSub.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div class=\\\"MonHocToan\\\">\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./LopHocSub.vue').default\\\"></raw-loader>\\r\\n\\r\\n        <div>\\r\\n            <!-- User Interface controls -->\\r\\n            <!-- Main table element -->\\r\\n            <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n                <b-modal ref=\\\"my-modal\\\" size=\\\"lg\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer\\r\\n                    :title=\\\"(sel2[pri] == 0) ? 'form Add' : 'form Edit'\\\">\\r\\n                    <div class=\\\"d-block\\\">\\r\\n                        <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n                            <div class=\\\"\\\">\\r\\n                                <div class=\\\"form-group row\\\" v-for=\\\"(v, k) in sel2\\\" :key=\\\"k\\\">\\r\\n\\r\\n                                    <template v-if=\\\"(k == pri)\\\">\\r\\n                                        <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n                                        <div class=\\\"col-sm-8\\\">\\r\\n                                            <input :readonly=\\\"true\\\" :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'TenLop'\\\">\\r\\n                                        <label class=\\\"col-sm-4 col-form-label\\\">Tên Lớp</label>\\r\\n                                        <div class=\\\"col-sm-8\\\">\\r\\n                                            <input :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" autocomplete=\\\"off\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" v-validate=\\\"'required'\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <hoc-sinh-tbl-sub-com ref=\\\"sub\\\" :LopHocId=\\\"sel2[this.pri]\\\"></hoc-sinh-tbl-sub-com>\\r\\n                                </div>\\r\\n                                <div class=\\\"text-right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn mr-1\\\">Save</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </b-modal>\\r\\n                <b-table thead-class=\\\"myTable\\\" ref=\\\"mytable\\\" :items=\\\"myProvider\\\" :fields=\\\"fields\\\"\\r\\n                    :current-page=\\\"currentPage\\\" :per-page=\\\"perPage\\\" :filter=\\\"filter\\\" :filter-included-fields=\\\"filterOn\\\"\\r\\n                    :sort-by.sync=\\\"sortBy\\\" :sort-desc.sync=\\\"sortDesc\\\" :sort-direction=\\\"sortDirection\\\" stacked=\\\"sm\\\"\\r\\n                    show-empty small fixed outlined bordered @filtered=\\\"onFiltered\\\">\\r\\n                    <template v-slot:cell()=\\\"{ value, item, field: { key } }\\\">\\r\\n                        <template>\\r\\n                            <template v-if=\\\"item[pri] != 0\\\">\\r\\n                                <template v-if=\\\"key == pri\\\">\\r\\n                                    {{ value }}\\r\\n                                </template>\\r\\n                                <template v-else>\\r\\n                                    {{ value }}\\r\\n                                </template>\\r\\n                            </template>\\r\\n                        </template>\\r\\n                    </template>\\r\\n                    <template #cell(cmd)=\\\"row\\\">\\r\\n                        <template v-if=\\\"row.item[pri] == 0\\\">\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                        <template v-else>\\r\\n                            <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnEdit(row.item)\\\">\\r\\n                                <b-icon-pencil-square></b-icon-pencil-square>\\r\\n                            </b-button>\\r\\n                            <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnDel(row.item)\\\">\\r\\n                                <b-icon-trash></b-icon-trash>\\r\\n                            </b-button>\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                    </template>\\r\\n                    <template #bottom-row=\\\"data\\\">\\r\\n                        <td :colspan=\\\"data.columns\\\">\\r\\n                            <b-row>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Tìm kiếm\\\" label-for=\\\"filter-input\\\" label-cols-sm=\\\"3\\\"\\r\\n                                        label-align-sm=\\\"right\\\" label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                                        <b-input-group size=\\\"sm\\\">\\r\\n                                            <b-form-input id=\\\"filter-input\\\" v-model=\\\"filter\\\" type=\\\"search\\\"\\r\\n                                                placeholder=\\\"Type to Search\\\">\\r\\n                                            </b-form-input>\\r\\n\\r\\n                                            <b-input-group-append>\\r\\n                                                <b-button :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\">Clear</b-button>\\r\\n                                            </b-input-group-append>\\r\\n                                        </b-input-group>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Số dòng\\\" label-for=\\\"per-page-select\\\" label-cols-sm=\\\"6\\\"\\r\\n                                        label-cols-md=\\\"4\\\" label-cols-lg=\\\"3\\\" label-align-sm=\\\"right\\\" label-size=\\\"sm\\\"\\r\\n                                        class=\\\"mb-0\\\">\\r\\n                                        <b-form-select id=\\\"per-page-select\\\" v-model=\\\"perPage\\\" :options=\\\"pageOptions\\\"\\r\\n                                            size=\\\"sm\\\">\\r\\n                                        </b-form-select>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1 text-right\\\">\\r\\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\\r\\n                                    <b-button :disabled=\\\"adding == true || isEditing() == true\\\" class=\\\"mr-1 mb-1\\\" size=\\\"sm\\\"\\r\\n                                        @click=\\\"OnAdd\\\">\\r\\n                                        <b>Add</b></b-button>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-pagination :disabled=\\\"adding == true || isEditing() == true\\\" ref=\\\"mypage\\\"\\r\\n                                        v-model=\\\"currentPage\\\" :total-rows=\\\"totalRows\\\" :per-page=\\\"perPage\\\" size=\\\"sm\\\"\\r\\n                                        align=\\\"fill\\\" @change=\\\"onChangePage\\\" @input=\\\"onPagingInput\\\" first-text=\\\"First\\\"\\r\\n                                        prev-text=\\\"Prev\\\" next-text=\\\"Next\\\" last-text=\\\"Last\\\">\\r\\n                                    </b-pagination>\\r\\n                                </b-col>\\r\\n                            </b-row>\\r\\n\\r\\n                        </td>\\r\\n                    </template>\\r\\n\\r\\n                    <template #row-details=\\\"row\\\">\\r\\n                        <b-card>\\r\\n                            <ul>\\r\\n                                <li v-for=\\\"(value, key) in row.item\\\" :key=\\\"key\\\">{{ key }}: {{ value }}</li>\\r\\n                            </ul>\\r\\n                        </b-card>\\r\\n                    </template>\\r\\n                </b-table>\\r\\n\\r\\n            </form>\\r\\n            <!-- Info modal -->\\r\\n            <b-modal :id=\\\"infoModal.id\\\" :title=\\\"infoModal.title\\\" ok-only @hide=\\\"resetInfoModal\\\">\\r\\n                <pre>{{ infoModal.content }}</pre>\\r\\n            </b-modal>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n});\\r\\n\\r\\nimport VueTypeaheadBootstrap from \\\"vue-typeahead-bootstrap\\\";\\r\\nimport { debounce } from \\\"lodash\\\";\\r\\n\\r\\nimport fetchClient from \\\"@/fetchClient\\\";\\r\\nimport TumLum from \\\"@/TumLum\\\";\\r\\n\\r\\nimport moment from \\\"moment\\\"\\r\\n\\r\\nimport HocSinhTblSubCom from '@/views/LopHoc2/HocSinhTblSubCom.vue';\\r\\n\\r\\nexport default {\\r\\n    components: {\\r\\n        VueTypeaheadBootstrap,\\r\\n        HocSinhTblSubCom\\r\\n    },\\r\\n    data() {\\r\\n        return {\\r\\n            items: [\\r\\n            ],\\r\\n            fields: [\\r\\n                {\\r\\n                    key: 'Id',\\r\\n                    formatter: (value, key, item) => {\\r\\n                        return value;\\r\\n                    },\\r\\n                    sortable: true,\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'text-center align-middle',\\r\\n                    thStyle: { width: \\\"8%\\\" },\\r\\n                },\\r\\n                { key: 'TenLop', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"80%\\\" }, },\\r\\n                {\\r\\n                    key: 'cmd',\\r\\n                    class: 'text-center',\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'align-middle',\\r\\n                    thStyle: { width: \\\"12%\\\" }\\r\\n                }\\r\\n            ],\\r\\n            totalRows: 1,\\r\\n            currentPage: 1,\\r\\n            perPage: 5,\\r\\n            pageOptions: [5, 10, 15, { value: 100, text: \\\"Show a lot\\\" }],\\r\\n            sortBy: '',\\r\\n            sortDesc: false,\\r\\n            sortDirection: 'asc',\\r\\n            filter: null,\\r\\n            filterOn: [],\\r\\n            infoModal: {\\r\\n                id: 'info-modal',\\r\\n                title: '',\\r\\n                content: ''\\r\\n            },\\r\\n            sel: {},\\r\\n            sel2: {},\\r\\n            pri: \\\"Id\\\",\\r\\n            last_page: 0,\\r\\n            adding: false,\\r\\n            ListAuto: [],\\r\\n\\r\\n            title: \\\"hello title\\\"\\r\\n        }\\r\\n    },\\r\\n\\r\\n    watch: {\\r\\n        last_page: function (newValue, oldValue) {\\r\\n        },\\r\\n        currentPage: function (val) {\\r\\n        },\\r\\n        totalRows: function (newValue, oldValue) {\\r\\n        }\\r\\n    },\\r\\n    computed: {\\r\\n    },\\r\\n    mounted() {\\r\\n    },\\r\\n    methods: {\\r\\n\\r\\n        OnSearch: debounce(function (query) {\\r\\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\\r\\n                .then((response) => {\\r\\n                    return response.json();\\r\\n                })\\r\\n                .then((data) => {\\r\\n                    console.log(JSON.stringify(data))\\r\\n                    this.ListAuto = data.items;\\r\\n                });\\r\\n        }, 500),\\r\\n        onPagingInput() {\\r\\n        },\\r\\n        myProvider(ctx) {\\r\\n            let currentPage = ctx.currentPage;\\r\\n            let perPage = ctx.perPage;\\r\\n            let sortBy = ctx.sortBy;\\r\\n            let sortDesc = ctx.sortDesc;\\r\\n            let vm = this;\\r\\n            let url = `/api/LopHoc4/GetPage2`;\\r\\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\\r\\n            if (ctx.filter) {\\r\\n                let filter = ctx.filter;\\r\\n                url = `${url}&filter=${filter}`;\\r\\n            }\\r\\n            return fetchClient.get(url)\\r\\n                .then(res => {\\r\\n                    vm.last_page = res.data.last_page;\\r\\n                    vm.totalRows = res.data.rowCount;\\r\\n                    vm.items = res.data.data;\\r\\n                    if (this.adding == true) {\\r\\n                        let r = {};\\r\\n                        r[this.pri] = 0;\\r\\n                        r[\\\"TenKhach\\\"] = \\\"xxx\\\";\\r\\n                        r[\\\"Ngay\\\"] = new Date();\\r\\n                        res.data.data.unshift(r);\\r\\n                    }\\r\\n                    return vm.mapData(res.data.data); //res.data.data;\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n\\r\\n\\r\\n\\r\\n        },\\r\\n        mapData(data) {\\r\\n            let kq = [];\\r\\n            data.forEach(obj => {\\r\\n                let x = {};\\r\\n                Object.keys(obj).forEach(key => {\\r\\n                    let k = key;\\r\\n                    x[k] = obj[key];\\r\\n                });\\r\\n                kq.push(x);\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        onChangePage() {\\r\\n            this.sel = {};\\r\\n            this.adding = false;\\r\\n        },\\r\\n        OnAdd() {\\r\\n            this.sel2 = {\\r\\n                Id: 0,\\r\\n                TenLop: \\\"sfsfsf\\\"\\r\\n            }\\r\\n            this.showModal();\\r\\n        },\\r\\n        OnEdit(item) {\\r\\n            if (JSON.stringify(this.sel) != \\\"{}\\\" || this.adding == true) {\\r\\n                return;\\r\\n            }\\r\\n            /*\\r\\n            this.sel2 = JSON.parse(JSON.stringify(item));\\r\\n            this.showModal();\\r\\n            */\\r\\n            this.getById(item[this.pri]);\\r\\n        },\\r\\n        onSaveModal() {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(this.sel2));\\r\\n                let List = this.$refs.sub.Lds();\\r\\n                let model = {\\r\\n                    Id: r.Id,\\r\\n                    TenLop: r.TenLop,\\r\\n                    Sub: List\\r\\n                }\\r\\n                if (r[this.pri] == 0) {\\r\\n                    //this.Add(r);\\r\\n                    this.AddSub(model);\\r\\n                } else {\\r\\n                    //this.Update(r);\\r\\n                    this.UpdateSub(model);\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        onSave(item) {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(item));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r).then(res => {\\r\\n                        if (res.data.kq == 'ok') {\\r\\n                            this.toast(`${res.data.msg}`);\\r\\n                            this.adding = false;\\r\\n                            this.$refs.mytable.refresh();\\r\\n                        }\\r\\n                    })\\r\\n                } else {\\r\\n                    //tien hanh sua\\r\\n                    this.Update(r).then(res => {\\r\\n                        this.toast(`${res.data.msg}`);\\r\\n                        this.adding = false;\\r\\n                        this.sel = {};\\r\\n                        this.$refs.mytable.refresh();\\r\\n                    })\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        OnCancel(item) {\\r\\n            if (item[this.pri] != 0) {\\r\\n                this.doCancel(item);\\r\\n                this.sel = {};\\r\\n            } else {\\r\\n                this.adding = false;\\r\\n                this.$refs.mytable.refresh();\\r\\n            }\\r\\n        },\\r\\n        OnDel(item) {\\r\\n            this.Del(item[this.pri]).then(res => {\\r\\n                if (res.data.kq == 'nook') {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    return;\\r\\n                }\\r\\n                this.toast(`${res.data.msg}`);\\r\\n                let lastPage = this.getLastPage(this.totalRows - 1);\\r\\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\\r\\n                this.$refs.mytable.refresh();\\r\\n            })\\r\\n        },\\r\\n        delRow(item) {\\r\\n            let id = item.id;\\r\\n            let index = this.items.findIndex(x => x.id == id);\\r\\n            this.items.splice(index, 1);\\r\\n        },\\r\\n        isEditing() {\\r\\n            return JSON.stringify(this.sel) != \\\"{}\\\"\\r\\n        },\\r\\n        isAdded() {\\r\\n            let kq = false;\\r\\n            this.items.forEach(x => {\\r\\n                if (x.id == 0) kq = true;\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        doCancel(item) {\\r\\n            for (let key in item) {\\r\\n                if (item[key] != this.sel[key]) {\\r\\n                    item[key] = this.sel[key]\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        getLastPage(count) {\\r\\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\\r\\n            let du = count % pageSize;\\r\\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n        },\\r\\n        gotoPage(page) {\\r\\n            this.currentPage = page;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n        async Add(r) {\\r\\n            return await fetchClient.post(`/api/LopHoc4/Add`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.hideModal();\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async AddSub(r) {\\r\\n            return await fetchClient.post(`/api/LopHoc4/AddSub`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${JSON.stringify(res.data.msg)}`);\\r\\n                    this.hideModal();\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Update(r) {\\r\\n            return await fetchClient.post(`/api/LopHoc4/Update`, r)\\r\\n                .then(res => {\\r\\n                    this.hideModal();\\r\\n                    this.toast(`${res.data.msg}`)\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async UpdateSub(r) {\\r\\n            return await fetchClient.post(`/api/LopHoc4/UpdateSub`, r)\\r\\n                .then(res => {\\r\\n                    this.hideModal();\\r\\n                    this.toast(`${JSON.stringify(res.data.msg)}`)\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Del(id) {\\r\\n            return await fetchClient.get(`/api/LopHoc4/Delete?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`)\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async getById(id) {\\r\\n            return await fetchClient.get(`/api/LopHoc4/GetById?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.sel2 = res.data;\\r\\n                    this.showModal();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        info(item, index, button) {\\r\\n            this.infoModal.title = `Row index: ${index}`\\r\\n            this.infoModal.content = JSON.stringify(item, null, 2)\\r\\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\\r\\n        },\\r\\n        resetInfoModal() {\\r\\n            this.infoModal.title = ''\\r\\n            this.infoModal.content = ''\\r\\n        },\\r\\n        onFiltered(filteredItems) {\\r\\n            this.totalRows = filteredItems.length\\r\\n            this.currentPage = 1\\r\\n        },\\r\\n        showModal() {\\r\\n            this.$refs[\\\"my-modal\\\"].show();\\r\\n        },\\r\\n        hideModal() {\\r\\n            this.$refs[\\\"my-modal\\\"].hide();\\r\\n        },\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n  \\r\\n  \";","export default{    \r\n    data() {\r\n        return {\r\n            pri:\"Id\",\r\n            ds1:[\r\n                // {id:1,ten:'thuc 101'},\r\n                // {id:2,ten:'thuc 102'}\r\n            ]\r\n        };\r\n    },\r\n    created: function () {\r\n    },\r\n    methods: {\r\n        SetPri(pri){\r\n            this.pri=pri;\r\n        },\r\n        SetDs(ds){\r\n            this.ds1=[];\r\n            ds.forEach(x => {\r\n                let item = JSON.parse(JSON.stringify(x));\r\n                item.Note = '';\r\n                this.ds1.push(item);\r\n            })\r\n        },\r\n        Lds(){\r\n            return this.ds1;\r\n        },\r\n        createId() {\r\n            let max = 0;\r\n            this.ds1.forEach(x => {\r\n              if (x[this.pri] > max) {\r\n                max = x[this.pri];\r\n              }\r\n            })\r\n            return max + 1;\r\n          },\r\n        Add(item){\r\n            let r = JSON.parse(JSON.stringify(item));\r\n            r.Note = \"new\";\r\n            this.ds1.push(r);\r\n        },\r\n        Find(id){\r\n            let index= this.ds1.findIndex(x=>x[this.pri]==id);\r\n            if( index >=0 ){\r\n                return this.ds1[index];\r\n            }\r\n            return null;\r\n        },\r\n        Update(r){\r\n            let item=this.Find(r[this.pri]);\r\n            if(item!=null){\r\n                let temp=JSON.parse(JSON.stringify(item));\r\n                let keys=Object.keys(r);\r\n                keys.forEach(x=>{\r\n                    temp[x]=r[x];\r\n                })\r\n                if(temp.Note==''){\r\n                    temp.Note=\"edit\";\r\n                }\r\n                let index=this.ds1.findIndex(x=>x[this.pri]==temp[this.pri]);\r\n                this.ds1[index]=temp;\r\n            }\r\n        },\r\n        Del(item){\r\n            let id = item[this.pri];\r\n            let r=this.Find(id);\r\n            if(r!=null){\r\n                let index=this.ds1.findIndex(x=>x[this.pri]==id);\r\n                if(r.Note=='new'){\r\n                    this.ds1.splice(index,1);\r\n                }else{\r\n                    r.Note=\"del\";\r\n                    this.ds1[index]=r;\r\n                }\r\n            }\r\n        },\r\n    }\r\n};\r\n/*\r\nimport ListMixin from \"@/ListMixin\"\r\nexport default {\r\n    name: 'HomeView',\r\n    mixins:[ListMixin],\r\n    components: {\r\n    },\r\n    mounted() {\r\n        this.lds();\r\n    },\r\n    methods: {\r\n    }\r\n}\r\n*/\r\n","export default {\r\n    XuLyErr(err) {\r\n        let code = JSON.parse(JSON.stringify(err)).status;\r\n        if (code == 400) {\r\n            let msg = JSON.parse(JSON.stringify(err.response)).data.message;\r\n            alert(msg);\r\n        } else {\r\n            if (err.response) {\r\n                if (err.response.status == 401)\r\n                    alert(\"Chưa đăng nhập hoặc token hết hạn\");\r\n                else if (err.response.status == 403)\r\n                    alert(\"Bạn ko có quyền\");\r\n            } else if (err.request) {\r\n                alert(JSON.stringify(err.request));\r\n            } else if (err.message) {\r\n                alert(JSON.stringify(err.message));\r\n            }\r\n        }\r\n    }\r\n}\r\n  /*\r\nimport TumLum from '@/TumLum';\r\n*/","import axios from 'axios';\r\n\r\nconst fetchClient = () => {\r\n  const defaultOptions = {\r\n    baseURL: '',\r\n    method: 'get',\r\n    headers: {\r\n      //'Content-Type': 'application/json',\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n  };\r\n\r\n  // Create instance\r\n  let instance = axios.create(defaultOptions);\r\n\r\n  // Set the AUTH token for any request\r\n  instance.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem('token');\r\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\r\n    return config;\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport default fetchClient();"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","$event","stopPropagation","preventDefault","onSaveModal","apply","arguments","ref","sel2","pri","_l","v","k","key","_v","directives","name","rawName","value","expression","class","errors","has","domProps","target","composing","$set","_e","hideModal","myProvider","fields","currentPage","perPage","filter","filterOn","sortBy","sortDesc","sortDirection","onFiltered","scopedSlots","_u","fn","item","field","_s","row","onSave","OnCancel","sel","adding","isEditing","OnEdit","OnDel","data","columns","model","callback","$$v","pageOptions","last_page","totalRows","OnAdd","onChangePage","onPagingInput","infoModal","id","title","resetInfoModal","content","staticRenderFns","items","year","month","day","isAdded","getLastPage","Vue","classes","fieldsBagName","props","mixins","formatter","sortable","thClass","tdClass","thStyle","width","text","lastPage","ds","Mons","computed","sortOptions","f","map","mounted","methods","UpdateRow","onSoLgChange","onMonChange","onSave1","r","delRow","doCancel","Id","TenHocSinh","NamSinh","LopHocId","info","toast","variant","solid","then","res","catch","err","TumLum","component","components","VueTypeaheadBootstrap","HocSinhTblSubCom","ListAuto","watch","OnSearch","fetch","response","console","url","vm","mapData","Object","x","kq","TenLop","Sub","gotoPage","showModal","ds1","created","SetPri","SetDs","forEach","JSON","parse","stringify","Note","push","Lds","createId","max","Add","Find","index","findIndex","Update","temp","keys","Del","splice","XuLyErr","code","status","msg","message","alert","request","fetchClient","defaultOptions","baseURL","method","headers","instance","axios","interceptors","use","config","token","localStorage","getItem","Authorization"],"sourceRoot":""}