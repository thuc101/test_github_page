"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[7301],{67301:function(e,t,s){s.r(t),s.d(t,{default:function(){return d}});var n=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"MonHocToan"},[n("raw-loader",{attrs:{mytxt:s(2318).Z}}),n("h1",{staticClass:"border-bottom"},[e._v("This is JwtTest page")]),e._v(" logged:"+e._s(e.$store.state.logged)),n("br"),e._v(" msg:"+e._s(e.msg)),n("br"),n("button",{staticClass:"m-1",on:{click:e.OnHowAreYou}},[e._v("HowAreYou")]),0==e.$store.state.logged?n("div",[e._v(" UserName : "),n("input",{directives:[{name:"model",rawName:"v-model",value:e.UserName,expression:"UserName"}],staticClass:"m-1",attrs:{type:"text"},domProps:{value:e.UserName},on:{input:function(t){t.target.composing||(e.UserName=t.target.value)}}}),n("br"),e._v(" Password : "),n("input",{directives:[{name:"model",rawName:"v-model",value:e.Password,expression:"Password"}],staticClass:"m-1",attrs:{type:"text"},domProps:{value:e.Password},on:{input:function(t){t.target.composing||(e.Password=t.target.value)}}}),n("br"),n("button",{staticClass:"m-1",on:{click:e.OnLogin}},[e._v("Login")])]):n("div",[n("div",[n("div",[e._v(e._s(e.$store.state.user))]),n("button",{staticClass:"m-1",on:{click:e.OnLogout}},[e._v("Logout")])]),n("div",{staticClass:"border"},[n("button",{staticClass:"m-1",on:{click:e.onGetAll}},[e._v("GetAll")]),n("button",{staticClass:"m-1",on:{click:e.onGetById}},[e._v("GetById")])])])],1)},o=[],r=s(60325),a={name:"Tpl",components:{},data(){return{UserName:"admin",Password:"admin",test:"",msgGetListUser:[],dsUser:[],msg:""}},mounted(){let e=localStorage.getItem("logged")?1:0;this.$store.state.logged=e,this.$store.state.user=localStorage.getItem("user")},methods:{OnLogin(){this.Login(this.UserName,this.Password).then((e=>{let t=e.data.Token;localStorage.setItem("token",t),localStorage.setItem("logged",1),localStorage.setItem("user",JSON.stringify(e.data)),window.location.reload()}))},OnLogout(){localStorage.removeItem("token"),localStorage.removeItem("logged"),localStorage.removeItem("user"),window.location.reload()},onGetListUser(){this.GetListUser().then((e=>{this.dsUser=e.data.list}))},onGetAll(){this.GetAll().then((e=>{alert(JSON.stringify(e))}))},onGetById(){let e=this.$store.state.user,t=JSON.parse(e).Id;this.GetById(t).then((e=>{alert(JSON.stringify(e))}))},OnHowAreYou(){this.HowAreYou().then((e=>{this.msg=e}))},async GetById(e){return await r.Z.get(`/Users/GetById/${e}`).catch((e=>{console.log(e)}))},async GetAll(){return await r.Z.get("/Users/GetAll").catch((e=>{console.log(e)}))},async HowAreYou(){return await r.Z.get("/Users/HowAreYou").catch((e=>{console.log(e)}))},OnTest(){this.Test().then((e=>{this.test=e}))},async Login(e,t){return await r.Z.post("/Users/authenticate",{UserName:e,Password:t}).catch((e=>{console.log(e)}))},async Test(){return await r.Z.get("/api/User2/GetAdminData").catch((e=>{console.log(e)}))},async MyTest(){return await r.Z.get("/api/User2/MyTest").catch((e=>{console.log(e)}))},async GetListUser(){return await r.Z.get("/api/User2/GetListUser").catch((e=>{console.log(e)}))}}},i=a,l=s(1001),c=(0,l.Z)(i,n,o,!1,null,"6d557e6c",null),d=c.exports},2318:function(e,t){t["Z"]='<template>\n  <div class="MonHocToan">\n    <raw-loader :mytxt="require(\'!raw-loader!./JwtTest.vue\').default"></raw-loader>\n    <h1 class="border-bottom">This is JwtTest page</h1>\n    logged:{{ $store.state.logged }}<br>\n    msg:{{ msg }}<br>\n    <button class="m-1" @click="OnHowAreYou">HowAreYou</button>\n    <div v-if="$store.state.logged == 0">\n      UserName : <input class="m-1" type="text" v-model="UserName" /><br>\n      Password : <input class="m-1" type="text" v-model="Password" /><br>\n      <button class="m-1" @click="OnLogin">Login</button>\n    </div>\n    <div v-else>\n      <div>\n        <div>{{ $store.state.user }}</div>\n        <button class="m-1" @click="OnLogout">Logout</button>\n      </div>\n      <div class="border">\n        <button class="m-1" @click="onGetAll">GetAll</button>\n        <button class="m-1" @click="onGetById">GetById</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Repository from \'@/Repository\';\n\nexport default {\n  name: \'Tpl\',\n  components: {\n  },\n  data() {\n    return {\n      UserName: "admin",\n      Password: "admin",\n      test: "",\n      msgGetListUser: [],\n      dsUser: [],\n      msg:""\n    }\n  },\n  mounted() {\n    let logged = localStorage.getItem("logged") ? 1 : 0;\n    this.$store.state.logged = logged;\n    this.$store.state.user = localStorage.getItem("user");\n  },\n  methods: {\n    OnLogin() {\n      this.Login(this.UserName, this.Password).then(res => {\n        /*{"data":{\n            "Id":1,"FirstName":"Admin","LastName":"User","Username":"admin","Password":null,"Role":"Admin",\n            "Token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjEiLCJyb2xlIjoiQWRtaW4iLCJuYmYiOjE2NzM5NDA2NjYsIm\n        */\n        //return;\n        let token = res.data.Token;\n        //alert(token);\n        localStorage.setItem("token", token);\n        localStorage.setItem("logged", 1);\n        localStorage.setItem("user", JSON.stringify(res.data));\n        window.location.reload();\n      })\n    },\n    OnLogout() {\n      localStorage.removeItem(\'token\');\n      localStorage.removeItem(\'logged\');\n      localStorage.removeItem(\'user\');\n      window.location.reload();\n    },\n    onGetListUser() {\n      this.GetListUser().then(res => {\n        // alert(JSON.stringify(res));\n        // GetListUser        \n        // {"data":{"list":[{"UserId":1,"UserName":"admin","FullName":"Thuc 101","Password":"1234        \n        this.dsUser = res.data.list;\n      })\n    },\n    onGetAll() {\n      this.GetAll().then(res => {\n        alert(JSON.stringify(res));\n      })\n    },\n    onGetById() {\n      let user = this.$store.state.user;\n      let id = JSON.parse(user).Id;\n      this.GetById(id).then(res => {\n        alert(JSON.stringify(res));\n      })\n    },\n    OnHowAreYou(){\n      this.HowAreYou().then(res=>{\n        //alert(JSON.stringify(res));\n        this.msg=res;\n      })\n    },\n    async GetById(id) {\n      return await Repository.get(`/Users/GetById/${id}`).catch((err) => {\n        console.log(err);\n      });\n    },\n    async GetAll() {\n      return await Repository.get(`/Users/GetAll`).catch((err) => {\n        console.log(err);\n      });\n    },\n    async HowAreYou(){\n      return await Repository.get(`/Users/HowAreYou`).catch(err=>{\n        console.log(err);\n      });\n    },\n    OnTest() {\n      this.Test().then(res => {\n        this.test = res;\n      })\n    },\n    async Login(UserName, Password) {\n      return await Repository.post(`/Users/authenticate`, { UserName: UserName, Password: Password }).catch((err) => {\n        console.log(err);\n      });\n    },\n    async Test() {\n      return await Repository.get(`/api/User2/GetAdminData`).catch((err) => {\n        console.log(err);\n      });\n    },\n    async MyTest() {\n      return await Repository.get(`/api/User2/MyTest`).catch((err) => {\n        console.log(err);\n      });\n    },\n    async GetListUser() {\n      return await Repository.get(`/api/User2/GetListUser`).catch((err) => {\n        console.log(err);\n      });\n    },\n  }\n}\n<\/script>\n<style scoped>\n.mypre {\n  font-size: 11px;\n}\n</style>\n'},60325:function(e,t,s){var n=s(9669),o=s.n(n);let r=localStorage.getItem("token");t["Z"]=o().create({baseURL:"",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json;charset=utf-8"}})}}]);
//# sourceMappingURL=7301.91fd0c76.js.map