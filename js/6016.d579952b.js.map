{"version":3,"file":"js/6016.d579952b.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInlineEditor2.vue?f7d9","webpack://vue_start_1/src/views/Tabulator/VueTabulatorInlineEditor2.vue","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInlineEditor2.vue?94f4","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInlineEditor2.vue?8918","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInlineEditor2.vue","webpack://vue_start_1/./src/func/MyLoad.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./VueTabulatorInlineEditor2.vue').default}}),_vm._v(\" \"+_vm._s(_vm.msg)),_c('br'),_vm._v(\" sel : \"+_vm._s(_vm.sel)),_c('br'),_vm._v(\" valid : \"+_vm._s(_vm.valid)),_c('br'),_vm._v(\" \"+_vm._s(_vm.tableData)+\" \"),_c('div',{staticClass:\"mb-1\"},[_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onAdd}},[_vm._v(\"Add\")])]),_c('div',{ref:\"table\"}),_c('b-modal',{ref:\"my-modal2\",attrs:{\"id\":\"modal-1\",\"size\":\"sm\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":\"BootstrapVue\"}},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.id),expression:\"r.id\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"disabled\":\"\"},domProps:{\"value\":(_vm.r.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"id\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Name \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.name),expression:\"r.name\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n              'form-control': true,\n              'ko-hop-le': _vm.errors.has('name'),\n            },attrs:{\"type\":\"text\",\"name\":\"name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.r.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"name\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Ngay \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-datepicker',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],staticClass:\"mb-2\",attrs:{\"name\":\"ngay\",\"date-format-options\":{ year: 'numeric', month: 'numeric', day: 'numeric' },\"locale\":\"vi\"},model:{value:(_vm.r.ngay),callback:function ($$v) {_vm.$set(_vm.r, \"ngay\", $$v)},expression:\"r.ngay\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Act \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-checkbox',{attrs:{\"name\":\"checkbox-1\",\"value\":\"true\",\"unchecked-value\":\"false\"},on:{\"change\":_vm.ChangeAct},model:{value:(_vm.r.act),callback:function ($$v) {_vm.$set(_vm.r, \"act\", $$v)},expression:\"r.act\"}},[_vm._v(\" Active \")])],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Thành phố \"+_vm._s(_vm.errors.has('tp'))+\" \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('tp') },attrs:{\"name\":\"tp\",\"reduce\":function (option) { return option.id; },\"options\":_vm.tps,\"has-error\":_vm.errors.has('tp')},model:{value:(_vm.r.tp),callback:function ($$v) {_vm.$set(_vm.r, \"tp\", $$v)},expression:\"r.tp\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Quyền \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('quyen') },attrs:{\"multiple\":\"\",\"name\":\"quyen\",\"options\":['Admin', 'User', 'Editor']},model:{value:(_vm.r.quyen),callback:function ($$v) {_vm.$set(_vm.r, \"quyen\", $$v)},expression:\"r.quyen\"}})],1)])]),_c('div',{staticClass:\"float-right\"},[_c('button',{staticClass:\"btn btn-primary mr-1 btn-sm\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn btn-sm\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <raw-loader :mytxt=\"require('!raw-loader!./VueTabulatorInlineEditor2.vue').default\"></raw-loader>\r\n    {{ msg }}<br>\r\n    <!-- {{myvalid}}<br> -->\r\n    <!-- rowedit : {{rowedit}}<br>   -->\r\n    sel : {{ sel }}<br>\r\n    valid : {{ valid }}<br>\r\n    {{ tableData }}\r\n    <div class=\"mb-1\">\r\n      <button class=\"mr-1\" @click=\"onAdd\">Add</button>\r\n      <!-- <button class=\"mr-1\" @click=\"testData\" >Test data</button> -->\r\n      <!-- <button class=\"mr-1\" @click=\"testEdit\" >Test Edit</button> -->\r\n    </div>\r\n    <!-- {{tableData}} -->\r\n    <div ref=\"table\"></div>\r\n    <b-modal ref=\"my-modal2\" id=\"modal-1\" size=\"sm\" :no-close-on-backdrop=\"true\" hide-footer title=\"BootstrapVue\">\r\n      <form @submit.stop.prevent=\"onSaveModal\">\r\n        <div>\r\n          <!-- <pre>{{r}}</pre> -->\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">Id</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" class=\"form-control\" disabled v-model=\"r.id\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Name\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" v-model=\"r.name\" name=\"name\" v-validate=\"'required'\" :class=\"{\r\n                'form-control': true,\r\n                'ko-hop-le': errors.has('name'),\r\n              }\" autocomplete=\"off\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Ngay\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <b-form-datepicker v-model=\"r.ngay\" name=\"ngay\" v-validate=\"'required'\"\r\n                :date-format-options=\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\" locale=\"vi\" class=\"mb-2\">\r\n              </b-form-datepicker>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Act\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <b-form-checkbox v-model=\"r.act\" name=\"checkbox-1\" value=true unchecked-value=false @change=\"ChangeAct\">\r\n                Active\r\n              </b-form-checkbox>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Thành phố {{ errors.has('tp') }}\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <v-select v-model=\"r.tp\" name=\"tp\" v-validate=\"'required'\" :reduce=\"(option) => option.id\" :options=\"tps\"\r\n                :has-error=\"errors.has('tp')\" :class=\"{ danger: errors.has('tp') }\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Quyền\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <v-select multiple name=\"quyen\" v-model=\"r.quyen\" :options=\"['Admin', 'User', 'Editor']\"\r\n                v-validate=\"'required'\" :class=\"{ danger: errors.has('quyen') }\" />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"float-right\">\r\n          <button type=\"submit\" class=\"btn btn-primary mr-1 btn-sm\">Save</button>\r\n          <button type=\"button\" class=\"btn btn-sm\" @click=\"hideModal()\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { TabulatorFull as Tabulator } from 'tabulator-tables'; //import Tabulator library\r\n//import $ from \"jquery\"\r\nimport MyLoader from \"@/func/MyLoad.js\";\r\n\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n  classes: true,\r\n});\r\n\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\nimport \"vue-select/dist/vue-select.css\";\r\nimport moment from 'moment';\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      tabulator: null, //variable to hold your table\r\n      tableData: [], //data for table to display\r\n      msg: \"hello world\",\r\n      count: 8,\r\n      r: {\r\n        id: 0,\r\n        ten: 'thuc 101',\r\n        ngay: new Date\r\n      },\r\n      tps: [\r\n        { label: 'Huế', id: 'HUE' },\r\n        { label: 'Sài gòn', id: 'SG' },\r\n        { label: 'Đà nẵng', id: 'DN' },\r\n        { label: 'Quảng ngãi', id: 'QN' },\r\n      ],\r\n      sel: {},\r\n      valid: '',\r\n      oldColor: '',\r\n\r\n      mons: [\r\n        { id: 1, name: 'Gạo' },\r\n        { id: 2, name: 'Đường' },\r\n        { id: 3, name: 'Muối' },\r\n        { id: 4, name: 'Bột ngọt' },\r\n        { id: 5, name: 'Nước ngọt' },\r\n        { id: 6, name: 'Cà phê' },\r\n        { id: 7, name: 'Bia' },\r\n        { id: 8, name: 'Nước mía' }\r\n      ]\r\n\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!document.getElementById(\"myScript\")) {\r\n      MyLoader.loadScript(\"myScript\", \"/js/jquery.min.js\").then(() => {\r\n        MyLoader.loadScript(\"\", \"/js/bootstrap.js\").then(() => {\r\n          MyLoader.loadScript(\"\", \"/js/select2.min.js\").then(() => {\r\n            MyLoader.loadScript(\"\", \"/js/bootstrap-datepicker.js\").then(() => {\r\n              MyLoader.loadScript(\"\", \"/js/moment.js\").then(() => {\r\n                MyLoader.loadCss(\"/css/select2.min.css\").then(() => {\r\n                  MyLoader.loadCss(\"/css/bootstrap-datepicker.css\").then(() => {\r\n                    this.onReady();\r\n                  })\r\n                })\r\n              })\r\n            })\r\n          })\r\n        })\r\n      })\r\n    } else {\r\n      this.onReady();\r\n    }\r\n  },\r\n  methods: {\r\n    onReady() {\r\n      this.loadTabulator();\r\n    },\r\n    loadTabulator() {\r\n      var that = this;\r\n\r\n      var datePickerFormatter = function (cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n          let $cell = $(cell.getElement()).find(\"input\");\r\n          let editable = (that.sel.id == cell.getRow().getData().id);\r\n          if (editable == false) {\r\n            $(cell.getElement()).find(\"input:first\").prop(\"disabled\", true);\r\n          } else {\r\n          }\r\n          $cell.css({\r\n            \"padding\": \"4px\",\r\n            \"width\": \"100%\",\r\n            \"box-sizing\": \"border-box\",\r\n            \"height\": \"100%\",\r\n            //\"border\":\"1px solid blue\",\r\n            //\"background-color\":\"yellow\",\r\n          })\r\n          $cell.prop(\"readonly\", true);\r\n          $cell.datepicker({\r\n            format: \"dd/mm/yyyy\",\r\n            todayBtn: true,\r\n            autoclose: true,\r\n            todayHighlight: true,\r\n          });\r\n          let value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\"DD/MM/YYYY\");\r\n          $cell.datepicker(\"setDate\", value);\r\n          $cell.datepicker().on(\"changeDate\", function () {\r\n            let d = $(this).datepicker(\"getDate\");\r\n            cell.setValue(moment(d).format(\"DD/MM/YYYY\"));\r\n          });\r\n        });\r\n        var $el = $(\"<input class='form-control' />\");\r\n        return $el[0];\r\n      };\r\n\r\n      var select2Formatter = function (cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n          let $myCell = $(cell.getElement());\r\n          let $cell = $(cell.getElement()).find(\"select\");\r\n          $cell.css({\r\n            \"padding\": \"4px\",\r\n            \"width\": \"100%\",\r\n            \"box-sizing\": \"border-box\",\r\n            \"font-family\": \"\",\r\n          })\r\n          $cell.select2({\r\n            placeholder: '',\r\n            width: \"100%\",\r\n            allowClear: true,\r\n          });\r\n          $cell.focus();\r\n          $cell.val(cell.getValue()).trigger(\"change.select2\");\r\n          $(cell.getElement())\r\n            .find(\"select\")\r\n            .on(\"change\", function () {\r\n              cell.setValue($(this).val());\r\n            });\r\n          $myCell\r\n            .find(\".select2-container--default\")\r\n            .css(\"border\", \"0px solid blue\");\r\n          $myCell\r\n            .find(\".select2-selection--single\")\r\n            .css(\"border\", \"0px solid blue\");\r\n        });\r\n        var $el = $(\"<select class='tabu' >\");\r\n        let editable = (that.sel.id == cell.getRow().getData().id);\r\n        if (editable == false) {\r\n          $el.attr('disabled', 'disabled');\r\n        } else {\r\n        }\r\n        formatterParams.forEach((el) => {\r\n          let $option = $(\"<option>\").attr(\"value\", el.id).text(el.text);\r\n          $el.append($option);\r\n        });\r\n        return $el[0];\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n      var roweditCheck = function (cell) {\r\n        let row = cell.getRow();\r\n        let id = row.getIndex();\r\n        let $cell = row.getElement();\r\n        if (that.sel.id == cell.getRow().getData().id) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      this.tabulator = new Tabulator(this.$refs.table, {\r\n        //selectable:true,\r\n        //columnVertAlign:\"middle\",//\"bottom\",//middle\r\n        data: this.tableData, //link data to table\r\n        reactiveData: true, //enable data reactivity\r\n        height: $(window).innerHeight() - 400,//'200px',//$(window).innerHeight()\r\n        //addRowPos:\"top\",       //top,bottom//when adding a new row, add it to the top of the table\r\n        // columnVertAlign: \"middle\", //align header contents\r\n        history: true,             //allow undo and redo actions on the table\r\n        pagination: \"local\",       //paginate the data\r\n        paginationSize: 3,         //allow 7 rows per page of data\r\n        paginationCounter: \"rows\", //display count of paginated rows in footer\r\n        paginationInitialPage: 1, //optional parameter to set the initial page to load    \r\n        paginationSizeSelector: [5, 10, 20, 30, 50],\r\n        rowFormatter: function (row) {\r\n          let chk = that.sel.id == row.getData().id;\r\n          if (chk == true) {\r\n            //$(row.getElement()).css(\"background-color\", \"yellow\");\r\n          } else {\r\n            //$(row.getElement().child[0])\r\n            //.css(\"background-color\", rgb(255, 255, 255));\r\n            //.css(\"background-color\", \"blue\");\r\n            //row.getElement().childNodes[0].style.backgroundColor=\"silver\";            \r\n          }\r\n\r\n        },\r\n        //autoColumns:true,\r\n        columns: [\r\n          {\r\n            title: \"STT\",\r\n            formatter: \"rownum\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            vertAlign: \"middle\",//\"bottom\",\r\n          },\r\n          {\r\n            title: \"Cmd\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            vertAlign: \"middle\",//\"bottom\",\r\n            headerSort: false,\r\n            width: 100,\r\n            formatter: function (cell, formatterParams, onRendered) {\r\n              onRendered(function () {\r\n                $(cell.getElement()).find(\"#testedit\").on(\"click\", cell, that.onTestEdit);\r\n                $(cell.getElement()).find(\"#save\").on(\"click\", cell.getRow(), that.onSave);\r\n                $(cell.getElement()).find(\"#cancel\").on(\"click\", cell.getRow(), that.onCancel);\r\n                $(cell.getElement()).find(\"#edit\").on(\"click\", cell.getRow(), that.onEdit);\r\n                $(cell.getElement()).find(\"#del\").on(\"click\", cell.getRow(), that.onDel);\r\n              });\r\n              let $div = $(\"<div>\");\r\n              let $btnSave = $(\"<button>\", { text: \"Save\", class: \"mr-1\" }).attr(\"id\", \"save\").hide();\r\n              let $btnCancel = $(\"<button>\", { text: \"Cancel\", class: \"mr-1\" }).attr(\"id\", \"cancel\").hide();\r\n              let $btnEdit = $(\"<button>\", { text: \"Edit\", class: \"mr-1\" }).attr(\"id\", \"edit\");\r\n              let $btnDel = $(\"<button>\", { text: \"Del\", class: \"mr-1\" }).attr(\"id\", \"del\");\r\n              $div.append($btnSave);\r\n              $div.append($btnCancel);\r\n              $div.append($btnEdit);\r\n              $div.append($btnDel);\r\n              if (that.sel.id == cell.getRow().getData().id) {\r\n                $btnSave.show();\r\n                $btnCancel.show();\r\n                $btnEdit.hide();\r\n                $btnDel.hide();\r\n              } else {\r\n                if ($.isEmptyObject(that.sel) == true) {\r\n                  $btnSave.hide();\r\n                  $btnCancel.hide();\r\n                  $btnEdit.show();\r\n                } else {\r\n                  $btnEdit.attr('disabled', 'disabled');//.hide();\r\n                  $btnDel.attr('disabled', 'disabled');//.hide();\r\n                }\r\n              }\r\n              return $div[0];\r\n            },\r\n          },\r\n          {\r\n            title: \"Id\",\r\n            field: \"id\",\r\n            width: 50,\r\n            vertAlign: \"middle\",//\"bottom\",\r\n            //headerFilter: true,\r\n            hozAlign: \"center\",\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            width: 80,\r\n            vertAlign: \"middle\",//\"bottom\",\r\n            editor: \"input\",\r\n            validator: [\"required\"], //\"required\"  \r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"Ngày\",\r\n            field: \"ngay\",\r\n            width: 100,\r\n            hozAlign: \"center\",\r\n            formatter: datePickerFormatter,\r\n            editable: roweditCheck,\r\n          },\r\n          {\r\n            title: \"MonId\",\r\n            field: \"monid\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"left\",\r\n            width: 110,\r\n            validator: [\"required\"], //\"required\"  \r\n            formatter: select2Formatter,\r\n            formatterParams: [\r\n              { id: 1, name: 'Gạo' },\r\n              { id: 2, name: 'Đường' },\r\n              { id: 3, name: 'Muối' },\r\n              { id: 4, name: 'Bột ngọt' },\r\n              { id: 5, name: 'Nước ngọt' },\r\n              { id: 6, name: 'Cà phê' },\r\n              { id: 7, name: 'Bia' },\r\n              { id: 8, name: 'Nước mía' }\r\n            ].map((x) => ({\r\n              id: x.id,\r\n              text: `${x.id} - ${x.name}`,\r\n            })),\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"Solg\",\r\n            field: \"solg\",\r\n            width: 60,\r\n            vertAlign: \"middle\",//\"bottom\",\r\n            hozAlign:\"right\",            \r\n            editor: \"input\",\r\n            validator: [\"required\",\"integer\"], //\"required\"  \r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"Tien\",\r\n            field: \"tien\",\r\n            width: 60,\r\n            vertAlign: \"middle\",//\"bottom\",\r\n            hozAlign:\"right\",            \r\n            //editor: \"input\",\r\n            //editable: roweditCheck,//editCheck,\r\n            formatter: \"money\",\r\n            formatterParams: {\r\n              decimal: \",\",\r\n              thousand: \".\",\r\n              symbol: \"\", //\"£\",\r\n              symbolAfter: \"p\",\r\n              precision: false,\r\n            },\r\n\r\n          },\r\n\r\n        ], //define table columns\r\n      });\r\n      this.tabulator.on(\"dataLoaded\", function (data) {\r\n        that.onLoad();\r\n      });\r\n      this.tabulator.on(\"pageLoaded\", function (pageno) {\r\n      });\r\n      this.tabulator.on(\"dataChanged\", function (data) {\r\n      });\r\n      this.tabulator.on(\"rowClick\", function (e, row) {\r\n      });\r\n      this.tabulator.on(\"rowSelectionChanged\", function (data, rows) {\r\n      });\r\n      this.tabulator.on(\"rowSelected\", function (row) {\r\n        let index = row.getIndex();\r\n        that.msg = index;\r\n        console.log('rowSelected');\r\n      });\r\n      this.tabulator.on(\"cellEditing\", function (cell) {\r\n        let row = cell.getRow();\r\n        let data = row.getData();\r\n        let index = row.getIndex();\r\n      });\r\n      this.tabulator.on(\"cellEditCancelled\", function (cell) {\r\n      });\r\n      this.tabulator.on(\"cellEdited\", function (cell) {\r\n        let row = cell.getRow();   \r\n        let data=row.getData();\r\n        let solg=data.solg;\r\n        let tien=solg*1000;\r\n        let id=row.getIndex();\r\n        let index=that.tableData.findIndex(x=>x.id==id);\r\n        that.tableData[index].tien=tien;\r\n        //console.log(`cell edited`);\r\n        //alert(cell.getField());\r\n        // let index=row.getIndex();\r\n        // //alert(JSON.stringify(data));\r\n        // let solg=data.solg;\r\n        // let dongia=data.dongia;\r\n        // let tien=solg*dongia;\r\n        //console.log(tien);\r\n      });\r\n      this.tabulator.on(\"validationFailed\", function (cell, value, validators) {\r\n        let field = cell.getField();\r\n        that.valid = field;\r\n      });\r\n    },\r\n    onLoad() {\r\n      let ar = [\r\n        { \r\n          id: 1, \r\n          name: \"thuc 101\", \r\n          ngay: new Date(), \r\n          monid: 1,\r\n          solg:10, \r\n          tien:1\r\n        },\r\n        { \r\n          id: 2, \r\n          name: \"thuc 102\", \r\n          ngay: new Date(), \r\n          monid: 1,\r\n          solg:10, \r\n          tien:1\r\n        },\r\n        { \r\n          id: 3, \r\n          name: \"thuc 103\", \r\n          ngay: new Date(), \r\n          monid: 1,\r\n          solg:10, \r\n          tien:1\r\n        },\r\n      ];\r\n      this.count = 4;\r\n      ar.forEach(x=>{\r\n        let tien=x.solg*1000;\r\n        x.tien=tien;\r\n      })\r\n      ar.forEach(x => {\r\n        this.tableData.push(x);\r\n      })\r\n    },\r\n    ChangeAct() {\r\n      let act = (this.r.act == 'true') ? true : false;\r\n      this.r.act = act;\r\n    },\r\n    onSave(e) {\r\n      if (this.valid != \"\") {\r\n        this.toast(\"không hợp lệ!!!\")\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      var cells = row.getCells();\r\n      let id = row.getIndex();\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      let r = JSON.parse(JSON.stringify(this.tableData[index]));// this.tableData[index]\r\n      this.tabulator.deselectRow(this.sel.id);\r\n      this.sel = {};\r\n      this.tabulator.redraw(true);\r\n    },\r\n    onSaveModal() {\r\n      this.$validator.validateAll().then((result) => {\r\n        if (!result) {\r\n          this.toast(\"Không hợp lệ\");\r\n          return;\r\n        }\r\n        let r = JSON.parse(JSON.stringify(this.r));\r\n        if (r.id == 0) {\r\n          r.id = this.count;\r\n          this.tabulatorAdd(r);\r\n          this.count++;\r\n          this.setPage(1);\r\n        } else {\r\n          this.tabulatorUpdate(r);\r\n        }\r\n        this.hideModal();\r\n      });\r\n    },\r\n    onAdd() {\r\n      let r = {\r\n        id: this.count,\r\n        name: \"thuc 101\",\r\n      }\r\n      this.tabulatorAdd(r);\r\n      this.count++;\r\n      this.setPage(1);\r\n    },\r\n    onCancel(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      var cells = row.getCells();\r\n      let id = row.getIndex();\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      let r = JSON.parse(JSON.stringify(this.sel));\r\n      this.tabulatorUpdate(r);\r\n      this.sel = {};\r\n      this.valid = \"\";\r\n      let $row = $(row.getElement());\r\n      this.tabulator.deselectRow(this.sel.id);\r\n      this.tabulator.redraw(true);\r\n    },\r\n    onEdit(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      var cells = row.getCells();\r\n      let id = row.getIndex();\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      this.sel = JSON.parse(JSON.stringify(row.getData()));\r\n      let $row = $(row.getElement());\r\n      this.tabulator.selectRow(id);\r\n      this.tabulator.redraw(true)\r\n    },\r\n    onDel(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      this.tabulatorDel(id);\r\n    },\r\n    getPageMax() {\r\n      return this.tabulator.getPageMax();\r\n    },\r\n    getLastPage(count) {\r\n      let pageSize = this.tabulator.getPageSize();\r\n      let du = count % pageSize;\r\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n    },\r\n    getPageSize() {\r\n      return this.tabulator.getPageSize();\r\n    },\r\n    getPage() {\r\n      return this.tabulator.getPage();\r\n    },\r\n    setPage(_page) {\r\n      this.tabulator.setPage(_page);\r\n    },\r\n    getData() {\r\n      return this.tabulator.getData();\r\n    },\r\n    tabulatorAdd(r) {\r\n      this.tableData.unshift(r);\r\n    },\r\n    tabulatorDel(id) {\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      this.tableData.splice(index, 1);\r\n    },\r\n    tabulatorUpdate(r) {\r\n      let index = this.tableData.findIndex(x => x.id == r.id);\r\n      this.tableData.splice(index, 1, r);\r\n    },\r\n    tabulatorGetRow(id) {\r\n      //let index=this.tabulator.getData().findIndex(x=>x.id==id);\r\n      //let r=this.tabulator.getData()[index];\r\n      //return r;\r\n    },\r\n    toast(msg, variant = null) {\r\n      this.$bvToast.toast(msg, {\r\n        title: `Information`,\r\n        variant: variant,\r\n        solid: true,\r\n      });\r\n    },\r\n    showModal() {\r\n      this.$refs['my-modal2'].show()\r\n    },\r\n    hideModal() {\r\n      this.$refs['my-modal2'].hide()\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.select2-container--default .select2-selection--single .select2-selection__arrow {\r\n  height: 15px;\r\n  position: absolute;\r\n  top: 4px;\r\n  right: 1px;\r\n  width: 20px;\r\n}\r\n\r\n.select2-container--default .select2-selection--single .select2-selection__rendered {\r\n  color: #444;\r\n  line-height: 24px;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  display: block;\r\n  height: 24px;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n}\r\n\r\n.xyz {\r\n  border: 1px solid red;\r\n}\r\n\r\n.danger,\r\n.danger .dropdown-toggle,\r\n.danger .selected-tag {\r\n  background-color: aqua;\r\n  border-radius: 4px;\r\n}\r\n\r\n.ko-hop-le {\r\n  border-radius: 4px;\r\n  background-color: aqua;\r\n}\r\n\r\n$textSize: 8.5px; //14px !default; //table text size\r\n@import \"~tabulator-tables/src/scss/tabulator.scss\";\r\n\r\n.tabulator-col-title {\r\n  text-align: center;\r\n}\r\n\r\n.tabulator .tabulator-footer .tabulator-page.active {\r\n  background-color: greenyellow !important;\r\n  color: blue !important;\r\n}\r\n\r\n.tabulator-row .tabulator-cell {\r\n  padding: 2px 4px;\r\n}\r\n\r\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\r\n  width: 24px;\r\n  height: 24px;\r\n  font-size: 10px;\r\n  line-height: 1;\r\n  margin: 0px auto;\r\n  padding: 6px 0;\r\n}\r\n\r\n.custom-control.custom-checkbox {\r\n  position: relative;\r\n  z-index: 1;\r\n  display: block;\r\n  min-height: 0.9rem;\r\n  padding-left: 1.5rem;\r\n  padding-top: 0.3rem;\r\n}\r\n\r\n.col-4 input {\r\n  margin-bottom: 1px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 0.3rem;\r\n}\r\n</style>\r\n\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueTabulatorInlineEditor2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueTabulatorInlineEditor2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VueTabulatorInlineEditor2.vue?vue&type=template&id=1c8888c8&\"\nimport script from \"./VueTabulatorInlineEditor2.vue?vue&type=script&lang=js&\"\nexport * from \"./VueTabulatorInlineEditor2.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VueTabulatorInlineEditor2.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div>\\r\\n    <raw-loader :mytxt=\\\"require('!raw-loader!./VueTabulatorInlineEditor2.vue').default\\\"></raw-loader>\\r\\n    {{ msg }}<br>\\r\\n    <!-- {{myvalid}}<br> -->\\r\\n    <!-- rowedit : {{rowedit}}<br>   -->\\r\\n    sel : {{ sel }}<br>\\r\\n    valid : {{ valid }}<br>\\r\\n    {{ tableData }}\\r\\n    <div class=\\\"mb-1\\\">\\r\\n      <button class=\\\"mr-1\\\" @click=\\\"onAdd\\\">Add</button>\\r\\n      <!-- <button class=\\\"mr-1\\\" @click=\\\"testData\\\" >Test data</button> -->\\r\\n      <!-- <button class=\\\"mr-1\\\" @click=\\\"testEdit\\\" >Test Edit</button> -->\\r\\n    </div>\\r\\n    <!-- {{tableData}} -->\\r\\n    <div ref=\\\"table\\\"></div>\\r\\n    <b-modal ref=\\\"my-modal2\\\" id=\\\"modal-1\\\" size=\\\"sm\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer title=\\\"BootstrapVue\\\">\\r\\n      <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n        <div>\\r\\n          <!-- <pre>{{r}}</pre> -->\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" disabled v-model=\\\"r.id\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Name\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input type=\\\"text\\\" v-model=\\\"r.name\\\" name=\\\"name\\\" v-validate=\\\"'required'\\\" :class=\\\"{\\r\\n                'form-control': true,\\r\\n                'ko-hop-le': errors.has('name'),\\r\\n              }\\\" autocomplete=\\\"off\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Ngay\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-datepicker v-model=\\\"r.ngay\\\" name=\\\"ngay\\\" v-validate=\\\"'required'\\\"\\r\\n                :date-format-options=\\\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\\\" locale=\\\"vi\\\" class=\\\"mb-2\\\">\\r\\n              </b-form-datepicker>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Act\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-checkbox v-model=\\\"r.act\\\" name=\\\"checkbox-1\\\" value=true unchecked-value=false @change=\\\"ChangeAct\\\">\\r\\n                Active\\r\\n              </b-form-checkbox>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Thành phố {{ errors.has('tp') }}\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select v-model=\\\"r.tp\\\" name=\\\"tp\\\" v-validate=\\\"'required'\\\" :reduce=\\\"(option) => option.id\\\" :options=\\\"tps\\\"\\r\\n                :has-error=\\\"errors.has('tp')\\\" :class=\\\"{ danger: errors.has('tp') }\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Quyền\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select multiple name=\\\"quyen\\\" v-model=\\\"r.quyen\\\" :options=\\\"['Admin', 'User', 'Editor']\\\"\\r\\n                v-validate=\\\"'required'\\\" :class=\\\"{ danger: errors.has('quyen') }\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-1 btn-sm\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </b-modal>\\r\\n  </div>\\r\\n</template>\\r\\n<script>\\r\\nimport { TabulatorFull as Tabulator } from 'tabulator-tables'; //import Tabulator library\\r\\n//import $ from \\\"jquery\\\"\\r\\nimport MyLoader from \\\"@/func/MyLoad.js\\\";\\r\\n\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n  classes: true,\\r\\n});\\r\\n\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\nimport \\\"vue-select/dist/vue-select.css\\\";\\r\\nimport moment from 'moment';\\r\\nexport default {\\r\\n  data: function () {\\r\\n    return {\\r\\n      tabulator: null, //variable to hold your table\\r\\n      tableData: [], //data for table to display\\r\\n      msg: \\\"hello world\\\",\\r\\n      count: 8,\\r\\n      r: {\\r\\n        id: 0,\\r\\n        ten: 'thuc 101',\\r\\n        ngay: new Date\\r\\n      },\\r\\n      tps: [\\r\\n        { label: 'Huế', id: 'HUE' },\\r\\n        { label: 'Sài gòn', id: 'SG' },\\r\\n        { label: 'Đà nẵng', id: 'DN' },\\r\\n        { label: 'Quảng ngãi', id: 'QN' },\\r\\n      ],\\r\\n      sel: {},\\r\\n      valid: '',\\r\\n      oldColor: '',\\r\\n\\r\\n      mons: [\\r\\n        { id: 1, name: 'Gạo' },\\r\\n        { id: 2, name: 'Đường' },\\r\\n        { id: 3, name: 'Muối' },\\r\\n        { id: 4, name: 'Bột ngọt' },\\r\\n        { id: 5, name: 'Nước ngọt' },\\r\\n        { id: 6, name: 'Cà phê' },\\r\\n        { id: 7, name: 'Bia' },\\r\\n        { id: 8, name: 'Nước mía' }\\r\\n      ]\\r\\n\\r\\n\\r\\n    }\\r\\n  },\\r\\n  mounted() {\\r\\n    if (!document.getElementById(\\\"myScript\\\")) {\\r\\n      MyLoader.loadScript(\\\"myScript\\\", \\\"/js/jquery.min.js\\\").then(() => {\\r\\n        MyLoader.loadScript(\\\"\\\", \\\"/js/bootstrap.js\\\").then(() => {\\r\\n          MyLoader.loadScript(\\\"\\\", \\\"/js/select2.min.js\\\").then(() => {\\r\\n            MyLoader.loadScript(\\\"\\\", \\\"/js/bootstrap-datepicker.js\\\").then(() => {\\r\\n              MyLoader.loadScript(\\\"\\\", \\\"/js/moment.js\\\").then(() => {\\r\\n                MyLoader.loadCss(\\\"/css/select2.min.css\\\").then(() => {\\r\\n                  MyLoader.loadCss(\\\"/css/bootstrap-datepicker.css\\\").then(() => {\\r\\n                    this.onReady();\\r\\n                  })\\r\\n                })\\r\\n              })\\r\\n            })\\r\\n          })\\r\\n        })\\r\\n      })\\r\\n    } else {\\r\\n      this.onReady();\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    onReady() {\\r\\n      this.loadTabulator();\\r\\n    },\\r\\n    loadTabulator() {\\r\\n      var that = this;\\r\\n\\r\\n      var datePickerFormatter = function (cell, formatterParams, onRendered) {\\r\\n        onRendered(function () {\\r\\n          let $cell = $(cell.getElement()).find(\\\"input\\\");\\r\\n          let editable = (that.sel.id == cell.getRow().getData().id);\\r\\n          if (editable == false) {\\r\\n            $(cell.getElement()).find(\\\"input:first\\\").prop(\\\"disabled\\\", true);\\r\\n          } else {\\r\\n          }\\r\\n          $cell.css({\\r\\n            \\\"padding\\\": \\\"4px\\\",\\r\\n            \\\"width\\\": \\\"100%\\\",\\r\\n            \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n            \\\"height\\\": \\\"100%\\\",\\r\\n            //\\\"border\\\":\\\"1px solid blue\\\",\\r\\n            //\\\"background-color\\\":\\\"yellow\\\",\\r\\n          })\\r\\n          $cell.prop(\\\"readonly\\\", true);\\r\\n          $cell.datepicker({\\r\\n            format: \\\"dd/mm/yyyy\\\",\\r\\n            todayBtn: true,\\r\\n            autoclose: true,\\r\\n            todayHighlight: true,\\r\\n          });\\r\\n          let value = moment(cell.getValue(), \\\"DD/MM/YYYY\\\").format(\\\"DD/MM/YYYY\\\");\\r\\n          $cell.datepicker(\\\"setDate\\\", value);\\r\\n          $cell.datepicker().on(\\\"changeDate\\\", function () {\\r\\n            let d = $(this).datepicker(\\\"getDate\\\");\\r\\n            cell.setValue(moment(d).format(\\\"DD/MM/YYYY\\\"));\\r\\n          });\\r\\n        });\\r\\n        var $el = $(\\\"<input class='form-control' />\\\");\\r\\n        return $el[0];\\r\\n      };\\r\\n\\r\\n      var select2Formatter = function (cell, formatterParams, onRendered) {\\r\\n        onRendered(function () {\\r\\n          let $myCell = $(cell.getElement());\\r\\n          let $cell = $(cell.getElement()).find(\\\"select\\\");\\r\\n          $cell.css({\\r\\n            \\\"padding\\\": \\\"4px\\\",\\r\\n            \\\"width\\\": \\\"100%\\\",\\r\\n            \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n            \\\"font-family\\\": \\\"\\\",\\r\\n          })\\r\\n          $cell.select2({\\r\\n            placeholder: '',\\r\\n            width: \\\"100%\\\",\\r\\n            allowClear: true,\\r\\n          });\\r\\n          $cell.focus();\\r\\n          $cell.val(cell.getValue()).trigger(\\\"change.select2\\\");\\r\\n          $(cell.getElement())\\r\\n            .find(\\\"select\\\")\\r\\n            .on(\\\"change\\\", function () {\\r\\n              cell.setValue($(this).val());\\r\\n            });\\r\\n          $myCell\\r\\n            .find(\\\".select2-container--default\\\")\\r\\n            .css(\\\"border\\\", \\\"0px solid blue\\\");\\r\\n          $myCell\\r\\n            .find(\\\".select2-selection--single\\\")\\r\\n            .css(\\\"border\\\", \\\"0px solid blue\\\");\\r\\n        });\\r\\n        var $el = $(\\\"<select class='tabu' >\\\");\\r\\n        let editable = (that.sel.id == cell.getRow().getData().id);\\r\\n        if (editable == false) {\\r\\n          $el.attr('disabled', 'disabled');\\r\\n        } else {\\r\\n        }\\r\\n        formatterParams.forEach((el) => {\\r\\n          let $option = $(\\\"<option>\\\").attr(\\\"value\\\", el.id).text(el.text);\\r\\n          $el.append($option);\\r\\n        });\\r\\n        return $el[0];\\r\\n      };\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      var roweditCheck = function (cell) {\\r\\n        let row = cell.getRow();\\r\\n        let id = row.getIndex();\\r\\n        let $cell = row.getElement();\\r\\n        if (that.sel.id == cell.getRow().getData().id) {\\r\\n          return true;\\r\\n        } else {\\r\\n          return false;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      this.tabulator = new Tabulator(this.$refs.table, {\\r\\n        //selectable:true,\\r\\n        //columnVertAlign:\\\"middle\\\",//\\\"bottom\\\",//middle\\r\\n        data: this.tableData, //link data to table\\r\\n        reactiveData: true, //enable data reactivity\\r\\n        height: $(window).innerHeight() - 400,//'200px',//$(window).innerHeight()\\r\\n        //addRowPos:\\\"top\\\",       //top,bottom//when adding a new row, add it to the top of the table\\r\\n        // columnVertAlign: \\\"middle\\\", //align header contents\\r\\n        history: true,             //allow undo and redo actions on the table\\r\\n        pagination: \\\"local\\\",       //paginate the data\\r\\n        paginationSize: 3,         //allow 7 rows per page of data\\r\\n        paginationCounter: \\\"rows\\\", //display count of paginated rows in footer\\r\\n        paginationInitialPage: 1, //optional parameter to set the initial page to load    \\r\\n        paginationSizeSelector: [5, 10, 20, 30, 50],\\r\\n        rowFormatter: function (row) {\\r\\n          let chk = that.sel.id == row.getData().id;\\r\\n          if (chk == true) {\\r\\n            //$(row.getElement()).css(\\\"background-color\\\", \\\"yellow\\\");\\r\\n          } else {\\r\\n            //$(row.getElement().child[0])\\r\\n            //.css(\\\"background-color\\\", rgb(255, 255, 255));\\r\\n            //.css(\\\"background-color\\\", \\\"blue\\\");\\r\\n            //row.getElement().childNodes[0].style.backgroundColor=\\\"silver\\\";            \\r\\n          }\\r\\n\\r\\n        },\\r\\n        //autoColumns:true,\\r\\n        columns: [\\r\\n          {\\r\\n            title: \\\"STT\\\",\\r\\n            formatter: \\\"rownum\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Cmd\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n            headerSort: false,\\r\\n            width: 100,\\r\\n            formatter: function (cell, formatterParams, onRendered) {\\r\\n              onRendered(function () {\\r\\n                $(cell.getElement()).find(\\\"#testedit\\\").on(\\\"click\\\", cell, that.onTestEdit);\\r\\n                $(cell.getElement()).find(\\\"#save\\\").on(\\\"click\\\", cell.getRow(), that.onSave);\\r\\n                $(cell.getElement()).find(\\\"#cancel\\\").on(\\\"click\\\", cell.getRow(), that.onCancel);\\r\\n                $(cell.getElement()).find(\\\"#edit\\\").on(\\\"click\\\", cell.getRow(), that.onEdit);\\r\\n                $(cell.getElement()).find(\\\"#del\\\").on(\\\"click\\\", cell.getRow(), that.onDel);\\r\\n              });\\r\\n              let $div = $(\\\"<div>\\\");\\r\\n              let $btnSave = $(\\\"<button>\\\", { text: \\\"Save\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"save\\\").hide();\\r\\n              let $btnCancel = $(\\\"<button>\\\", { text: \\\"Cancel\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"cancel\\\").hide();\\r\\n              let $btnEdit = $(\\\"<button>\\\", { text: \\\"Edit\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"edit\\\");\\r\\n              let $btnDel = $(\\\"<button>\\\", { text: \\\"Del\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"del\\\");\\r\\n              $div.append($btnSave);\\r\\n              $div.append($btnCancel);\\r\\n              $div.append($btnEdit);\\r\\n              $div.append($btnDel);\\r\\n              if (that.sel.id == cell.getRow().getData().id) {\\r\\n                $btnSave.show();\\r\\n                $btnCancel.show();\\r\\n                $btnEdit.hide();\\r\\n                $btnDel.hide();\\r\\n              } else {\\r\\n                if ($.isEmptyObject(that.sel) == true) {\\r\\n                  $btnSave.hide();\\r\\n                  $btnCancel.hide();\\r\\n                  $btnEdit.show();\\r\\n                } else {\\r\\n                  $btnEdit.attr('disabled', 'disabled');//.hide();\\r\\n                  $btnDel.attr('disabled', 'disabled');//.hide();\\r\\n                }\\r\\n              }\\r\\n              return $div[0];\\r\\n            },\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Id\\\",\\r\\n            field: \\\"id\\\",\\r\\n            width: 50,\\r\\n            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n            //headerFilter: true,\\r\\n            hozAlign: \\\"center\\\",\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Name\\\",\\r\\n            field: \\\"name\\\",\\r\\n            width: 80,\\r\\n            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n            editor: \\\"input\\\",\\r\\n            validator: [\\\"required\\\"], //\\\"required\\\"  \\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Ngày\\\",\\r\\n            field: \\\"ngay\\\",\\r\\n            width: 100,\\r\\n            hozAlign: \\\"center\\\",\\r\\n            formatter: datePickerFormatter,\\r\\n            editable: roweditCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"MonId\\\",\\r\\n            field: \\\"monid\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"left\\\",\\r\\n            width: 110,\\r\\n            validator: [\\\"required\\\"], //\\\"required\\\"  \\r\\n            formatter: select2Formatter,\\r\\n            formatterParams: [\\r\\n              { id: 1, name: 'Gạo' },\\r\\n              { id: 2, name: 'Đường' },\\r\\n              { id: 3, name: 'Muối' },\\r\\n              { id: 4, name: 'Bột ngọt' },\\r\\n              { id: 5, name: 'Nước ngọt' },\\r\\n              { id: 6, name: 'Cà phê' },\\r\\n              { id: 7, name: 'Bia' },\\r\\n              { id: 8, name: 'Nước mía' }\\r\\n            ].map((x) => ({\\r\\n              id: x.id,\\r\\n              text: `${x.id} - ${x.name}`,\\r\\n            })),\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Solg\\\",\\r\\n            field: \\\"solg\\\",\\r\\n            width: 60,\\r\\n            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n            hozAlign:\\\"right\\\",            \\r\\n            editor: \\\"input\\\",\\r\\n            validator: [\\\"required\\\",\\\"integer\\\"], //\\\"required\\\"  \\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Tien\\\",\\r\\n            field: \\\"tien\\\",\\r\\n            width: 60,\\r\\n            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n            hozAlign:\\\"right\\\",            \\r\\n            //editor: \\\"input\\\",\\r\\n            //editable: roweditCheck,//editCheck,\\r\\n            formatter: \\\"money\\\",\\r\\n            formatterParams: {\\r\\n              decimal: \\\",\\\",\\r\\n              thousand: \\\".\\\",\\r\\n              symbol: \\\"\\\", //\\\"£\\\",\\r\\n              symbolAfter: \\\"p\\\",\\r\\n              precision: false,\\r\\n            },\\r\\n\\r\\n          },\\r\\n\\r\\n        ], //define table columns\\r\\n      });\\r\\n      this.tabulator.on(\\\"dataLoaded\\\", function (data) {\\r\\n        that.onLoad();\\r\\n      });\\r\\n      this.tabulator.on(\\\"pageLoaded\\\", function (pageno) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"dataChanged\\\", function (data) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"rowClick\\\", function (e, row) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"rowSelectionChanged\\\", function (data, rows) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"rowSelected\\\", function (row) {\\r\\n        let index = row.getIndex();\\r\\n        that.msg = index;\\r\\n        console.log('rowSelected');\\r\\n      });\\r\\n      this.tabulator.on(\\\"cellEditing\\\", function (cell) {\\r\\n        let row = cell.getRow();\\r\\n        let data = row.getData();\\r\\n        let index = row.getIndex();\\r\\n      });\\r\\n      this.tabulator.on(\\\"cellEditCancelled\\\", function (cell) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"cellEdited\\\", function (cell) {\\r\\n        let row = cell.getRow();   \\r\\n        let data=row.getData();\\r\\n        let solg=data.solg;\\r\\n        let tien=solg*1000;\\r\\n        let id=row.getIndex();\\r\\n        let index=that.tableData.findIndex(x=>x.id==id);\\r\\n        that.tableData[index].tien=tien;\\r\\n        //console.log(`cell edited`);\\r\\n        //alert(cell.getField());\\r\\n        // let index=row.getIndex();\\r\\n        // //alert(JSON.stringify(data));\\r\\n        // let solg=data.solg;\\r\\n        // let dongia=data.dongia;\\r\\n        // let tien=solg*dongia;\\r\\n        //console.log(tien);\\r\\n      });\\r\\n      this.tabulator.on(\\\"validationFailed\\\", function (cell, value, validators) {\\r\\n        let field = cell.getField();\\r\\n        that.valid = field;\\r\\n      });\\r\\n    },\\r\\n    onLoad() {\\r\\n      let ar = [\\r\\n        { \\r\\n          id: 1, \\r\\n          name: \\\"thuc 101\\\", \\r\\n          ngay: new Date(), \\r\\n          monid: 1,\\r\\n          solg:10, \\r\\n          tien:1\\r\\n        },\\r\\n        { \\r\\n          id: 2, \\r\\n          name: \\\"thuc 102\\\", \\r\\n          ngay: new Date(), \\r\\n          monid: 1,\\r\\n          solg:10, \\r\\n          tien:1\\r\\n        },\\r\\n        { \\r\\n          id: 3, \\r\\n          name: \\\"thuc 103\\\", \\r\\n          ngay: new Date(), \\r\\n          monid: 1,\\r\\n          solg:10, \\r\\n          tien:1\\r\\n        },\\r\\n      ];\\r\\n      this.count = 4;\\r\\n      ar.forEach(x=>{\\r\\n        let tien=x.solg*1000;\\r\\n        x.tien=tien;\\r\\n      })\\r\\n      ar.forEach(x => {\\r\\n        this.tableData.push(x);\\r\\n      })\\r\\n    },\\r\\n    ChangeAct() {\\r\\n      let act = (this.r.act == 'true') ? true : false;\\r\\n      this.r.act = act;\\r\\n    },\\r\\n    onSave(e) {\\r\\n      if (this.valid != \\\"\\\") {\\r\\n        this.toast(\\\"không hợp lệ!!!\\\")\\r\\n        return;\\r\\n      }\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      var cells = row.getCells();\\r\\n      let id = row.getIndex();\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      let r = JSON.parse(JSON.stringify(this.tableData[index]));// this.tableData[index]\\r\\n      this.tabulator.deselectRow(this.sel.id);\\r\\n      this.sel = {};\\r\\n      this.tabulator.redraw(true);\\r\\n    },\\r\\n    onSaveModal() {\\r\\n      this.$validator.validateAll().then((result) => {\\r\\n        if (!result) {\\r\\n          this.toast(\\\"Không hợp lệ\\\");\\r\\n          return;\\r\\n        }\\r\\n        let r = JSON.parse(JSON.stringify(this.r));\\r\\n        if (r.id == 0) {\\r\\n          r.id = this.count;\\r\\n          this.tabulatorAdd(r);\\r\\n          this.count++;\\r\\n          this.setPage(1);\\r\\n        } else {\\r\\n          this.tabulatorUpdate(r);\\r\\n        }\\r\\n        this.hideModal();\\r\\n      });\\r\\n    },\\r\\n    onAdd() {\\r\\n      let r = {\\r\\n        id: this.count,\\r\\n        name: \\\"thuc 101\\\",\\r\\n      }\\r\\n      this.tabulatorAdd(r);\\r\\n      this.count++;\\r\\n      this.setPage(1);\\r\\n    },\\r\\n    onCancel(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      var cells = row.getCells();\\r\\n      let id = row.getIndex();\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      let r = JSON.parse(JSON.stringify(this.sel));\\r\\n      this.tabulatorUpdate(r);\\r\\n      this.sel = {};\\r\\n      this.valid = \\\"\\\";\\r\\n      let $row = $(row.getElement());\\r\\n      this.tabulator.deselectRow(this.sel.id);\\r\\n      this.tabulator.redraw(true);\\r\\n    },\\r\\n    onEdit(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      var cells = row.getCells();\\r\\n      let id = row.getIndex();\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      this.sel = JSON.parse(JSON.stringify(row.getData()));\\r\\n      let $row = $(row.getElement());\\r\\n      this.tabulator.selectRow(id);\\r\\n      this.tabulator.redraw(true)\\r\\n    },\\r\\n    onDel(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      let id = row.getIndex();\\r\\n      this.tabulatorDel(id);\\r\\n    },\\r\\n    getPageMax() {\\r\\n      return this.tabulator.getPageMax();\\r\\n    },\\r\\n    getLastPage(count) {\\r\\n      let pageSize = this.tabulator.getPageSize();\\r\\n      let du = count % pageSize;\\r\\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n    },\\r\\n    getPageSize() {\\r\\n      return this.tabulator.getPageSize();\\r\\n    },\\r\\n    getPage() {\\r\\n      return this.tabulator.getPage();\\r\\n    },\\r\\n    setPage(_page) {\\r\\n      this.tabulator.setPage(_page);\\r\\n    },\\r\\n    getData() {\\r\\n      return this.tabulator.getData();\\r\\n    },\\r\\n    tabulatorAdd(r) {\\r\\n      this.tableData.unshift(r);\\r\\n    },\\r\\n    tabulatorDel(id) {\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      this.tableData.splice(index, 1);\\r\\n    },\\r\\n    tabulatorUpdate(r) {\\r\\n      let index = this.tableData.findIndex(x => x.id == r.id);\\r\\n      this.tableData.splice(index, 1, r);\\r\\n    },\\r\\n    tabulatorGetRow(id) {\\r\\n      //let index=this.tabulator.getData().findIndex(x=>x.id==id);\\r\\n      //let r=this.tabulator.getData()[index];\\r\\n      //return r;\\r\\n    },\\r\\n    toast(msg, variant = null) {\\r\\n      this.$bvToast.toast(msg, {\\r\\n        title: `Information`,\\r\\n        variant: variant,\\r\\n        solid: true,\\r\\n      });\\r\\n    },\\r\\n    showModal() {\\r\\n      this.$refs['my-modal2'].show()\\r\\n    },\\r\\n    hideModal() {\\r\\n      this.$refs['my-modal2'].hide()\\r\\n    },\\r\\n  }\\r\\n}\\r\\n</script>\\r\\n<style lang=\\\"scss\\\">\\r\\n.select2-container--default .select2-selection--single .select2-selection__arrow {\\r\\n  height: 15px;\\r\\n  position: absolute;\\r\\n  top: 4px;\\r\\n  right: 1px;\\r\\n  width: 20px;\\r\\n}\\r\\n\\r\\n.select2-container--default .select2-selection--single .select2-selection__rendered {\\r\\n  color: #444;\\r\\n  line-height: 24px;\\r\\n}\\r\\n\\r\\n.select2-container .select2-selection--single {\\r\\n  box-sizing: border-box;\\r\\n  cursor: pointer;\\r\\n  display: block;\\r\\n  height: 24px;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n}\\r\\n\\r\\n.xyz {\\r\\n  border: 1px solid red;\\r\\n}\\r\\n\\r\\n.danger,\\r\\n.danger .dropdown-toggle,\\r\\n.danger .selected-tag {\\r\\n  background-color: aqua;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.ko-hop-le {\\r\\n  border-radius: 4px;\\r\\n  background-color: aqua;\\r\\n}\\r\\n\\r\\n$textSize: 8.5px; //14px !default; //table text size\\r\\n@import \\\"~tabulator-tables/src/scss/tabulator.scss\\\";\\r\\n\\r\\n.tabulator-col-title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.tabulator .tabulator-footer .tabulator-page.active {\\r\\n  background-color: greenyellow !important;\\r\\n  color: blue !important;\\r\\n}\\r\\n\\r\\n.tabulator-row .tabulator-cell {\\r\\n  padding: 2px 4px;\\r\\n}\\r\\n\\r\\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\\r\\n  width: 24px;\\r\\n  height: 24px;\\r\\n  font-size: 10px;\\r\\n  line-height: 1;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 0;\\r\\n}\\r\\n\\r\\n.custom-control.custom-checkbox {\\r\\n  position: relative;\\r\\n  z-index: 1;\\r\\n  display: block;\\r\\n  min-height: 0.9rem;\\r\\n  padding-left: 1.5rem;\\r\\n  padding-top: 0.3rem;\\r\\n}\\r\\n\\r\\n.col-4 input {\\r\\n  margin-bottom: 1px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n  margin-bottom: 0.3rem;\\r\\n}\\r\\n</style>\\r\\n\\r\\n\";","var MyLoad = {\r\n    cong(a, b) {\r\n        return a + b;\r\n    },\r\n    nhan(a, b) {\r\n        return a * b;\r\n    },\r\n    list() {\r\n        return [\r\n            { id: 1, ten: \"thuc 101\" },\r\n            { id: 2, ten: \"thuc 102\" },\r\n            { id: 3, ten: \"thuc 103\" },\r\n        ]\r\n    },\r\n    loadCss(url) {\r\n        return new Promise((resolve, reject) => {\r\n            let link = document.createElement('link');\r\n            link.type = 'text/css';\r\n            link.rel = 'stylesheet';\r\n            link.onload = resolve;\r\n            link.href = url;\r\n            let headScript = document.querySelector('script');\r\n            headScript.parentNode.insertBefore(link, headScript);\r\n        });\r\n    },\r\n    loadScript(id, url) {\r\n        return new Promise(function (resolve, reject) {\r\n            var script = document.createElement(\"script\");\r\n            script.onload = resolve;\r\n            script.onerror = reject;\r\n            script.src = url;\r\n            script.type = \"text/javascript\";\r\n            script.setAttribute('id', id);\r\n            document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n        });\r\n    },\r\n    loadMyScript(that) {\r\n        if (!document.getElementById(\"myScript\")) {\r\n            this.loadScript(\"myScript\", \"js/jquery.min.js\").then(() => {\r\n                this.loadScript(\"\", \"js/bootstrap.js\").then(() => {\r\n                    this.loadScript(\"\", \"js/select2.min.js\").then(() => {\r\n                        this.loadScript(\"\", \"js/bootstrap-datepicker.js\").then(() => {\r\n                            //this.loadScript(\"\", \"js/moment.js\").then(()=>{\r\n                                this.loadCss(\"css/select2.min.css\").then(() => {\r\n                                    this.loadCss(\"css/bootstrap-datepicker.css\").then(() => {\r\n                                        that.onReady();\r\n                                    });\r\n                                });\r\n                            //});\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        } else {\r\n            that.onReady();\r\n        }\r\n    },\r\n    /*\r\n\r\n        \r\n\r\n    */\r\n   /*\r\n    datePickerFormatter(cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n            let $cell = $(cell.getElement()).find(\"input\");\r\n            $cell.width(\"100%\");\r\n            $cell.height(\"100%\");\r\n            $cell.css(\"border\", \"0px solid blue\");\r\n            $cell.css(\"text-align\", \"center\");\r\n            $cell.prop(\"readonly\", true);\r\n            $cell.datepicker({\r\n                format: \"dd/mm/yyyy\",\r\n                //todayBtn: true,\r\n                autoclose: true,\r\n                todayHighlight: true,\r\n            });\r\n            let value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\r\n                \"DD/MM/YYYY\"\r\n            );\r\n            $cell.datepicker(\"setDate\", value);\r\n\r\n            $cell.datepicker().on(\"changeDate\", function () {\r\n                let d = $(this).datepicker(\"getDate\");\r\n                cell.setValue(moment(d).format(\"DD/MM/YYYY\"));\r\n            });\r\n        });\r\n        var $el = $(\"<input />\");\r\n        return $el[0];\r\n    },\r\n    select2Formatter(cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n            let $myCell = $(cell.getElement());\r\n            let $cell = $(cell.getElement()).find(\"select\");\r\n            $cell.select2({\r\n                //placeholder: '-- // --',\r\n                width: \"100%\",\r\n                //allowClear: true,\r\n            });\r\n            $cell.focus();\r\n            $cell.val(cell.getValue()).trigger(\"change.select2\");\r\n            $(cell.getElement())\r\n                .find(\"select\")\r\n                .on(\"change\", function () {\r\n                    cell.setValue($(this).val());\r\n                });\r\n            $myCell\r\n                .find(\".select2-container--default\")\r\n                .css(\"border\", \"0px solid blue\");\r\n            $myCell\r\n                .find(\".select2-selection--single\")\r\n                .css(\"border\", \"0px solid blue\");\r\n        });\r\n        var $el = $(\"<select class='tabu' >\");\r\n        formatterParams.forEach((el) => {\r\n            let $option = $(\"<option>\").val(el.id).text(el.text);\r\n            $el.append($option);\r\n        });\r\n        return $el[0];\r\n    },\r\n    */\r\n}\r\nexport default MyLoad\r\n//import MyLoader from \"@/func/MyLoad.js\";\r\n\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","msg","sel","valid","tableData","staticClass","on","onAdd","ref","$event","stopPropagation","preventDefault","onSaveModal","apply","arguments","directives","name","rawName","value","r","expression","domProps","target","composing","$set","class","errors","has","year","month","day","model","callback","$$v","ChangeAct","danger","option","id","tps","hideModal","staticRenderFns","Vue","classes","data","tabulator","count","ten","ngay","label","oldColor","mons","mounted","MyLoader","methods","onReady","loadTabulator","onRendered","$","$cell","format","todayBtn","autoclose","todayHighlight","cell","placeholder","width","allowClear","find","$myCell","css","$el","formatterParams","reactiveData","height","history","pagination","paginationSize","paginationCounter","paginationInitialPage","paginationSizeSelector","rowFormatter","columns","title","formatter","headerHozAlign","hozAlign","vertAlign","headerSort","text","$div","$btnSave","$btnCancel","$btnEdit","$btnDel","field","editor","validator","editable","map","x","decimal","thousand","symbol","symbolAfter","precision","that","console","onLoad","monid","solg","tien","ar","onSave","e","onCancel","onEdit","onDel","getPageMax","getLastPage","getPageSize","getPage","setPage","getData","tabulatorAdd","tabulatorDel","tabulatorUpdate","tabulatorGetRow","toast","variant","solid","showModal","component","MyLoad","cong","a","b","nhan","list","loadCss","url","Promise","resolve","reject","link","document","createElement","type","rel","onload","href","headScript","querySelector","parentNode","insertBefore","loadScript","script","onerror","src","setAttribute","getElementsByTagName","appendChild","loadMyScript","getElementById","then"],"sourceRoot":""}