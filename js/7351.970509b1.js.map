{"version":3,"file":"js/7351.970509b1.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/Konva/KonvaVueAnimate.vue?764a","webpack://vue_start_1/src/views/Konva/KonvaVueAnimate.vue","webpack://vue_start_1/./src/views/Konva/KonvaVueAnimate.vue?4c53","webpack://vue_start_1/./src/views/Konva/KonvaVueAnimate.vue?3bc4","webpack://vue_start_1/./src/views/Konva/KonvaVueAnimate.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./KonvaVueAnimate.vue').default}}),_c('h1',[_vm._v(\"This is KonvaVue\")]),_c('b-row',[_c('b-col',{staticClass:\"border-right\",attrs:{\"sm\":\"3\"}},[_c('div',{staticClass:\"mb-1\"},[_c('button',{staticClass:\"mr-1\",on:{\"click\":function($event){_vm.dx=_vm.dx-5;}}},[_vm._v(\"Giảm dx\")]),_vm._v(\" \"+_vm._s(_vm.dx)+\" \"),_c('button',{staticClass:\"mr-1\",on:{\"click\":function($event){_vm.dx=_vm.dx+5;}}},[_vm._v(\"Tăng dx\")])]),_c('div',{staticClass:\"mb-1\"},[_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onStart}},[_vm._v(\"Start\")]),_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onStop}},[_vm._v(\"Stop\")])]),_c('div',{attrs:{\"id\":\"stage-parent\"}},[_c('div',{staticClass:\"border\",attrs:{\"id\":\"container\"}},[_c('v-stage',{ref:\"stage\",attrs:{\"config\":_vm.configKonva},on:{\"click\":_vm.onStageClick,\"mousemove\":_vm.onStageMouseMove,\"mouseenter\":_vm.onStageMouseenter,\"mouseleave\":_vm.onStageMouseleave}},[_c('v-layer',{ref:\"layer\"},[_c('v-circle',{ref:\"circle\",attrs:{\"config\":{\n                      x: 100,\n                      y: 100,\n                      radius: 60,\n                      fill: 'yellow',\n                      stroke: 'black',\n                      strokeWidth: 5,\n                      draggable:true,\n                      visible:true,\n                    }}})],1)],1)],1)])]),_c('b-col',{attrs:{\"sm\":\"9\"}},[_vm._v(\" \"+_vm._s(_vm.msg)),_c('br'),_vm._v(_vm._s(_vm.hover)+\" \"),_c('div',{staticClass:\"row no-gutters border-top p-1\"},_vm._l((_vm.listData),function(x,i){return _c('div',{key:i,staticClass:\"mb-1 mr-1 col-sm-2\"},[_c('div',{class:(i==_vm.hover) ? 'border border-primary' : '',staticStyle:{\"position\":\"relative\"},on:{\"mouseover\":function($event){_vm.hover=i},\"mouseout\":function($event){_vm.hover=-1}}},[_c('img',{staticClass:\"img-thumbnail\",attrs:{\"src\":x.src},on:{\"click\":function($event){return _vm.onView(x.data)}}}),_c('button',{staticClass:\"m-1\",staticStyle:{\"position\":\"absolute\",\"bottom\":\"0\",\"right\":\"0\"},on:{\"click\":function($event){return _vm.onDelData(i)}}},[_vm._v(\"Del\")])])])}),0)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <raw-loader :mytxt=\" require('!raw-loader!./KonvaVueAnimate.vue').default \"></raw-loader> \r\n    <h1>This is KonvaVue</h1>\r\n    <b-row>\r\n      <b-col sm=\"3\" class=\"border-right\">\r\n        <div class=\"mb-1\">\r\n          <button class=\"mr-1\" @click=\" dx=dx-5; \">Giảm dx</button>\r\n          {{dx}}\r\n          <button class=\"mr-1\" @click=\" dx=dx+5; \">Tăng dx</button>\r\n        </div>\r\n        <div class=\"mb-1\">\r\n          <button class=\"mr-1\" @click=\"onStart\">Start</button>\r\n          <button class=\"mr-1\" @click=\"onStop\">Stop</button>\r\n        </div>\r\n          \r\n          <div id=\"stage-parent\">\r\n            <div id=\"container\" class=\"border\">\r\n                <v-stage ref=\"stage\"\r\n                    @click=\"onStageClick\"\r\n                    @mousemove=\"onStageMouseMove\" \r\n                    @mouseenter=\"onStageMouseenter\"\r\n                    @mouseleave=\"onStageMouseleave\"\r\n                    :config=\"configKonva\" >\r\n                    <v-layer ref=\"layer\">\r\n                      <v-circle ref=\"circle\" \r\n                      :config=\"{\r\n                        x: 100,\r\n                        y: 100,\r\n                        radius: 60,\r\n                        fill: 'yellow',\r\n                        stroke: 'black',\r\n                        strokeWidth: 5,\r\n                        draggable:true,\r\n                        visible:true,\r\n                      }\"></v-circle>\r\n                    </v-layer>\r\n                </v-stage>\r\n            </div>\r\n          </div>\r\n\r\n      </b-col>\r\n      <b-col sm=\"9\">\r\n        {{msg}}<br>{{hover}}\r\n        <div class=\"row no-gutters border-top p-1\">\r\n          <div v-for=\"(x,i) in listData\" :key=\"i\" class=\"mb-1 mr-1 col-sm-2\">\r\n            <div :class=\" (i==hover) ? 'border border-primary' : '' \" style=\"position:relative\" @mouseover=\" hover=i \" @mouseout=\" hover=-1 \" >\r\n              <img :src=\" x.src \" @click=\"onView(x.data)\" class=\"img-thumbnail\" >\r\n              <button @click=\"onDelData(i)\" class=\"m-1\" style=\"position:absolute; bottom:0; right: 0;\">Del</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n<script>\r\nvar sceneWidth = 1500;\r\nvar sceneHeight = 1000;\r\nvar stage=null;\r\nvar layer=null;\r\nexport default {\r\n  name: 'Tpl',\r\n  components: {\r\n  },\r\n  computed: {\r\n  \ttest () {\r\n    \treturn 'hello'\r\n    },\r\n  },\r\n  data(){\r\n    return{\r\n        msg:\"hello\",\r\n        configKonva: {\r\n          width: sceneWidth,\r\n          height: sceneHeight\r\n        },\r\n        configCircle: {\r\n          x: sceneWidth/2,\r\n          y: sceneHeight/2,\r\n          radius: 90,\r\n          fill: \"yellow\",\r\n          stroke: \"black\",\r\n          strokeWidth: 5,\r\n          draggable:true,\r\n          visible:false,\r\n        },\r\n        dx:10,\r\n        dy:10,\r\n        ani:null,\r\n\r\n\r\n\r\n\r\n        count:0,\r\n        p:{},\r\n\r\n\r\n\r\n        \r\n        arPoint:[],\r\n        Sel:[],\r\n        arSel:[],\r\n        unLink:false,\r\n        listData:[],\r\n        hover:-1,\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$nextTick(function(){\r\n      layer=this.$refs.layer.getNode();\r\n      stage=this.$refs.stage.getNode();\r\n      window.addEventListener(\"resize\", this.fitStageIntoParentContainer);\r\n      this.fitStageIntoParentContainer();\r\n\r\n      this.ani=this.createAnimate();\r\n      this.ani.start();\r\n    })\r\n  },\r\n  created(){\r\n  },\r\n  methods:{\r\n    onStart(){\r\n      this.ani.start();\r\n    },\r\n    onStop(){\r\n      this.ani.stop();\r\n    },\r\n    createCircle(x,y){\r\n      let circle=this.$refs.circle.getNode().clone();\r\n      circle.name('mycircle');//  mycircle\r\n      circle.fill('white');\r\n      circle.x(x);\r\n      circle.y(y);\r\n      return circle;\r\n    },\r\n    createAnimate(){\r\n      let circle=this.$refs.circle.getNode();\r\n      circle.x(sceneWidth/2);\r\n      circle.y(sceneHeight/2);\r\n      let chieuX=1;\r\n      let chieuY=1;\r\n      let that=this;\r\n      var anim = new Konva.Animation(function (frame) {\r\n        circle.x( circle.x() + chieuX*that.dx );\r\n        circle.y( circle.y() + chieuY*that.dy );\r\n        if( circle.y() > sceneHeight || circle.y() < 0 ){\r\n          chieuY = -1*chieuY;\r\n        }\r\n        if( circle.x() > sceneWidth || circle.x() < 0 ){\r\n          chieuX= -1*chieuX;\r\n        }\r\n        \r\n        let chk=false;\r\n        for(var i=0;i<that.getListCircle().length;i++){\r\n          //if(that.haveIntersection( that.getListCircle()[i].getClientRect(),circle.getClientRect() )){\r\n          if(that.haveIntersection2(that.getListCircle()[i],circle)==true){  \r\n            chk=true;\r\n            break;\r\n          }\r\n        }\r\n        if(chk==true){\r\n          chieuX=-1*chieuX;\r\n          chieuY=-1*chieuY;\r\n        }\r\n        \r\n\r\n      }, layer);\r\n      return anim;\r\n    },\r\n\r\n    haveIntersection(r1, r2) {\r\n        return !(\r\n          r2.x > r1.x + r1.width ||\r\n          r2.x + r2.width < r1.x ||\r\n          r2.y > r1.y + r1.height ||\r\n          r2.y + r2.height < r1.y\r\n        );\r\n    },    \r\n    haveIntersection2(s1, s2) {\r\n      function kc(x1,y1,x2,y2){\r\n        return Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\r\n      }\r\n      function convert(value,scale){\r\n        return Math.round(value*scale);\r\n      }\r\n      let scale=stage.scale().x;\r\n      let kq=false;\r\n      \r\n      let d=Math.floor(kc(s1.x(),s1.y(),s2.x(),s2.y()));\r\n      let r1=s1.radius();\r\n      let r2=s2.radius();\r\n      if(r1+r2 > d){\r\n        kq=true;\r\n      }\r\n      return kq;\r\n    },    \r\n    onStageClick(e){\r\n      let p=this.myGetMouse();\r\n      let circle=this.createCircle(p.x,p.y);\r\n      layer.add(circle);\r\n      this.msg={\r\n        dem:this.getListCircle().length\r\n      }\r\n    },\r\n    onStageMouseMove(e){\r\n    },\r\n    onStageMouseenter(e){\r\n    },\r\n    onStageMouseleave(e){\r\n    },\r\n    getListCircle(){ return layer.find(\".mycircle\") },\r\n    getListRect(){ return layer.find(\".myrect\") },\r\n    getListLine(){ return layer.find(\".myline\") },\r\n    getListBall(){ return layer.find(\".myball\") },\r\n    getBallById(id){ return layer.find(`#${id}`)[0] },\r\n    myGetMouse() {\r\n      let scale=stage.scale().x;\r\n      var mousePos = stage.getPointerPosition();\r\n      var x = mousePos.x;\r\n      var y = mousePos.y;\r\n      var xx = Math.round(x / scale);\r\n      var yy = Math.round(y / scale);\r\n      return { x: xx, y: yy };\r\n    },\r\n    fitStageIntoParentContainer() {\r\n      var container = document.querySelector('#stage-parent');\r\n      var containerWidth = container.offsetWidth;\r\n      var scale = containerWidth / sceneWidth;\r\n      stage.width(sceneWidth * scale);\r\n      stage.height(sceneHeight * scale);\r\n      stage.scale({ x: scale, y: scale });\r\n      this.configKonva.width = sceneWidth * scale;\r\n      this.configKonva.height = sceneHeight * scale;\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./KonvaVueAnimate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./KonvaVueAnimate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./KonvaVueAnimate.vue?vue&type=template&id=a4520b88&scoped=true&\"\nimport script from \"./KonvaVueAnimate.vue?vue&type=script&lang=js&\"\nexport * from \"./KonvaVueAnimate.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a4520b88\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div>\\r\\n    <raw-loader :mytxt=\\\" require('!raw-loader!./KonvaVueAnimate.vue').default \\\"></raw-loader> \\r\\n    <h1>This is KonvaVue</h1>\\r\\n    <b-row>\\r\\n      <b-col sm=\\\"3\\\" class=\\\"border-right\\\">\\r\\n        <div class=\\\"mb-1\\\">\\r\\n          <button class=\\\"mr-1\\\" @click=\\\" dx=dx-5; \\\">Giảm dx</button>\\r\\n          {{dx}}\\r\\n          <button class=\\\"mr-1\\\" @click=\\\" dx=dx+5; \\\">Tăng dx</button>\\r\\n        </div>\\r\\n        <div class=\\\"mb-1\\\">\\r\\n          <button class=\\\"mr-1\\\" @click=\\\"onStart\\\">Start</button>\\r\\n          <button class=\\\"mr-1\\\" @click=\\\"onStop\\\">Stop</button>\\r\\n        </div>\\r\\n          \\r\\n          <div id=\\\"stage-parent\\\">\\r\\n            <div id=\\\"container\\\" class=\\\"border\\\">\\r\\n                <v-stage ref=\\\"stage\\\"\\r\\n                    @click=\\\"onStageClick\\\"\\r\\n                    @mousemove=\\\"onStageMouseMove\\\" \\r\\n                    @mouseenter=\\\"onStageMouseenter\\\"\\r\\n                    @mouseleave=\\\"onStageMouseleave\\\"\\r\\n                    :config=\\\"configKonva\\\" >\\r\\n                    <v-layer ref=\\\"layer\\\">\\r\\n                      <v-circle ref=\\\"circle\\\" \\r\\n                      :config=\\\"{\\r\\n                        x: 100,\\r\\n                        y: 100,\\r\\n                        radius: 60,\\r\\n                        fill: 'yellow',\\r\\n                        stroke: 'black',\\r\\n                        strokeWidth: 5,\\r\\n                        draggable:true,\\r\\n                        visible:true,\\r\\n                      }\\\"></v-circle>\\r\\n                    </v-layer>\\r\\n                </v-stage>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n      </b-col>\\r\\n      <b-col sm=\\\"9\\\">\\r\\n        {{msg}}<br>{{hover}}\\r\\n        <div class=\\\"row no-gutters border-top p-1\\\">\\r\\n          <div v-for=\\\"(x,i) in listData\\\" :key=\\\"i\\\" class=\\\"mb-1 mr-1 col-sm-2\\\">\\r\\n            <div :class=\\\" (i==hover) ? 'border border-primary' : '' \\\" style=\\\"position:relative\\\" @mouseover=\\\" hover=i \\\" @mouseout=\\\" hover=-1 \\\" >\\r\\n              <img :src=\\\" x.src \\\" @click=\\\"onView(x.data)\\\" class=\\\"img-thumbnail\\\" >\\r\\n              <button @click=\\\"onDelData(i)\\\" class=\\\"m-1\\\" style=\\\"position:absolute; bottom:0; right: 0;\\\">Del</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </b-col>\\r\\n    </b-row>\\r\\n  </div>\\r\\n</template>\\r\\n<script>\\r\\nvar sceneWidth = 1500;\\r\\nvar sceneHeight = 1000;\\r\\nvar stage=null;\\r\\nvar layer=null;\\r\\nexport default {\\r\\n  name: 'Tpl',\\r\\n  components: {\\r\\n  },\\r\\n  computed: {\\r\\n  \\ttest () {\\r\\n    \\treturn 'hello'\\r\\n    },\\r\\n  },\\r\\n  data(){\\r\\n    return{\\r\\n        msg:\\\"hello\\\",\\r\\n        configKonva: {\\r\\n          width: sceneWidth,\\r\\n          height: sceneHeight\\r\\n        },\\r\\n        configCircle: {\\r\\n          x: sceneWidth/2,\\r\\n          y: sceneHeight/2,\\r\\n          radius: 90,\\r\\n          fill: \\\"yellow\\\",\\r\\n          stroke: \\\"black\\\",\\r\\n          strokeWidth: 5,\\r\\n          draggable:true,\\r\\n          visible:false,\\r\\n        },\\r\\n        dx:10,\\r\\n        dy:10,\\r\\n        ani:null,\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        count:0,\\r\\n        p:{},\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        arPoint:[],\\r\\n        Sel:[],\\r\\n        arSel:[],\\r\\n        unLink:false,\\r\\n        listData:[],\\r\\n        hover:-1,\\r\\n    }\\r\\n  },\\r\\n  mounted(){\\r\\n    this.$nextTick(function(){\\r\\n      layer=this.$refs.layer.getNode();\\r\\n      stage=this.$refs.stage.getNode();\\r\\n      window.addEventListener(\\\"resize\\\", this.fitStageIntoParentContainer);\\r\\n      this.fitStageIntoParentContainer();\\r\\n\\r\\n      this.ani=this.createAnimate();\\r\\n      this.ani.start();\\r\\n    })\\r\\n  },\\r\\n  created(){\\r\\n  },\\r\\n  methods:{\\r\\n    onStart(){\\r\\n      this.ani.start();\\r\\n    },\\r\\n    onStop(){\\r\\n      this.ani.stop();\\r\\n    },\\r\\n    createCircle(x,y){\\r\\n      let circle=this.$refs.circle.getNode().clone();\\r\\n      circle.name('mycircle');//  mycircle\\r\\n      circle.fill('white');\\r\\n      circle.x(x);\\r\\n      circle.y(y);\\r\\n      return circle;\\r\\n    },\\r\\n    createAnimate(){\\r\\n      let circle=this.$refs.circle.getNode();\\r\\n      circle.x(sceneWidth/2);\\r\\n      circle.y(sceneHeight/2);\\r\\n      let chieuX=1;\\r\\n      let chieuY=1;\\r\\n      let that=this;\\r\\n      var anim = new Konva.Animation(function (frame) {\\r\\n        circle.x( circle.x() + chieuX*that.dx );\\r\\n        circle.y( circle.y() + chieuY*that.dy );\\r\\n        if( circle.y() > sceneHeight || circle.y() < 0 ){\\r\\n          chieuY = -1*chieuY;\\r\\n        }\\r\\n        if( circle.x() > sceneWidth || circle.x() < 0 ){\\r\\n          chieuX= -1*chieuX;\\r\\n        }\\r\\n        \\r\\n        let chk=false;\\r\\n        for(var i=0;i<that.getListCircle().length;i++){\\r\\n          //if(that.haveIntersection( that.getListCircle()[i].getClientRect(),circle.getClientRect() )){\\r\\n          if(that.haveIntersection2(that.getListCircle()[i],circle)==true){  \\r\\n            chk=true;\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        if(chk==true){\\r\\n          chieuX=-1*chieuX;\\r\\n          chieuY=-1*chieuY;\\r\\n        }\\r\\n        \\r\\n\\r\\n      }, layer);\\r\\n      return anim;\\r\\n    },\\r\\n\\r\\n    haveIntersection(r1, r2) {\\r\\n        return !(\\r\\n          r2.x > r1.x + r1.width ||\\r\\n          r2.x + r2.width < r1.x ||\\r\\n          r2.y > r1.y + r1.height ||\\r\\n          r2.y + r2.height < r1.y\\r\\n        );\\r\\n    },    \\r\\n    haveIntersection2(s1, s2) {\\r\\n      function kc(x1,y1,x2,y2){\\r\\n        return Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\\r\\n      }\\r\\n      function convert(value,scale){\\r\\n        return Math.round(value*scale);\\r\\n      }\\r\\n      let scale=stage.scale().x;\\r\\n      let kq=false;\\r\\n      \\r\\n      let d=Math.floor(kc(s1.x(),s1.y(),s2.x(),s2.y()));\\r\\n      let r1=s1.radius();\\r\\n      let r2=s2.radius();\\r\\n      if(r1+r2 > d){\\r\\n        kq=true;\\r\\n      }\\r\\n      return kq;\\r\\n    },    \\r\\n    onStageClick(e){\\r\\n      let p=this.myGetMouse();\\r\\n      let circle=this.createCircle(p.x,p.y);\\r\\n      layer.add(circle);\\r\\n      this.msg={\\r\\n        dem:this.getListCircle().length\\r\\n      }\\r\\n    },\\r\\n    onStageMouseMove(e){\\r\\n    },\\r\\n    onStageMouseenter(e){\\r\\n    },\\r\\n    onStageMouseleave(e){\\r\\n    },\\r\\n    getListCircle(){ return layer.find(\\\".mycircle\\\") },\\r\\n    getListRect(){ return layer.find(\\\".myrect\\\") },\\r\\n    getListLine(){ return layer.find(\\\".myline\\\") },\\r\\n    getListBall(){ return layer.find(\\\".myball\\\") },\\r\\n    getBallById(id){ return layer.find(`#${id}`)[0] },\\r\\n    myGetMouse() {\\r\\n      let scale=stage.scale().x;\\r\\n      var mousePos = stage.getPointerPosition();\\r\\n      var x = mousePos.x;\\r\\n      var y = mousePos.y;\\r\\n      var xx = Math.round(x / scale);\\r\\n      var yy = Math.round(y / scale);\\r\\n      return { x: xx, y: yy };\\r\\n    },\\r\\n    fitStageIntoParentContainer() {\\r\\n      var container = document.querySelector('#stage-parent');\\r\\n      var containerWidth = container.offsetWidth;\\r\\n      var scale = containerWidth / sceneWidth;\\r\\n      stage.width(sceneWidth * scale);\\r\\n      stage.height(sceneHeight * scale);\\r\\n      stage.scale({ x: scale, y: scale });\\r\\n      this.configKonva.width = sceneWidth * scale;\\r\\n      this.configKonva.height = sceneHeight * scale;\\r\\n    },\\r\\n  }\\r\\n}\\r\\n</script>\\r\\n<style scoped>\\r\\n</style>\\r\\n\";"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticClass","on","$event","dx","_s","onStart","onStop","ref","configKonva","onStageClick","onStageMouseMove","onStageMouseenter","onStageMouseleave","x","y","radius","fill","stroke","strokeWidth","draggable","visible","msg","hover","_l","i","key","class","staticStyle","src","onView","data","onDelData","staticRenderFns","sceneWidth","sceneHeight","stage","name","components","computed","test","width","height","configCircle","dy","ani","count","p","arPoint","Sel","arSel","unLink","listData","mounted","layer","window","created","methods","createCircle","circle","createAnimate","chieuY","chieuX","chk","haveIntersection","r2","haveIntersection2","kq","dem","getListCircle","getListRect","getListLine","getListBall","getBallById","myGetMouse","fitStageIntoParentContainer","component"],"sourceRoot":""}