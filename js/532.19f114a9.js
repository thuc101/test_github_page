"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[532],{80532:function(e,t,n){n.r(t),n.d(t,{default:function(){return u}});var a=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"MonHocToan"},[a("raw-loader",{attrs:{mytxt:n(60599).Z}}),a("h1",[e._v("AxiosUpload page")]),a("div",[a("b-row",[a("b-col",{staticClass:"border-right",attrs:{md:"2"}},[a("form",{attrs:{enctype:"multipart/form-data"},on:{submit:function(t){return t.stopPropagation(),t.preventDefault(),e.onUpload.apply(null,arguments)}}},[a("b-img",{ref:"output",attrs:{fluid:"",alt:"Responsive image"}}),a("input",{ref:"file",staticClass:"m-1",attrs:{type:"file",id:"file"},on:{change:e.onFileChange}}),a("br"),a("div",[a("button",{staticClass:"mr-1",attrs:{type:"submit"}},[e._v("Upload")]),a("button",{staticClass:"mr-1",on:{click:e.onRemove}},[e._v("Remove")])])],1)]),a("b-col",{attrs:{md:"10"}},[a("b-row",e._l(e.ds,(function(e){return a("b-col",{key:e.imageName,staticClass:"border-right",attrs:{md:"1"}},[a("img",{attrs:{width:"100%",height:"40",fluid:"",src:"/api/FileUpload/GetImage/"+e.imageName,alt:"Image 1"}})])})),1),a("hr")],1)],1)],1)],1)},r=[],s=n(19755),o=n.n(s),i=n(9669),l=n.n(i),d={name:"Tpl",components:{},data(){return{ds:[]}},methods:{onUpload(){let e=this.$refs.file.files;if(0==e.length)return;let t=e[0];var n=new FormData;n.append("myfile",t),n.append("myName","thuc 101"),this.UploadAxios(n).then((e=>{this.ds.push(e.data.rec),o()(this.$refs.file).val(""),o()(this.$refs.output).attr("src","")}))},onFileChange(){let e=this.$refs.file.files,t=e[0];this.getReadAsDataURL(t).then((e=>{o()(this.$refs.output).attr("src",e)}))},onRemove(){o()(this.$refs.output).attr("src",""),o()(this.$refs.file).val("")},getReadAsDataURL(e){return new Promise(((t,n)=>{let a=new FileReader;a.onload=()=>{t(a.result)},a.onerror=n,a.readAsDataURL(e)}))},async UploadAxios(e){return await l().post("/api/FileUpload/UploadAxios",e).catch((e=>{console.log(e)}))}}},f=d,m=n(1001),p=(0,m.Z)(f,a,r,!1,null,null,null),u=p.exports},60599:function(e,t){t["Z"]='<template>\n  <div class="MonHocToan">\n    <raw-loader :mytxt="require(\'!raw-loader!./AxiosUpload.vue\').default"></raw-loader>\n    <h1>AxiosUpload page</h1>\n    <div>\n\n      <b-row>\n        <b-col md="2" class="border-right">\n          <form enctype="multipart/form-data" @submit.stop.prevent="onUpload">\n            <b-img ref="output" fluid alt="Responsive image"></b-img>\n            <input type="file" id="file" ref="file" class="m-1" @change="onFileChange" /><br>\n            <div>\n              <button type="submit" class="mr-1">Upload</button>\n              <button @click="onRemove" class="mr-1">Remove</button>\n            </div>\n          </form>\n        </b-col>\n        <b-col md="10">\n          <b-row>\n            <b-col md="1" v-for="x in ds" :key="x.imageName" class="border-right">\n              <img width="100%" height="40" fluid :src="`/api/FileUpload/GetImage/${x.imageName}`" alt="Image 1" />\n            </b-col>\n          </b-row>\n          <hr>\n        </b-col>\n      </b-row>\n\n    </div>\n  </div>\n</template>\n<script>\nimport $ from "jquery";\nimport axios from "axios";\nexport default {\n  name: \'Tpl\',\n  components: {\n  },\n  data() {\n    return {\n      ds: []\n    }\n  },\n  methods: {\n    onUpload() {\n      let files = this.$refs.file.files;\n      if (files.length == 0) return;\n      let file = files[0];\n      var formData = new FormData();\n      formData.append("myfile", file);\n      formData.append("myName", "thuc 101");\n      this.UploadAxios(formData).then(res => {\n        this.ds.push(res.data.rec);\n        $(this.$refs.file).val("");\n        $(this.$refs.output).attr("src", "");\n      })\n    },\n    onFileChange() {\n      let files = this.$refs.file.files;\n      let file = files[0];\n      this.getReadAsDataURL(file).then((res) => {\n        $(this.$refs.output).attr("src", res);\n      });\n    },\n    onRemove() {\n      $(this.$refs.output).attr("src", "");\n      $(this.$refs.file).val("");\n    },\n    getReadAsDataURL(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(file);\n      });\n    },\n    async UploadAxios(formData) {\n      return await axios\n        .post(`/api/FileUpload/UploadAxios`, formData)\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  }\n}\n<\/script>\n'}}]);
//# sourceMappingURL=532.19f114a9.js.map