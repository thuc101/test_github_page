{"version":3,"file":"js/390.0a127172.js","mappings":"mKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,aAAa,CAACE,MAAM,CAAC,MAAQ,cAAqDN,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,MAAML,EAAG,MAAMA,EAAG,MAAM,CAACM,YAAY,QAAQ,CAACN,EAAG,SAAS,CAACM,YAAY,OAAOC,GAAG,CAAC,MAAQX,EAAIY,QAAQ,CAACZ,EAAIO,GAAG,SAASH,EAAG,SAAS,CAACM,YAAY,OAAOC,GAAG,CAAC,MAAQX,EAAIa,WAAW,CAACb,EAAIO,GAAG,iBAAiBH,EAAG,MAAM,CAACU,IAAI,UAAUV,EAAG,UAAU,CAACU,IAAI,YAAYR,MAAM,CAAC,GAAK,UAAU,KAAO,KAAK,wBAAuB,EAAK,cAAc,GAAG,MAAQ,iBAAiB,CAACF,EAAG,OAAO,CAACO,GAAG,CAAC,OAAS,SAASI,GAAyD,OAAjDA,EAAOC,kBAAkBD,EAAOE,iBAAwBjB,EAAIkB,YAAYC,MAAM,KAAMC,cAAc,CAAChB,EAAG,MAAM,CAACA,EAAG,MAAM,CAACM,YAAY,kBAAkB,CAACN,EAAG,QAAQ,CAACM,YAAY,2BAA2B,CAACV,EAAIO,GAAG,QAAQH,EAAG,MAAM,CAACM,YAAY,YAAY,CAACN,EAAG,QAAQ,CAACiB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOxB,EAAIyB,EAAI,GAAEC,WAAW,SAAShB,YAAY,eAAeJ,MAAM,CAAC,KAAO,OAAO,SAAW,IAAIqB,SAAS,CAAC,MAAS3B,EAAIyB,EAAI,IAAGd,GAAG,CAAC,MAAQ,SAASI,GAAWA,EAAOa,OAAOC,WAAqB7B,EAAI8B,KAAK9B,EAAIyB,EAAG,KAAMV,EAAOa,OAAOJ,eAAepB,EAAG,MAAM,CAACM,YAAY,kBAAkB,CAACN,EAAG,QAAQ,CAACM,YAAY,2BAA2B,CAACV,EAAIO,GAAG,YAAYH,EAAG,MAAM,CAACM,YAAY,YAAY,CAACN,EAAG,QAAQ,CAACiB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOxB,EAAIyB,EAAM,KAAEC,WAAW,UAAU,CAACJ,KAAK,WAAWC,QAAQ,aAAaC,MAAM,WAAaE,WAAW,eAAeK,MAAM,CAC98C,gBAAgB,EAChB,YAAa/B,EAAIgC,OAAOC,IAAI,SAC9B3B,MAAM,CAAC,KAAO,OAAO,KAAO,OAAO,aAAe,OAAOqB,SAAS,CAAC,MAAS3B,EAAIyB,EAAM,MAAGd,GAAG,CAAC,MAAQ,SAASI,GAAWA,EAAOa,OAAOC,WAAqB7B,EAAI8B,KAAK9B,EAAIyB,EAAG,OAAQV,EAAOa,OAAOJ,iBAAiBpB,EAAG,MAAM,CAACM,YAAY,eAAe,CAACN,EAAG,SAAS,CAACM,YAAY,8BAA8BJ,MAAM,CAAC,KAAO,WAAW,CAACN,EAAIO,GAAG,UAAUH,EAAG,SAAS,CAACM,YAAY,aAAaJ,MAAM,CAAC,KAAO,UAAUK,GAAG,CAAC,MAAQ,SAASI,GAAQ,OAAOf,EAAIkC,eAAe,CAAClC,EAAIO,GAAG,mBAAmB,IACvf4B,EAAkB,G,qGCgDtBC,EAAAA,WAAAA,IAAQA,EAAAA,GAAa,CACrBC,SAAAA,IAIAD,EAAAA,WAAAA,UAAc,WAAYA,KAG1B,OACAE,KAAAA,WACA,OACAC,UAAAA,KACAC,UAAAA,GACAC,IAAAA,mBACAhC,IAAAA,cACAiC,MAAAA,EACAjB,EAAAA,CACAkB,GAAAA,EACAC,IAAAA,WACAC,KAAAA,IAAAA,MAEAC,IAAAA,CACA,CAAAC,MAAAA,MAAAJ,GAAAA,OACA,CAAAI,MAAAA,UAAAJ,GAAAA,MACA,CAAAI,MAAAA,UAAAJ,GAAAA,MACA,CAAAI,MAAAA,aAAAJ,GAAAA,SAIAK,UACA,WAUA,0CACAC,YAAAA,EACAC,eAAAA,SACAC,aAAAA,EACAC,QAAAA,EAAAA,IACAC,eAAAA,EACAC,WAAAA,SACAC,SAAAA,SACAC,WAAAA,CAAAC,MAAAA,UACAC,eAAAA,EACAC,sBAAAA,EACAC,uBAAAA,CAAAA,EAAAA,GAAAA,GAAAA,GAAAA,IACAC,OAAAA,GAAAA,CAAAA,QAAAA,cAAAA,IACAC,OAAAA,UACAC,eAAAA,SAAAA,EAAAA,GACAC,EAAAA,IAAAA,GAAAA,OAAAA,KAAAA,UAAAA,IAEAC,aAAAA,SAAAA,EAAAA,EAAAA,GAEA,OADAD,EAAAA,IAAAA,EACA,GAEAE,UAAAA,MACAC,SAAAA,EACAC,MAAAA,KACAC,aAAAA,EACAC,QAAAA,CACA,CACAC,MAAAA,MACAC,UAAAA,SACAC,eAAAA,SACAC,SAAAA,UAEA,CACAH,MAAAA,MACAE,eAAAA,SACAC,SAAAA,SACAC,YAAAA,EACAC,MAAAA,GACAJ,UAAAA,SAAAA,EAAAA,EAAAA,GACAK,GAAAA,WACAC,GAAAA,CAAAA,EAAAA,cAAAA,KAAAA,SAAAA,GAAAA,QAAAA,EAAAA,SAAAA,EAAAA,QACAA,GAAAA,CAAAA,EAAAA,cAAAA,KAAAA,QAAAA,GAAAA,QAAAA,EAAAA,SAAAA,EAAAA,UAEA,mBACA,kBAAAC,KAAAA,OAAAhD,MAAAA,SAAA,kBACA,kBAAAgD,KAAAA,MAAAhD,MAAAA,SAAA,iBAGA,OAFAiD,EAAAA,OAAAA,GACAA,EAAAA,OAAAA,GACA,OAGA,CACAT,MAAAA,KACAU,MAAAA,KACAL,MAAAA,GAEAF,SAAAA,UAEA,CACAH,MAAAA,OACAU,MAAAA,OACAL,MAAAA,IAEAF,SAAAA,WAIA,4CACAV,EAAAA,YAEA,gDAEA,kDAGAkB,QAAAA,CACAC,WAEAC,YACA,yBACA,cAEAvE,WACA,iCAEAK,cACA,wCACA,MAEA,YADA,2BAGA,yCACA,uBACA,gBACA,aACA,eACA,cACA,iBACA,8BAEA,aACA,cACA,iBACA,4CACA,2CAOAN,QACA,QACAyE,GAAAA,EACAC,KAAAA,YAEA,kBAEAC,OAAAA,GACAC,EAAAA,iBACA,aACA,eACA,0BACA,cACA,qBAGAC,MAAAA,GACAD,EAAAA,iBACA,aACA,eACA,sBACA,kBACA,yBACA,6BAEA,gCAGA,2BAGA,cACA,oDACAE,QAAAA,IAAAA,OAGA,aACA,qBACA,2BACAC,OAAAC,IACAF,QAAAA,IAAAA,OAGA,iBACA,4DACAA,QAAAA,IAAAA,OAGAG,aACA,oCAEAC,cACA,qCAEAC,UACA,iCAEAC,QAAAA,GACA,2BAEAC,UACA,iCAEAC,aAAAA,GACA,2BAEAC,aAAAA,GACA,6CACA,4BAEAC,gBAAAA,GACA,gDACA,8BAEAC,gBAAAA,KAKAC,MAAAA,EAAAA,EAAAA,MACA,uBACA/B,MAAAA,cACAgC,QAAAA,EACAC,OAAAA,KAGAC,YACA,gCAEAvE,YACA,kCCrSqR,I,UCQjRwE,GAAY,OACd,EACA3G,EACAoC,GACA,EACA,KACA,KACA,MAIF,EAAeuE,EAAiB,S,oBCnBhC","sources":["webpack://vue_start_1/./src/views/Tabulator/VueTabulatorAjax.vue?9023","webpack://vue_start_1/src/views/Tabulator/VueTabulatorAjax.vue","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorAjax.vue?7cbe","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorAjax.vue","webpack://vue_start_1/./src/views/Tabulator/VueTabulator.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./VueTabulator.vue').default}}),_vm._v(\" \"+_vm._s(_vm.msg)),_c('br'),_c('div',{staticClass:\"mb-1\"},[_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onAdd}},[_vm._v(\"Add\")]),_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.testData}},[_vm._v(\"Test data\")])]),_c('div',{ref:\"table\"}),_c('b-modal',{ref:\"my-modal2\",attrs:{\"id\":\"modal-1\",\"size\":\"sm\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":\"BootstrapVue\"}},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.Id),expression:\"r.Id\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"disabled\":\"\"},domProps:{\"value\":(_vm.r.Id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"Id\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Name \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.Name),expression:\"r.Name\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                  'form-control': true,\n                  'ko-hop-le': _vm.errors.has('Name'),\n              },attrs:{\"type\":\"text\",\"name\":\"Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.r.Name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"Name\", $event.target.value)}}})])])]),_c('div',{staticClass:\"float-right\"},[_c('button',{staticClass:\"btn btn-primary mr-1 btn-sm\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn btn-sm\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <raw-loader :mytxt=\" require('!raw-loader!./VueTabulator.vue').default \"></raw-loader> \r\n    {{msg}}<br>  \r\n    <div class=\"mb-1\">\r\n      <button class=\"mr-1\" @click=\"onAdd\">Add</button>\r\n      <button class=\"mr-1\" @click=\"testData\">Test data</button>\r\n    </div>\r\n    <div ref=\"table\"></div>\r\n    <b-modal ref=\"my-modal2\" id=\"modal-1\" size=\"sm\" :no-close-on-backdrop=\"true\" hide-footer title=\"BootstrapVue\">\r\n      <form @submit.stop.prevent=\"onSaveModal\">\r\n        <div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">Id</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" class=\"form-control\" disabled v-model=\"r.Id\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Name\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"r.Name\"\r\n                name=\"Name\"\r\n                v-validate=\"'required'\"                \r\n                :class=\"{\r\n                    'form-control': true,\r\n                    'ko-hop-le': errors.has('Name'),\r\n                }\"\r\n                autocomplete=\"off\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"float-right\">\r\n          <button type=\"submit\" class=\"btn btn-primary mr-1 btn-sm\">Save</button>\r\n          <button type=\"button\" class=\"btn btn-sm\" @click=\"hideModal()\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {TabulatorFull as Tabulator} from 'tabulator-tables'; //import Tabulator library\r\nimport $ from \"jquery\"\r\nimport axios from 'axios';\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n  classes: true,\r\n});\r\n\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\nimport \"vue-select/dist/vue-select.css\";\r\nimport moment from 'moment';\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      tabulator: null, //variable to hold your table\r\n      tableData: [], //data for table to display\r\n      url:'/api/Ban/GetPage',\r\n      msg:\"hello world\",\r\n      count:8,\r\n      r:{\r\n        id:0,\r\n        ten:'thuc 101',\r\n        ngay:new Date\r\n      },\r\n      tps:[\r\n        { label: 'Huế', id: 'HUE' },\r\n        { label: 'Sài gòn', id: 'SG' },\r\n        { label: 'Đà nẵng', id: 'DN' },\r\n        { label: 'Quảng ngãi', id: 'QN' },\r\n      ]\r\n    }\r\n  },\r\n  mounted(){\r\n    let that=this;\r\n\r\n    var dateFormatter = function(cell, formatterParams){\r\n      var value = cell.getValue();\r\n      if(value){\r\n        value = moment(value , \"YYYY/MM/DD\").format(\"DD/MM/YYYY\");\r\n      }\r\n      return value;\r\n    };\r\n\r\n    this.tabulator = new Tabulator(this.$refs.table, {\r\n      pagination:true, //enable pagination\r\n      paginationMode:\"remote\", //enable remote pagination\r\n      ajaxSorting:true,\r\n      ajaxURL:that.url,//\"/api/Ban/GetPage\", //set url for ajax request\r\n      ajaxFiltering:true,\r\n      filterMode:\"remote\", //send filter data to the server instead of processing locally\r\n      sortMode:\"remote\",\r\n      ajaxParams:{token:\"ABC123\"}, //set any standard parameters to pass with the request\r\n      paginationSize:2, //optional parameter to request a certain number of rows per page\r\n      paginationInitialPage:1, //optional parameter to set the initial page to load    \r\n      paginationSizeSelector: [5, 10, 20, 30, 50],\r\n      height:$(window).innerHeight()-400,//'200px',//$(window).innerHeight()\r\n      layout:\"fitData\",//layout:\"fitDataFill\",//layout:\"fitColumns\",\r\n      ajaxRequesting:function(url, params){\r\n        that.msg=`${url} - ` + JSON.stringify(params);\r\n      },\r\n      ajaxResponse:function(url, params, response){\r\n        that.msg=response;\r\n        return response;\r\n      },  \r\n      addRowPos:\"top\",       //top,bottom//when adding a new row, add it to the top of the table\r\n      history:true,             //allow undo and redo actions on the table\r\n      index:\"Id\",\r\n      autoColumns:false,\r\n      columns:[\r\n        {\r\n          title: \"STT\",\r\n          formatter: \"rownum\",\r\n          headerHozAlign: \"center\",\r\n          hozAlign: \"center\",\r\n        },\r\n        {\r\n          title: \"Cmd\",\r\n          headerHozAlign: \"center\",\r\n          hozAlign: \"center\",\r\n          headerSort: false,\r\n          width: 75,\r\n          formatter: function (cell, formatterParams, onRendered) {\r\n            onRendered(function () {\r\n              $(cell.getElement()).find(\"#edit\").on(\"click\", cell.getRow(), that.onEdit);\r\n              $(cell.getElement()).find(\"#del\").on(\"click\", cell.getRow(), that.onDel);\r\n            });\r\n            let $div = $(\"<div>\");\r\n            let $btnEdit=  $(\"<button>\", { text: \"Edit\", class: \"mr-1\" }).attr(\"id\", \"edit\");\r\n            let $btnDel=  $(\"<button>\", { text: \"Del\", class: \"mr-1\" }).attr(\"id\", \"del\");\r\n            $div.append($btnEdit);\r\n            $div.append($btnDel);\r\n            return $div[0];\r\n          },\r\n        },\r\n        {\r\n          title: \"Id\",\r\n          field: \"Id\",\r\n          width: 60,\r\n          //headerFilter: true,\r\n          hozAlign: \"center\",\r\n        },\r\n        {\r\n          title: \"Name\",\r\n          field: \"Name\",\r\n          width: 100,\r\n          //headerFilter: true,\r\n          hozAlign: \"left\",\r\n        },\r\n      ],\r\n    });\r\n    this.tabulator.on(\"dataLoaded\", function(data){\r\n      that.onLoad();\r\n    });\r\n    this.tabulator.on(\"pageLoaded\", function(pageno){\r\n    }); \r\n    this.tabulator.on(\"dataChanged\", function(data){\r\n    });\r\n  },\r\n  methods:{\r\n    onLoad(){\r\n    },\r\n    ChangeAct(){\r\n      let act=(this.r.act=='true') ? true : false;\r\n      this.r.act=act;\r\n    },\r\n    testData(){\r\n      this.setPage(this.getPageMax());\r\n    },\r\n    onSaveModal(){\r\n      this.$validator.validateAll().then((result) => {\r\n        if (!result) {\r\n          this.toast(\"Không hợp lệ\");\r\n          return;\r\n        }\r\n        let r=JSON.parse(JSON.stringify(this.r));\r\n        this.Save(r).then(res=>{\r\n          let kq=res.data.kq;\r\n          let msg=res.data.msg;\r\n          if(kq==\"updateok\"){\r\n            this.toast(msg);\r\n            this.hideModal();\r\n            this.setPage(this.getPage());\r\n          }else{\r\n            if(kq==\"addok\"){\r\n              this.toast(msg);\r\n              this.hideModal();\r\n              this.tabulator.setData(this.url).then(()=>{\r\n                this.setPage(this.getPageMax());\r\n              });\r\n            }\r\n          }\r\n        })\r\n      });\r\n    },    \r\n    onAdd(){\r\n      this.r={\r\n        Id:0,\r\n        Name:\"thuc 101\",\r\n      };\r\n      this.showModal();\r\n    },\r\n    onEdit(e){\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      this.getById(id).then(res=>{\r\n        this.r=res.data;\r\n        this.showModal();\r\n      })\r\n    },\r\n    onDel(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      this.Del(id).then((res) => {\r\n        if (res.data.kq == \"ok\") {\r\n          if (this.getData().length != 1) {\r\n            this.setPage(this.getPage());\r\n          } else {\r\n            this.setPage(this.getPage() - 1);\r\n          }\r\n        }\r\n        this.toast(res.data.msg);\r\n      });\r\n    },\r\n    async Save(r) {\r\n      return await axios.post(`/api/Ban/Save`, r).catch((err) => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    async Del(id) {\r\n      return await axios\r\n        .get(`/api/Ban/Delete?id=${id}`)\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    async getById(id) {\r\n      return await axios.get(`/api/Ban/GetById?id=${id}`).catch((err) => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    getPageMax(){\r\n      return this.tabulator.getPageMax();\r\n    },\r\n    getPageSize() {\r\n      return this.tabulator.getPageSize();\r\n    },\r\n    getPage() {\r\n      return this.tabulator.getPage();\r\n    },\r\n    setPage(_page) {\r\n      this.tabulator.setPage(_page);\r\n    },\r\n    getData() {\r\n      return this.tabulator.getData();\r\n    },\r\n    tabulatorAdd(r){\r\n      this.tableData.unshift(r);\r\n    },\r\n    tabulatorDel(id){\r\n      let index=this.tableData.findIndex(x=>x.id==id);\r\n      this.tableData.splice(index,1);      \r\n    },\r\n    tabulatorUpdate(r){\r\n      let index=this.tableData.findIndex(x=>x.id==r.id);\r\n      this.tableData.splice(index,1,r);    \r\n    },\r\n    tabulatorGetRow(id){\r\n      //let index=this.tabulator.getData().findIndex(x=>x.id==id);\r\n      //let r=this.tabulator.getData()[index];\r\n      //return r;\r\n    },\r\n    toast(msg, variant = null) {\r\n      this.$bvToast.toast(msg, {\r\n        title: `Information`,\r\n        variant: variant,\r\n        solid: true,\r\n      });\r\n    },\r\n    showModal() {\r\n        this.$refs['my-modal2'].show()\r\n    },\r\n    hideModal() {\r\n      this.$refs['my-modal2'].hide()\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n  $vs-red:red;\r\n  $vs-default:rgba(60, 60, 60, 0.26);\r\n  $vs-colors: (\r\n      lightest: $vs-default,//$vs-red, //rgba(60, 60, 60, 0.26),\r\n      light: rgba(60, 60, 60, 0.5),\r\n      dark: #333,\r\n      darkest: rgba(0, 0, 0, 0.15),\r\n  ) !default;\r\n\r\n  //  Global Component Variables\r\n  $vs-component-bg: none !default;\r\n  $vs-component-line-height: 1.8 !default;\r\n  $vs-component-placeholder-color: inherit !default;\r\n\r\n  //  Active State\r\n  $vs-state-active-bg: #5897fb !default;\r\n  $vs-state-active-color: #fff !default;\r\n\r\n  //  Deselect State\r\n  $vs-state-deselect-bg: #fb5858 !default;\r\n  $vs-state-deselect-color: #fff !default;\r\n\r\n  //  Disabled State\r\n  $vs-state-disabled-bg: rgb(248, 248, 248) !default;\r\n  $vs-state-disabled-color: map_get($vs-colors, 'light') !default;\r\n  $vs-state-disabled-controls-color: map_get($vs-colors, 'light') !default;\r\n  $vs-state-disabled-cursor: not-allowed !default;\r\n\r\n  //  Borders\r\n  $vs-border-width: 1px !default;\r\n  $vs-border-style: solid !default;\r\n  $vs-border-radius: 4px !default;\r\n  $vs-border-color: map_get($vs-colors, 'lightest') !default;\r\n\r\n  //  Component Controls: Clear, Open Indicator\r\n  $vs-controls-color: map_get($vs-colors, 'light') !default;\r\n  $vs-controls-size: 1 !default;\r\n  $vs-controls-deselect-text-shadow: 0 1px 0 #fff !default;\r\n\r\n  //  Selected\r\n  $vs-selected-bg: #f0f0f0 !default;\r\n  $vs-selected-border-color: $vs-border-color !default;\r\n  $vs-selected-border-style: $vs-border-style !default;\r\n  $vs-selected-border-width: $vs-border-width !default;\r\n\r\n  //  Dropdown\r\n  $vs-dropdown-z-index: 1000 !default;\r\n  $vs-dropdown-min-width: 160px !default;\r\n  $vs-dropdown-max-height: 350px !default;\r\n  $vs-dropdown-box-shadow: 0px 3px 6px 0px map_get($vs-colors, 'darkest') !default;\r\n  $vs-dropdown-bg: #fff !default;\r\n\r\n  @import \"vue-select/src/scss/vue-select.scss\";\r\n  .xyz{\r\n    border: 1px solid red;\r\n  }\r\n  .danger, \r\n  .danger .dropdown-toggle, \r\n  .danger .selected-tag {\r\n    background-color: aqua;\r\n    border-radius: 4px;\r\n  }\r\n  .ko-hop-le {\r\n    border-radius: 4px;\r\n    background-color: aqua;\r\n  }\r\n  $textSize: 8.5px; //14px !default; //table text size\r\n  @import \"~tabulator-tables/src/scss/tabulator.scss\";\r\n  .tabulator-col-title {\r\n    text-align: center;\r\n  }\r\n  .tabulator .tabulator-footer .tabulator-page.active {\r\n    background-color: greenyellow !important;\r\n    color: blue !important;\r\n  }\r\n  .b-calendar .b-calendar-grid-body .col[data-date] .btn {\r\n    width: 24px;\r\n    height: 24px;\r\n    font-size: 10px;\r\n    line-height: 1;\r\n    margin: 0px auto;\r\n    padding: 6px 0;\r\n  }\r\n  .custom-control.custom-checkbox {\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    min-height: 0.9rem;\r\n    padding-left: 1.5rem;\r\n    padding-top: 0.3rem;\r\n  }\r\n  .col-4 input {\r\n    margin-bottom: 1px;\r\n  }\r\n  .form-group {\r\n    margin-bottom: 0.3rem;\r\n  }\r\n  </style>\r\n\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueTabulatorAjax.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueTabulatorAjax.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VueTabulatorAjax.vue?vue&type=template&id=5f730c07&\"\nimport script from \"./VueTabulatorAjax.vue?vue&type=script&lang=js&\"\nexport * from \"./VueTabulatorAjax.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VueTabulatorAjax.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div>\\r\\n    <raw-loader :mytxt=\\\" require('!raw-loader!./VueTabulator.vue').default \\\"></raw-loader> \\r\\n    {{msg}}  \\r\\n    <div class=\\\"mb-1\\\">\\r\\n      <button class=\\\"mr-1\\\" @click=\\\"onAdd\\\">Add</button>\\r\\n      <button class=\\\"mr-1\\\" @click=\\\"testData\\\" :disabled=\\\"true\\\">Test data</button>\\r\\n    </div>\\r\\n    <!-- {{tableData}} -->\\r\\n    <div ref=\\\"table\\\"></div>\\r\\n    <b-modal ref=\\\"my-modal2\\\" id=\\\"modal-1\\\" size=\\\"sm\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer title=\\\"BootstrapVue\\\">\\r\\n      <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n        <div>\\r\\n          <!-- <pre>{{r}}</pre> -->\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" disabled v-model=\\\"r.id\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Name\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input \\r\\n                type=\\\"text\\\" \\r\\n                v-model=\\\"r.name\\\"\\r\\n                name=\\\"name\\\"\\r\\n                v-validate=\\\"'required'\\\"                \\r\\n                :class=\\\"{\\r\\n                    'form-control': true,\\r\\n                    'ko-hop-le': errors.has('name'),\\r\\n                }\\\"\\r\\n                autocomplete=\\\"off\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Ngay\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-datepicker \\r\\n                v-model=\\\"r.ngay\\\" \\r\\n                name=\\\"ngay\\\"\\r\\n                v-validate=\\\"'required'\\\"\\r\\n                :date-format-options=\\\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\\\"\\r\\n                locale=\\\"vi\\\"\\r\\n                class=\\\"mb-2\\\" >\\r\\n              </b-form-datepicker>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Act\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-checkbox\\r\\n                v-model=\\\"r.act\\\"\\r\\n                name=\\\"checkbox-1\\\"\\r\\n                value=true\\r\\n                unchecked-value=false\\r\\n                @change=\\\"ChangeAct\\\"                \\r\\n              >\\r\\n                Active\\r\\n              </b-form-checkbox>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Thành phố {{ errors.has('tp') }}\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select\\r\\n                v-model=\\\"r.tp\\\"\\r\\n                name=\\\"tp\\\"\\r\\n                v-validate=\\\"'required'\\\"\\r\\n                :reduce=\\\"(option) => option.id\\\"\\r\\n                :options=\\\"tps\\\"\\r\\n                :has-error=\\\"errors.has('tp')\\\"\\r\\n                :class=\\\"{ danger: errors.has('tp') }\\\"                \\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Quyền\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select \\r\\n                multiple\\r\\n                name=\\\"quyen\\\" \\r\\n                v-model=\\\"r.quyen\\\" \\r\\n                :options=\\\"['Admin','User','Editor']\\\" \\r\\n                v-validate=\\\"'required'\\\"\\r\\n                :class=\\\"{ danger: errors.has('quyen') }\\\"                \\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n        </div>\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-1 btn-sm\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </b-modal>\\r\\n  </div>\\r\\n</template>\\r\\n<script>\\r\\nimport {TabulatorFull as Tabulator} from 'tabulator-tables'; //import Tabulator library\\r\\nimport $ from \\\"jquery\\\"\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n  classes: true,\\r\\n});\\r\\n\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\nimport \\\"vue-select/dist/vue-select.css\\\";\\r\\nimport moment from 'moment';\\r\\nexport default {\\r\\n  data: function () {\\r\\n    return {\\r\\n      tabulator: null, //variable to hold your table\\r\\n      tableData: [], //data for table to display\\r\\n      msg:\\\"hello world\\\",\\r\\n      count:8,\\r\\n      r:{\\r\\n        id:0,\\r\\n        ten:'thuc 101',\\r\\n        ngay:new Date\\r\\n      },\\r\\n      tps:[\\r\\n        { label: 'Huế', id: 'HUE' },\\r\\n        { label: 'Sài gòn', id: 'SG' },\\r\\n        { label: 'Đà nẵng', id: 'DN' },\\r\\n        { label: 'Quảng ngãi', id: 'QN' },\\r\\n      ],\\r\\n    }\\r\\n  },\\r\\n  mounted(){\\r\\n    let that=this;\\r\\n\\r\\n    var dateFormatter = function(cell, formatterParams){\\r\\n      var value = cell.getValue();\\r\\n      if(value){\\r\\n        value = moment(value , \\\"YYYY/MM/DD\\\").format(\\\"DD/MM/YYYY\\\");\\r\\n      }\\r\\n      return value;\\r\\n    };\\r\\n\\r\\n    this.tabulator = new Tabulator(this.$refs.table, {\\r\\n      data: this.tableData, //link data to table\\r\\n      reactiveData:true, //enable data reactivity\\r\\n      height:$(window).innerHeight()-400,//'200px',//$(window).innerHeight()\\r\\n      //addRowPos:\\\"top\\\",       //top,bottom//when adding a new row, add it to the top of the table\\r\\n      // columnVertAlign: \\\"middle\\\", //align header contents\\r\\n      // cellVertAlign: \\\"middle\\\", //vertically center cell contents\\r\\n\\r\\n      history:true,             //allow undo and redo actions on the table\\r\\n      pagination:\\\"local\\\",       //paginate the data\\r\\n      paginationSize:3,         //allow 7 rows per page of data\\r\\n      paginationCounter:\\\"rows\\\", //display count of paginated rows in footer\\r\\n      paginationInitialPage:1, //optional parameter to set the initial page to load    \\r\\n      paginationSizeSelector: [5, 10, 20, 30, 50],\\r\\n      //autoColumns:true,\\r\\n      columns: [\\r\\n        {\\r\\n          title: \\\"STT\\\",\\r\\n          formatter: \\\"rownum\\\",\\r\\n          headerHozAlign: \\\"center\\\",\\r\\n          hozAlign: \\\"center\\\",\\r\\n        },\\r\\n        {\\r\\n          title: \\\"Cmd\\\",\\r\\n          headerHozAlign: \\\"center\\\",\\r\\n          hozAlign: \\\"center\\\",\\r\\n          headerSort: false,\\r\\n          width: 75,\\r\\n          formatter: function (cell, formatterParams, onRendered) {\\r\\n            onRendered(function () {\\r\\n              $(cell.getElement()).find(\\\"#edit\\\").on(\\\"click\\\", cell.getRow(), that.onEdit);\\r\\n              $(cell.getElement()).find(\\\"#del\\\").on(\\\"click\\\", cell.getRow(), that.onDel);\\r\\n            });\\r\\n            let $div = $(\\\"<div>\\\");\\r\\n            let $btnEdit=  $(\\\"<button>\\\", { text: \\\"Edit\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"edit\\\");\\r\\n            let $btnDel=  $(\\\"<button>\\\", { text: \\\"Del\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"del\\\");\\r\\n            $div.append($btnEdit);\\r\\n            $div.append($btnDel);\\r\\n            return $div[0];\\r\\n          },\\r\\n        },\\r\\n        {\\r\\n          title: \\\"Id\\\",\\r\\n          field: \\\"id\\\",\\r\\n          width: 60,\\r\\n          //headerFilter: true,\\r\\n          hozAlign: \\\"center\\\",\\r\\n        },\\r\\n        {\\r\\n          title: \\\"Name\\\",\\r\\n          field: \\\"name\\\",\\r\\n          width: 110,\\r\\n        },\\r\\n\\r\\n        {\\r\\n            title: \\\"Ngày\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            field: \\\"ngay\\\",\\r\\n            width: 100,\\r\\n            formatter:dateFormatter,\\r\\n          },\\r\\n          /*\\r\\n          Tại sao không hoạt động\\r\\n          {title:\\\"Act\\\", field:\\\"act\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            formatter:\\\"tickCross\\\", \\r\\n            formatterParams:{\\r\\n              allowEmpty:true,\\r\\n              allowTruthy:true,\\r\\n              tickElement:\\\"yes\\\",//\\\"<i class='fa fa-check'></i>\\\",\\r\\n              crossElement:\\\"no\\\"//\\\"<i class='fa fa-times'></i>\\\",\\r\\n            }\\r\\n          },\\r\\n          */\\r\\n          {title:\\\"Act\\\", field:\\\"act\\\", \\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            formatter:function(cell, formatterParams, onRendered){\\r\\n              let $chk=$(\\\"<input type='checkbox'>\\\").prop(\\\"checked\\\",cell.getValue()).attr(\\\"disabled\\\", true);\\r\\n              return $chk[0];\\r\\n            },\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Thành phố\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            field: \\\"tp\\\",\\r\\n            width: 130,\\r\\n            formatter:function(cell, formatterParams, onRendered){\\r\\n              let tp=cell.getValue();\\r\\n              let tps=that.tps;\\r\\n              let index=that.tps.findIndex(x=>x.id==tp);\\r\\n              return `${tp} - ${that.tps[index].label}`;\\r\\n            },\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Quyền\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            field: \\\"quyen\\\",\\r\\n            width: 150,\\r\\n            formatter:function(cell, formatterParams, onRendered){\\r\\n              return JSON.stringify(cell.getValue());\\r\\n            },\\r\\n          },\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      ], //define table columns\\r\\n    });\\r\\n    this.tabulator.on(\\\"dataLoaded\\\", function(data){\\r\\n      that.onLoad();\\r\\n    });\\r\\n    this.tabulator.on(\\\"pageLoaded\\\", function(pageno){\\r\\n    }); \\r\\n    this.tabulator.on(\\\"dataChanged\\\", function(data){\\r\\n    });\\r\\n  },\\r\\n  methods:{\\r\\n    onLoad(){\\r\\n      let ar=[\\r\\n        {id:1,name:\\\"thuc 101\\\",ngay:new Date(),act:true,tp:\\\"QN\\\",quyen:[] },\\r\\n        {id:2,name:\\\"thuc 102\\\",ngay:new Date(),act:false,tp:\\\"QN\\\",quyen:[] },\\r\\n      ];\\r\\n      this.count=3;\\r\\n      ar.forEach(x=>{\\r\\n        this.tableData.push(x);\\r\\n      })\\r\\n    },\\r\\n    ChangeAct(){\\r\\n      let act=(this.r.act=='true') ? true : false;\\r\\n      this.r.act=act;\\r\\n    },\\r\\n    testData(){\\r\\n    },\\r\\n    onSaveModal(){\\r\\n      this.$validator.validateAll().then((result) => {\\r\\n        if (!result) {\\r\\n          this.toast(\\\"Không hợp lệ\\\");\\r\\n          return;\\r\\n        }\\r\\n        let r=JSON.parse(JSON.stringify(this.r));\\r\\n        if(r.id==0){\\r\\n          r.id=this.count;\\r\\n          this.tabulatorAdd(r);\\r\\n          this.count++;\\r\\n          this.setPage(1);\\r\\n        }else{\\r\\n          this.tabulatorUpdate(r);\\r\\n        }\\r\\n        this.hideModal();\\r\\n      });\\r\\n    },    \\r\\n    onAdd(){\\r\\n      this.r={\\r\\n        id:0,\\r\\n        name:\\\"thuc 101\\\",\\r\\n        ngay:new Date(),\\r\\n        act:true,\\r\\n        tp:\\\"QN\\\",\\r\\n        quyen:[] \\r\\n      };\\r\\n      this.showModal();\\r\\n    },\\r\\n    onEdit(e){\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      let id = row.getIndex();\\r\\n      this.r=JSON.parse(  JSON.stringify(row.getData()) );\\r\\n      this.showModal();\\r\\n    },\\r\\n    onDel(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      let id = row.getIndex();\\r\\n      this.tabulatorDel(id);\\r\\n    },\\r\\n    getPageMax(){\\r\\n      return this.tabulator.getPageMax();\\r\\n    },\\r\\n    getLastPage(count) {\\r\\n      let pageSize = this.tabulator.getPageSize();\\r\\n      let du = count % pageSize;\\r\\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n    },\\r\\n    getPageSize() {\\r\\n      return this.tabulator.getPageSize();\\r\\n    },\\r\\n    getPage() {\\r\\n      return this.tabulator.getPage();\\r\\n    },\\r\\n    setPage(_page) {\\r\\n      this.tabulator.setPage(_page);\\r\\n    },\\r\\n    getData() {\\r\\n      return this.tabulator.getData();\\r\\n    },\\r\\n    tabulatorAdd(r){\\r\\n      this.tableData.unshift(r);\\r\\n    },\\r\\n    tabulatorDel(id){\\r\\n      let index=this.tableData.findIndex(x=>x.id==id);\\r\\n      this.tableData.splice(index,1);      \\r\\n    },\\r\\n    tabulatorUpdate(r){\\r\\n      let index=this.tableData.findIndex(x=>x.id==r.id);\\r\\n      this.tableData.splice(index,1,r);    \\r\\n    },\\r\\n    tabulatorGetRow(id){\\r\\n      //let index=this.tabulator.getData().findIndex(x=>x.id==id);\\r\\n      //let r=this.tabulator.getData()[index];\\r\\n      //return r;\\r\\n    },\\r\\n    toast(msg, variant = null) {\\r\\n      this.$bvToast.toast(msg, {\\r\\n        title: `Information`,\\r\\n        variant: variant,\\r\\n        solid: true,\\r\\n      });\\r\\n    },\\r\\n    showModal() {\\r\\n        this.$refs['my-modal2'].show()\\r\\n    },\\r\\n    hideModal() {\\r\\n      this.$refs['my-modal2'].hide()\\r\\n    },\\r\\n  }\\r\\n}\\r\\n</script>\\r\\n<style lang=\\\"scss\\\">\\r\\n\\r\\n  $vs-red:red;\\r\\n  $vs-default:rgba(60, 60, 60, 0.26);\\r\\n  $vs-colors: (\\r\\n      lightest: $vs-default,//$vs-red, //rgba(60, 60, 60, 0.26),\\r\\n      light: rgba(60, 60, 60, 0.5),\\r\\n      dark: #333,\\r\\n      darkest: rgba(0, 0, 0, 0.15),\\r\\n  ) !default;\\r\\n\\r\\n  //  Global Component Variables\\r\\n  $vs-component-bg: none !default;\\r\\n  $vs-component-line-height: 1.8 !default;\\r\\n  $vs-component-placeholder-color: inherit !default;\\r\\n\\r\\n  //  Active State\\r\\n  $vs-state-active-bg: #5897fb !default;\\r\\n  $vs-state-active-color: #fff !default;\\r\\n\\r\\n  //  Deselect State\\r\\n  $vs-state-deselect-bg: #fb5858 !default;\\r\\n  $vs-state-deselect-color: #fff !default;\\r\\n\\r\\n  //  Disabled State\\r\\n  $vs-state-disabled-bg: rgb(248, 248, 248) !default;\\r\\n  $vs-state-disabled-color: map_get($vs-colors, 'light') !default;\\r\\n  $vs-state-disabled-controls-color: map_get($vs-colors, 'light') !default;\\r\\n  $vs-state-disabled-cursor: not-allowed !default;\\r\\n\\r\\n  //  Borders\\r\\n  $vs-border-width: 1px !default;\\r\\n  $vs-border-style: solid !default;\\r\\n  $vs-border-radius: 4px !default;\\r\\n  $vs-border-color: map_get($vs-colors, 'lightest') !default;\\r\\n\\r\\n  //  Component Controls: Clear, Open Indicator\\r\\n  $vs-controls-color: map_get($vs-colors, 'light') !default;\\r\\n  $vs-controls-size: 1 !default;\\r\\n  $vs-controls-deselect-text-shadow: 0 1px 0 #fff !default;\\r\\n\\r\\n  //  Selected\\r\\n  $vs-selected-bg: #f0f0f0 !default;\\r\\n  $vs-selected-border-color: $vs-border-color !default;\\r\\n  $vs-selected-border-style: $vs-border-style !default;\\r\\n  $vs-selected-border-width: $vs-border-width !default;\\r\\n\\r\\n  //  Dropdown\\r\\n  $vs-dropdown-z-index: 1000 !default;\\r\\n  $vs-dropdown-min-width: 160px !default;\\r\\n  $vs-dropdown-max-height: 350px !default;\\r\\n  $vs-dropdown-box-shadow: 0px 3px 6px 0px map_get($vs-colors, 'darkest') !default;\\r\\n  $vs-dropdown-bg: #fff !default;\\r\\n\\r\\n  @import \\\"vue-select/src/scss/vue-select.scss\\\";\\r\\n  .xyz{\\r\\n    border: 1px solid red;\\r\\n  }\\r\\n  .danger, \\r\\n  .danger .dropdown-toggle, \\r\\n  .danger .selected-tag {\\r\\n    background-color: aqua;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  .ko-hop-le {\\r\\n    border-radius: 4px;\\r\\n    background-color: aqua;\\r\\n  }\\r\\n  $textSize: 8.5px; //14px !default; //table text size\\r\\n  @import \\\"~tabulator-tables/src/scss/tabulator.scss\\\";\\r\\n  .tabulator-col-title {\\r\\n    text-align: center;\\r\\n  }\\r\\n  .tabulator .tabulator-footer .tabulator-page.active {\\r\\n    background-color: greenyellow !important;\\r\\n    color: blue !important;\\r\\n  }\\r\\n  .b-calendar .b-calendar-grid-body .col[data-date] .btn {\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    font-size: 10px;\\r\\n    line-height: 1;\\r\\n    margin: 0px auto;\\r\\n    padding: 6px 0;\\r\\n  }\\r\\n  .custom-control.custom-checkbox {\\r\\n    position: relative;\\r\\n    z-index: 1;\\r\\n    display: block;\\r\\n    min-height: 0.9rem;\\r\\n    padding-left: 1.5rem;\\r\\n    padding-top: 0.3rem;\\r\\n  }\\r\\n  .col-4 input {\\r\\n    margin-bottom: 1px;\\r\\n  }\\r\\n  .form-group {\\r\\n    margin-bottom: 0.3rem;\\r\\n  }\\r\\n  </style>\\r\\n\\r\\n\";"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","msg","staticClass","on","onAdd","testData","ref","$event","stopPropagation","preventDefault","onSaveModal","apply","arguments","directives","name","rawName","value","r","expression","domProps","target","composing","$set","class","errors","has","hideModal","staticRenderFns","Vue","classes","data","tabulator","tableData","url","count","id","ten","ngay","tps","label","mounted","pagination","paginationMode","ajaxSorting","ajaxURL","ajaxFiltering","filterMode","sortMode","ajaxParams","token","paginationSize","paginationInitialPage","paginationSizeSelector","height","layout","ajaxRequesting","that","ajaxResponse","addRowPos","history","index","autoColumns","columns","title","formatter","headerHozAlign","hozAlign","headerSort","width","onRendered","$","text","$div","field","methods","onLoad","ChangeAct","Id","Name","onEdit","e","onDel","console","catch","err","getPageMax","getPageSize","getPage","setPage","getData","tabulatorAdd","tabulatorDel","tabulatorUpdate","tabulatorGetRow","toast","variant","solid","showModal","component"],"sourceRoot":""}