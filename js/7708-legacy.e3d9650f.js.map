{"version":3,"file":"js/7708-legacy.e3d9650f.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInline.vue?48c6","webpack://vue_start_1/src/views/Tabulator/VueTabulatorInline.vue","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInline.vue?e7f3","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInline.vue?c0db","webpack://vue_start_1/./node_modules/core-js/internals/array-for-each.js","webpack://vue_start_1/./node_modules/core-js/internals/array-method-is-strict.js","webpack://vue_start_1/./node_modules/core-js/internals/create-property.js","webpack://vue_start_1/./node_modules/core-js/modules/es.array.concat.js","webpack://vue_start_1/./node_modules/core-js/modules/es.array.find.js","webpack://vue_start_1/./node_modules/core-js/modules/es.array.map.js","webpack://vue_start_1/./node_modules/core-js/modules/es.array.splice.js","webpack://vue_start_1/./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack://vue_start_1/./src/views/Tabulator/VueTabulatorInline.vue","webpack://vue_start_1/./src/func/MyLoad.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./VueTabulatorInline.vue').default}}),_vm._v(\" \"+_vm._s(_vm.msg)),_c('br'),_vm._v(\" sel : \"+_vm._s(_vm.sel)),_c('br'),_vm._v(\" valid : \"+_vm._s(_vm.valid)),_c('br'),_vm._v(\" \"+_vm._s(_vm.tableData)+\" \"),_c('div',{staticClass:\"mb-1\"},[_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.onAdd}},[_vm._v(\"Add\")])]),_c('div',{ref:\"table\"}),_c('b-modal',{ref:\"my-modal2\",attrs:{\"id\":\"modal-1\",\"size\":\"sm\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":\"BootstrapVue\"}},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.id),expression:\"r.id\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"disabled\":\"\"},domProps:{\"value\":(_vm.r.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"id\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Name \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.name),expression:\"r.name\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n              'form-control': true,\n              'ko-hop-le': _vm.errors.has('name'),\n            },attrs:{\"type\":\"text\",\"name\":\"name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.r.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"name\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Ngay \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-datepicker',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],staticClass:\"mb-2\",attrs:{\"name\":\"ngay\",\"date-format-options\":{ year: 'numeric', month: 'numeric', day: 'numeric' },\"locale\":\"vi\"},model:{value:(_vm.r.ngay),callback:function ($$v) {_vm.$set(_vm.r, \"ngay\", $$v)},expression:\"r.ngay\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Act \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-checkbox',{attrs:{\"name\":\"checkbox-1\",\"value\":\"true\",\"unchecked-value\":\"false\"},on:{\"change\":_vm.ChangeAct},model:{value:(_vm.r.act),callback:function ($$v) {_vm.$set(_vm.r, \"act\", $$v)},expression:\"r.act\"}},[_vm._v(\" Active \")])],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Thành phố \"+_vm._s(_vm.errors.has('tp'))+\" \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('tp') },attrs:{\"name\":\"tp\",\"reduce\":function (option) { return option.id; },\"options\":_vm.tps,\"has-error\":_vm.errors.has('tp')},model:{value:(_vm.r.tp),callback:function ($$v) {_vm.$set(_vm.r, \"tp\", $$v)},expression:\"r.tp\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Quyền \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('quyen') },attrs:{\"multiple\":\"\",\"name\":\"quyen\",\"options\":['Admin', 'User', 'Editor']},model:{value:(_vm.r.quyen),callback:function ($$v) {_vm.$set(_vm.r, \"quyen\", $$v)},expression:\"r.quyen\"}})],1)])]),_c('div',{staticClass:\"float-right\"},[_c('button',{staticClass:\"btn btn-primary mr-1 btn-sm\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn btn-sm\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <raw-loader :mytxt=\"require('!raw-loader!./VueTabulatorInline.vue').default\"></raw-loader>\r\n    {{ msg }}<br>\r\n    <!-- {{myvalid}}<br> -->\r\n    <!-- rowedit : {{rowedit}}<br>   -->\r\n    sel : {{ sel }}<br>\r\n    valid : {{ valid }}<br>\r\n    {{ tableData }}\r\n    <div class=\"mb-1\">\r\n      <button class=\"mr-1\" @click=\"onAdd\">Add</button>\r\n      <!-- <button class=\"mr-1\" @click=\"testData\" >Test data</button> -->\r\n      <!-- <button class=\"mr-1\" @click=\"testEdit\" >Test Edit</button> -->\r\n    </div>\r\n    <!-- {{tableData}} -->\r\n    <div ref=\"table\"></div>\r\n    <b-modal ref=\"my-modal2\" id=\"modal-1\" size=\"sm\" :no-close-on-backdrop=\"true\" hide-footer title=\"BootstrapVue\">\r\n      <form @submit.stop.prevent=\"onSaveModal\">\r\n        <div>\r\n          <!-- <pre>{{r}}</pre> -->\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">Id</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" class=\"form-control\" disabled v-model=\"r.id\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Name\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" v-model=\"r.name\" name=\"name\" v-validate=\"'required'\" :class=\"{\r\n                'form-control': true,\r\n                'ko-hop-le': errors.has('name'),\r\n              }\" autocomplete=\"off\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Ngay\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <b-form-datepicker v-model=\"r.ngay\" name=\"ngay\" v-validate=\"'required'\"\r\n                :date-format-options=\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\" locale=\"vi\" class=\"mb-2\">\r\n              </b-form-datepicker>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Act\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <b-form-checkbox v-model=\"r.act\" name=\"checkbox-1\" value=true unchecked-value=false @change=\"ChangeAct\">\r\n                Active\r\n              </b-form-checkbox>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Thành phố {{ errors.has('tp') }}\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <v-select v-model=\"r.tp\" name=\"tp\" v-validate=\"'required'\" :reduce=\"(option) => option.id\" :options=\"tps\"\r\n                :has-error=\"errors.has('tp')\" :class=\"{ danger: errors.has('tp') }\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\">\r\n              Quyền\r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n              <v-select multiple name=\"quyen\" v-model=\"r.quyen\" :options=\"['Admin', 'User', 'Editor']\"\r\n                v-validate=\"'required'\" :class=\"{ danger: errors.has('quyen') }\" />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"float-right\">\r\n          <button type=\"submit\" class=\"btn btn-primary mr-1 btn-sm\">Save</button>\r\n          <button type=\"button\" class=\"btn btn-sm\" @click=\"hideModal()\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { TabulatorFull as Tabulator } from 'tabulator-tables'; //import Tabulator library\r\n//import $ from \"jquery\"\r\nimport MyLoader from \"@/func/MyLoad.js\";\r\n\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n  classes: true,\r\n});\r\n\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\nimport \"vue-select/dist/vue-select.css\";\r\nimport moment from 'moment';\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      tabulator: null, //variable to hold your table\r\n      tableData: [], //data for table to display\r\n      msg: \"hello world\",\r\n      count: 8,\r\n      r: {\r\n        id: 0,\r\n        ten: 'thuc 101',\r\n        ngay: new Date\r\n      },\r\n      tps: [\r\n        { label: 'Huế', id: 'HUE' },\r\n        { label: 'Sài gòn', id: 'SG' },\r\n        { label: 'Đà nẵng', id: 'DN' },\r\n        { label: 'Quảng ngãi', id: 'QN' },\r\n      ],\r\n      sel: {},\r\n      valid: '',\r\n\r\n      mons: [\r\n        { id: 1, name: 'Gạo' },\r\n        { id: 2, name: 'Đường' },\r\n        { id: 3, name: 'Muối' },\r\n        { id: 4, name: 'Bột ngọt' },\r\n        { id: 5, name: 'Nước ngọt' },\r\n        { id: 6, name: 'Cà phê' },\r\n        { id: 7, name: 'Bia' },\r\n        { id: 8, name: 'Nước mía' }\r\n      ]\r\n\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n\r\n    if (!document.getElementById(\"myScript\")) {\r\n      MyLoader.loadScript(\"myScript\", \"/js/jquery.min.js\").then(() => {\r\n        MyLoader.loadScript(\"\", \"/js/bootstrap.js\").then(() => {\r\n          MyLoader.loadScript(\"\", \"/js/select2.min.js\").then(() => {\r\n            MyLoader.loadScript(\"\", \"/js/bootstrap-datepicker.js\").then(() => {\r\n              MyLoader.loadScript(\"\", \"/js/moment.js\").then(() => {\r\n                MyLoader.loadCss(\"/css/select2.min.css\").then(() => {\r\n                  MyLoader.loadCss(\"/css/bootstrap-datepicker.css\").then(() => {\r\n                    this.onReady();\r\n                  })\r\n                })\r\n              })\r\n            })\r\n          })\r\n        })\r\n      })\r\n    } else {\r\n      this.onReady();\r\n    }\r\n  },\r\n  methods: {\r\n    onReady() {\r\n      this.loadTabulator();\r\n    },\r\n    loadTabulator() {\r\n\r\n      var that = this;\r\n\r\n\r\n      var dateEditor = function (cell, onRendered, success, cancel, editorParams) {\r\n        var editor = document.createElement(\"input\");\r\n        editor.setAttribute(\"type\", \"date\");\r\n        editor.style.padding = \"3px\";\r\n        editor.style.width = \"100%\";\r\n        editor.style.boxSizing = \"border-box\";\r\n        editor.value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\"YYYY-MM-DD\")\r\n        onRendered(function () {\r\n          editor.focus();\r\n          editor.style.css = \"100%\";\r\n        });\r\n        function successFunc() {\r\n          success(moment(editor.value, \"YYYY-MM-DD\").format(\"DD/MM/YYYY\"));\r\n        }\r\n        editor.addEventListener(\"change\", successFunc);\r\n        editor.addEventListener(\"blur\", successFunc);\r\n        return editor;\r\n      };\r\n      //in your column definition for the column\r\n      //{title:\"Birthday\", field:\"dob\", editor:dateEditor}}\r\n\r\n      var editor_select = function (cell, onRendered, success, cancel, editorParams) {\r\n        var editor = $(\"<select><select/>\");\r\n        var selectedLabel = cell.getValue();\r\n\r\n        function optionAppend(element, label, value, disabled) {\r\n          var option = $(\"<option></option>\").attr(\"value\", value).text(label);\r\n          element.append(option);\r\n        }\r\n        var key;\r\n        for (key in editorParams) {\r\n          var editorParam = editorParams[key];\r\n          if (typeof editorParam.value != \"undefined\") {\r\n            optionAppend(editor, editorParam.text, editorParam.value);\r\n          }\r\n        }\r\n\r\n        editor.css({\r\n          \"padding\": \"4px\",\r\n          \"width\": \"100%\",\r\n          \"box-sizing\": \"border-box\",\r\n          \"height\": \"100%\",\r\n        }).val(cell.getValue());\r\n\r\n        var selectedValue = \"\";\r\n        for (var key in editorParams) {\r\n          var editorParam = editorParams[key];\r\n          if (editorParam.text == selectedLabel) {\r\n            selectedValue = editorParam.value;\r\n          }\r\n        }\r\n\r\n        onRendered(function () {\r\n          editor.focus();\r\n          editor.val(selectedValue);\r\n        });\r\n\r\n\r\n        editor.on(\"change blur\", function (e) {\r\n          var value = editor.val();\r\n          success(value);\r\n        });\r\n        editor.on(\"keydown\", function (e) {\r\n          if (e.keyCode === 13) {\r\n            success(select.val());\r\n          }\r\n        });\r\n        //return the editor element\r\n        return editor;\r\n      };\r\n\r\n      var list = [\r\n        { id: 1, text: 'thuc 1' },\r\n        { id: 2, text: 'thuc 2' },\r\n        { id: 3, text: 'thuc 3' },\r\n        { id: 4, text: 'thuc 4' },\r\n        { id: 5, text: 'thuc 5' }\r\n      ];\r\n      //create custom editor\r\n      var select2Editor = function (cell, onRendered, success, cancel, editorParams) {\r\n\r\n        //create input element to hold select\r\n        var editor = document.createElement(\"select\");\r\n\r\n        onRendered(function () {\r\n          var select_2 = $(editor);\r\n\r\n\r\n          // $(\".js-example-data-array\").select2({\r\n          //   data: data\r\n          // })                  \r\n\r\n          select_2.select2({\r\n            theme: \"classic\",\r\n            placeholder: 'Select',\r\n            data: list,\r\n            minimumResultsForSearch: Infinity,\r\n            width: 300,\r\n            minimumInputLength: 0,\r\n            allowClear: true,\r\n          });\r\n\r\n          select_2.on('change', function (e) {\r\n            success(select_2.val());\r\n          });\r\n\r\n\r\n          select_2.on('blur', function (e) {\r\n            cancel();\r\n          });\r\n        });\r\n\r\n\r\n        //add editor to cell\r\n        return editor;\r\n      }\r\n\r\n\r\n\r\n      var cboData = [\r\n        {\r\n          \"key\": \"hue\",\r\n          \"name\": \"Huế\"\r\n        },\r\n        {\r\n          \"key\": \"sg\",\r\n          \"name\": \"Sài gòn\"\r\n        },\r\n        {\r\n          \"key\": \"hn\",\r\n          \"name\": \"Hà nội\"\r\n        }\r\n      ];\r\n      var comboEditor = function (cell, onRendered, success, cancel, editorParams) {\r\n        var editor = document.createElement(\"select\");\r\n        for (var i = 0; i < editorParams.length; i++) {\r\n          var opt = document.createElement('option');\r\n          opt.value = editorParams[i].key;\r\n          opt.innerHTML = editorParams[i].name;\r\n          editor.appendChild(opt);\r\n        }\r\n\r\n        editor.style.padding = \"3px\";\r\n        editor.style.width = \"100%\";\r\n        editor.style.boxSizing = \"border-box\";\r\n\r\n        editor.value = cell.getValue();\r\n\r\n        onRendered(function () {\r\n          editor.focus();\r\n          editor.style.css = \"100%\";\r\n        });\r\n\r\n        function successFunc() {\r\n          console.log('successFunc');\r\n          success(editor.value);\r\n        }\r\n\r\n        editor.addEventListener(\"change\", successFunc);\r\n        editor.addEventListener(\"blur\", successFunc);\r\n\r\n        return editor;\r\n      };\r\n\r\n\r\n      var select21Editor = function (cell, onRendered, success, cancel, editorParams) {\r\n        var editor = document.createElement(\"select\");\r\n        editor.style.padding = \"3px\";\r\n        editor.style.width = \"100%\";\r\n        editor.style.boxSizing = \"border-box\";\r\n        onRendered(function () {\r\n          var select_2 = $(editor);\r\n          select_2.select2({\r\n            theme: \"classic\",\r\n            // placeholder: 'Select',\r\n            data: list,\r\n            // minimumResultsForSearch: Infinity,\r\n            width: 100,\r\n            // minimumInputLength: 0,\r\n            // allowClear: true,\r\n          });\r\n\r\n          select_2.on('change', function (e) {\r\n            console.log('success');\r\n            success(select_2.val());\r\n          });\r\n\r\n\r\n          select_2.on('blur', function (e) {\r\n            cancel();\r\n          });\r\n        });\r\n        return editor;\r\n      };\r\n      //{title: \"Select2\", field: \"lucky_no\", align: \"center\", width: 300, editor: select2Editor},          \r\n\r\n\r\n\r\n\r\n\r\n      var datePickerFormatter = function (cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n          let $cell = $(cell.getElement()).find(\"input\");\r\n          $cell.width(\"80%\");\r\n          //$cell.height(\"50%\");\r\n          $cell.css(\"border\", \"0px solid blue\");\r\n          $cell.css(\"text-align\", \"center\");\r\n          $cell.prop(\"readonly\", true);\r\n          $cell.datepicker({\r\n            format: \"dd/mm/yyyy\",\r\n            todayBtn: true,\r\n            autoclose: true,\r\n            todayHighlight: true,\r\n          });\r\n          //alert(cell.getValue());\r\n          let value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\r\n            \"DD/MM/YYYY\"\r\n          );\r\n          $cell.datepicker(\"setDate\", value);\r\n\r\n\r\n          $cell.datepicker().on(\"changeDate\", function () {\r\n            let d = $(this).datepicker(\"getDate\");\r\n            cell.setValue(moment(d).format(\"DD/MM/YYYY\"));\r\n          });\r\n        });\r\n        var $el = $(\"<input />\");\r\n        return $el[0];\r\n      };\r\n      var dateFormatter = function (cell, formatterParams) {\r\n        var value = cell.getValue();\r\n        if (value) {\r\n          value = moment(value, \"YYYY/MM/DD\").format(\"DD/MM/YYYY\");\r\n        }\r\n        return value;\r\n      };\r\n\r\n      var select2Formatter = function (cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n          let $myCell = $(cell.getElement());\r\n          let $cell = $(cell.getElement()).find(\"select\");\r\n          $cell.css({\r\n            \"padding\": \"4px\",\r\n            \"width\": \"100%\",\r\n            \"box-sizing\": \"border-box\",\r\n            \"font-family\": \"\",\r\n          })\r\n          $cell.select2({\r\n            //placeholder: '-- // --',\r\n            width: \"100%\",\r\n            //allowClear: true,\r\n          });\r\n          $cell.focus();\r\n          $cell.val(cell.getValue()).trigger(\"change.select2\");\r\n          $(cell.getElement())\r\n            .find(\"select\")\r\n            .on(\"change\", function () {\r\n              cell.setValue($(this).val());\r\n            });\r\n          $myCell\r\n            .find(\".select2-container--default\")\r\n            .css(\"border\", \"0px solid blue\");\r\n          $myCell\r\n            .find(\".select2-selection--single\")\r\n            .css(\"border\", \"0px solid blue\");\r\n        });\r\n        var $el = $(\"<select class='tabu' >\");\r\n        formatterParams.forEach((el) => {\r\n          let $option = $(\"<option>\").val(el.id).text(el.text);\r\n          $el.append($option);\r\n        });\r\n        return $el[0];\r\n      };\r\n\r\n\r\n      // create custom formatter\r\n      var selectFormatter = function (cell, formatterParams) {\r\n        //create and style select\r\n        var select = $(\"<select><select/>\");\r\n\r\n        //add options elements\r\n        formatterParams.forEach(function (item) {\r\n          select.append($(\"<option></option>\").attr(\"value\", item).text(item));\r\n        });\r\n\r\n        //define styling\r\n        select.css({\r\n          \"padding\": \"4px\",\r\n          \"width\": \"100%\",\r\n          \"box-sizing\": \"border-box\",\r\n          \"font-family\": \"\",\r\n        })\r\n\r\n          //set cell value\r\n          .val(cell.getValue())\r\n\r\n\r\n        //submit new value on blur\r\n        select.on(\"change blur\", function (e) {\r\n          cell.setValue(select.val());\r\n        });\r\n\r\n        //submit new value on enter\r\n        select.on(\"keydown\", function (e) {\r\n          if (e.keyCode === 13) {\r\n            cell.setValue(select.val());\r\n          }\r\n        });\r\n\r\n        return select;\r\n      }\r\n      //in column definition assign formatter and define options \r\n      //{title:\"Gender\", field:\"gender\", formatter:selectFormatter, formatterParams:[\"male\", \"female\"]}\r\n\r\n      /*\r\n      function globalCellClick(e, cell) {\r\n          console.log('Inside cell select'); // works now, so function is being reached\r\n          var mycell = cell.getElement();\r\n          console.log('Cell: ' , mycell); // works\r\n          var cellf = mycell.attr('tabulator-field');\r\n          console.log('Selected cell field: ' + cellf); // works\r\n          var celledit = mycell.getColumn().getDefinition().editable; // check if cell is editable\r\n          console.log('Editable cell: ' + celledit); // **(BROKEN): mycell.getColumn() is undefined**\r\n          var  celltxt = mycell.getValue();\r\n          console.log('Selected cell text: ' + celltxt); // **(BROKEN): mycell.getValue() is undefined**\r\n      }*/\r\n\r\n      var roweditCheck = function (cell) {\r\n        //cell - the cell component for the editable cell\r\n        //get row data\r\n        //var data = cell.getRow().getData();\r\n        //return data.age > 18; // only allow the name cell to be edited if the age is over 18\r\n        let row = cell.getRow();\r\n        let id = row.getIndex();\r\n        let $cell = row.getElement();\r\n        //var editFunc = cell.getColumn().getDefinition().editable; \r\n        //var isEditable = cell.getRow().getElement().classList.contains('isEditable');\r\n        //console.log(isEditable);\r\n        //console.log(editFunc);           \r\n        //alert( JSON.stringify (cell.getRow().getData()));\r\n        //console.log($cell.html());\r\n        //row.getElement().style.backgroundColor = \"#1e3b20\";\r\n        //$(row.getElement()).css(\"backgroundColor\",'yellow');\r\n        //console.log($(row.getElement()).text());\r\n        //let sel=cell.getRow().isSelected();\r\n        //console.log(sel);\r\n        if (that.sel.id == cell.getRow().getData().id) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      this.tabulator = new Tabulator(this.$refs.table, {\r\n        //selectable:true,\r\n        data: this.tableData, //link data to table\r\n        reactiveData: true, //enable data reactivity\r\n        height: $(window).innerHeight() - 400,//'200px',//$(window).innerHeight()\r\n        //addRowPos:\"top\",       //top,bottom//when adding a new row, add it to the top of the table\r\n        // columnVertAlign: \"middle\", //align header contents\r\n        // cellVertAlign: \"middle\", //vertically center cell contents\r\n        history: true,             //allow undo and redo actions on the table\r\n        pagination: \"local\",       //paginate the data\r\n        paginationSize: 3,         //allow 7 rows per page of data\r\n        paginationCounter: \"rows\", //display count of paginated rows in footer\r\n        paginationInitialPage: 1, //optional parameter to set the initial page to load    \r\n        paginationSizeSelector: [5, 10, 20, 30, 50],\r\n        rowFormatter: function (row) {\r\n          //console.log('rowformater')\r\n          console.log($(row.getElement()).html());\r\n        },\r\n        //autoColumns:true,\r\n        columns: [\r\n          {\r\n            title: \"STT\",\r\n            formatter: \"rownum\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n          },\r\n          {\r\n            title: \"Cmd\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            headerSort: false,\r\n            width: 100,\r\n            formatter: function (cell, formatterParams, onRendered) {\r\n              onRendered(function () {\r\n                $(cell.getElement()).find(\"#testedit\").on(\"click\", cell, that.onTestEdit);\r\n                $(cell.getElement()).find(\"#save\").on(\"click\", cell.getRow(), that.onSave);\r\n                $(cell.getElement()).find(\"#cancel\").on(\"click\", cell.getRow(), that.onCancel);\r\n                $(cell.getElement()).find(\"#edit\").on(\"click\", cell.getRow(), that.onEdit);\r\n                $(cell.getElement()).find(\"#del\").on(\"click\", cell.getRow(), that.onDel);\r\n              });\r\n              let $div = $(\"<div>\");\r\n              //let $btnTestEdit=  $(\"<button>\", { text: \"Test edit\", class: \"mr-1\" }).attr(\"id\", \"testedit\");\r\n              let $btnSave = $(\"<button>\", { text: \"Save\", class: \"mr-1\" }).attr(\"id\", \"save\").hide();\r\n              let $btnCancel = $(\"<button>\", { text: \"Cancel\", class: \"mr-1\" }).attr(\"id\", \"cancel\").hide();\r\n              let $btnEdit = $(\"<button>\", { text: \"Edit\", class: \"mr-1\" }).attr(\"id\", \"edit\");\r\n              let $btnDel = $(\"<button>\", { text: \"Del\", class: \"mr-1\" }).attr(\"id\", \"del\");\r\n              $div.append($btnSave);\r\n              $div.append($btnCancel);\r\n              $div.append($btnEdit);\r\n              $div.append($btnDel);\r\n              if (that.sel.id == cell.getRow().getData().id) {\r\n                $btnSave.show();\r\n                $btnCancel.show();\r\n                $btnEdit.hide();\r\n                $btnDel.hide();\r\n              } else {\r\n                // $btnSave.hide();\r\n                // $btnCancel.hide();\r\n                // $btnEdit.show();\r\n                if ($.isEmptyObject(that.sel) == true) {\r\n                  $btnSave.hide();\r\n                  $btnCancel.hide();\r\n                  $btnEdit.show();\r\n                } else {\r\n                  $btnEdit.attr('disabled', 'disabled');//.hide();\r\n                  $btnDel.attr('disabled', 'disabled');//.hide();\r\n                }\r\n              }\r\n              return $div[0];\r\n            },\r\n          },\r\n          {\r\n            title: \"Id\",\r\n            field: \"id\",\r\n            width: 50,\r\n            //headerFilter: true,\r\n            hozAlign: \"center\",\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            width: 80,\r\n            editor: \"input\",\r\n            validator: [\"required\"], //\"required\"  \r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"SoLg\",\r\n            field: \"solg\",\r\n            width: 50,\r\n            editor: \"input\",\r\n            validator: [\"required\", \"integer\"], //\"required\"          \r\n            hozAlign: \"right\",\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"DonGia\",\r\n            field: \"dongia\",\r\n            width: 50,\r\n            editor: \"input\",\r\n            validator: [\"required\", \"integer\"], //\"required\"          \r\n            hozAlign: \"right\",\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"Tien\",\r\n            field: \"tien\",\r\n            width: 50,\r\n            editor: \"input\",\r\n            validator: [\"required\", \"integer\"], //\"required\"          \r\n            hozAlign: \"right\",\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"Ngày\",\r\n            field: \"ngay\",\r\n            sorter: \"string\",\r\n            //headerFilter: true,\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"center\",\r\n            width: 100,\r\n            //editable: true,\r\n            //editor: dateEditor,\r\n            editor: dateEditor,\r\n            validator: \"required\",\r\n            //formatter: datePickerFormatter,\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"MonId\",\r\n            field: \"monid\",\r\n            hozAlign: \"center\",\r\n            width: 100,\r\n            editor: select2Editor,\r\n            editorParams: [\r\n              { \"value\": \"1\", \"text\": \"\" },\r\n              { \"value\": \"2\", \"text\": \"Grammes\" },\r\n              { \"value\": \"3\", \"text\": \"Kilogrammes\" },\r\n              { \"value\": \"4\", \"text\": \"Livres\" },\r\n              { \"value\": \"5\", \"text\": \"Milligrammes\" },\r\n              { \"value\": \"6\", \"text\": \"Once\" }\r\n            ],\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"Monid2\",\r\n            field: \"monid\",\r\n            align: \"center\",\r\n            width: 100,\r\n            editor: select21Editor,//select2Editor,\r\n            formatterParams: this.mons.map((x) => ({\r\n              id: x.id,\r\n              text: `${x.id} - ${x.name}`,\r\n            })),\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n          {\r\n            title: \"MonId3\",\r\n            field: \"monid\",\r\n            headerHozAlign: \"center\",\r\n            hozAlign: \"left\",\r\n            width: 100,\r\n            //editor:\"input\",\r\n            formatter: select2Formatter,\r\n            formatterParams: this.mons.map((x) => ({\r\n              id: x.id,\r\n              text: `${x.id} - ${x.name}`,\r\n            })),\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n\r\n          {\r\n            title: \"MonId4\",\r\n            field: \"monid\",\r\n            align: \"center\",\r\n            width: 100,\r\n            //editor: true,\r\n            formatter: function (cell, formatterParams, onRendered) {\r\n              onRendered(function () {\r\n                var select_2 = $(cell.getElement());\r\n\r\n                select_2.select2({\r\n                  //theme: \"classic\",\r\n                  //placeholder: 'Select',\r\n                  data: [\r\n                    { id: 1, text: 'thuc 101' },\r\n                    { id: 2, text: 'thuc 102' }\r\n                  ],\r\n                  //minimumResultsForSearch: Infinity,\r\n                  width: 100,\r\n                  //minimumInputLength: 0,\r\n                  allowClear: true,\r\n                }).on('change', function (e) {\r\n                  console.log('change');\r\n                });\r\n\r\n                select_2.val(list[cell.getValue()].id);\r\n                var x = select_2.val();\r\n                select_2.val(x).trigger('change.select2');\r\n              })\r\n            },\r\n            editable: roweditCheck,//editCheck,\r\n\r\n          },\r\n          {\r\n            title: \"Tp\",\r\n            field: 'tp',\r\n            width: 100,\r\n            headerHozAlign: 'center',\r\n            hozAlign: 'center',\r\n            editor: comboEditor,\r\n            editorParams: cboData,\r\n            formatter: function (cell, formatterParams) {\r\n              for (var i = 0; i < formatterParams.length; i++) {\r\n                if (formatterParams[i].key == cell.getValue()) {\r\n                  return formatterParams[i].name;\r\n                }\r\n              }\r\n            },\r\n            formatterParams: cboData,\r\n            editable: roweditCheck,//editCheck,\r\n          },\r\n        ], //define table columns\r\n      });\r\n      this.tabulator.on(\"dataLoaded\", function (data) {\r\n        that.onLoad();\r\n      });\r\n      this.tabulator.on(\"pageLoaded\", function (pageno) {\r\n      });\r\n      this.tabulator.on(\"dataChanged\", function (data) {\r\n      });\r\n      this.tabulator.on(\"rowClick\", function (e, row) {\r\n      });\r\n      this.tabulator.on(\"rowSelectionChanged\", function (data, rows) {\r\n      });\r\n      this.tabulator.on(\"rowSelected\", function (row) {\r\n        let index = row.getIndex();\r\n        that.msg = index;\r\n        console.log('rowSelected');\r\n      });\r\n      this.tabulator.on(\"cellEditing\", function (cell) {\r\n        let row = cell.getRow();\r\n        let data = row.getData();\r\n        let index = row.getIndex();\r\n        //that.tabulator.deselectRow();\r\n        //that.tabulator.selectRow(index);  \r\n        //console.log(`cellediting - ${index}`);\r\n      });\r\n      this.tabulator.on(\"cellEditCancelled\", function (cell) {\r\n      });\r\n      this.tabulator.on(\"cellEdited\", function (cell) {\r\n        //console.log(`cell edited`);\r\n        let row = cell.getRow();\r\n        let data = row.getData();\r\n        let index = row.getIndex();\r\n        //alert(JSON.stringify(data));\r\n        let solg = data.solg;\r\n        let dongia = data.dongia;\r\n        let tien = solg * dongia;\r\n        console.log(tien);\r\n\r\n\r\n      });\r\n      this.tabulator.on(\"validationFailed\", function (cell, value, validators) {\r\n        let field = cell.getField();\r\n        that.valid = field;\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    onLoad() {\r\n      let ar = [\r\n        { id: 1, name: \"thuc 101\", solg: 10, dongia: 1000, tien: 1, ngay: \"01/01/1968\", monid: 1, tp: \"hue\" },\r\n        { id: 2, name: \"thuc 102\", solg: 1, dongia: 2000, tien: 1, ngay: \"01/01/1968\", monid: 1, tp: \"hue\" }\r\n      ];\r\n      this.count = 3;\r\n      ar.forEach(x => {\r\n        this.tableData.push(x);\r\n      })\r\n    },\r\n    ChangeAct() {\r\n      let act = (this.r.act == 'true') ? true : false;\r\n      this.r.act = act;\r\n    },\r\n    onSave(e) {\r\n      if (this.valid != \"\") {\r\n        this.toast(\"không hợp lệ!!!\")\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      var cells = row.getCells();\r\n      let id = row.getIndex();\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      let r = JSON.parse(JSON.stringify(this.tableData[index]));// this.tableData[index]\r\n      alert(JSON.stringify(r));\r\n      this.sel = {};\r\n      this.tabulator.redraw(true);\r\n    },\r\n    onSaveModal() {\r\n      this.$validator.validateAll().then((result) => {\r\n        if (!result) {\r\n          this.toast(\"Không hợp lệ\");\r\n          return;\r\n        }\r\n        let r = JSON.parse(JSON.stringify(this.r));\r\n        if (r.id == 0) {\r\n          r.id = this.count;\r\n          this.tabulatorAdd(r);\r\n          this.count++;\r\n          this.setPage(1);\r\n        } else {\r\n          this.tabulatorUpdate(r);\r\n        }\r\n        this.hideModal();\r\n      });\r\n    },\r\n    onAdd() {\r\n      let r = {\r\n        id: this.count,\r\n        name: \"thuc 101\",\r\n        solg: 1,\r\n        dongia: 1000,\r\n      }\r\n      this.tabulatorAdd(r);\r\n      this.count++;\r\n      this.setPage(1);\r\n    },\r\n    onCancel(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      var cells = row.getCells();\r\n      let id = row.getIndex();\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      let r = JSON.parse(JSON.stringify(this.sel));\r\n      this.tabulatorUpdate(r);\r\n      this.sel = {};\r\n      this.valid = \"\";\r\n      let $row = $(row.getElement());\r\n      this.tabulator.redraw(true);\r\n    },\r\n    onEdit(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      var cells = row.getCells();\r\n      let id = row.getIndex();\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      this.sel = JSON.parse(JSON.stringify(row.getData()));\r\n      let $row = $(row.getElement());\r\n      this.tabulator.redraw(true)\r\n    },\r\n    onDel(e) {\r\n      e.preventDefault();\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      this.tabulatorDel(id);\r\n    },\r\n    getPageMax() {\r\n      return this.tabulator.getPageMax();\r\n    },\r\n    getLastPage(count) {\r\n      let pageSize = this.tabulator.getPageSize();\r\n      let du = count % pageSize;\r\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n    },\r\n    getPageSize() {\r\n      return this.tabulator.getPageSize();\r\n    },\r\n    getPage() {\r\n      return this.tabulator.getPage();\r\n    },\r\n    setPage(_page) {\r\n      this.tabulator.setPage(_page);\r\n    },\r\n    getData() {\r\n      return this.tabulator.getData();\r\n    },\r\n    tabulatorAdd(r) {\r\n      this.tableData.unshift(r);\r\n    },\r\n    tabulatorDel(id) {\r\n      let index = this.tableData.findIndex(x => x.id == id);\r\n      this.tableData.splice(index, 1);\r\n    },\r\n    tabulatorUpdate(r) {\r\n      let index = this.tableData.findIndex(x => x.id == r.id);\r\n      this.tableData.splice(index, 1, r);\r\n    },\r\n    tabulatorGetRow(id) {\r\n      //let index=this.tabulator.getData().findIndex(x=>x.id==id);\r\n      //let r=this.tabulator.getData()[index];\r\n      //return r;\r\n    },\r\n    toast(msg, variant = null) {\r\n      this.$bvToast.toast(msg, {\r\n        title: `Information`,\r\n        variant: variant,\r\n        solid: true,\r\n      });\r\n    },\r\n    showModal() {\r\n      this.$refs['my-modal2'].show()\r\n    },\r\n    hideModal() {\r\n      this.$refs['my-modal2'].hide()\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.select2-container--default .select2-selection--single .select2-selection__arrow {\r\n  height: 15px;\r\n  position: absolute;\r\n  top: 1px;\r\n  right: 1px;\r\n  width: 20px;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  display: block;\r\n  height: 18px;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n}\r\n\r\n.select2-container--default .select2-selection--single .select2-selection__rendered {\r\n  color: #444;\r\n  line-height: 18px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.xyz {\r\n  border: 1px solid red;\r\n}\r\n\r\n.danger,\r\n.danger .dropdown-toggle,\r\n.danger .selected-tag {\r\n  background-color: aqua;\r\n  border-radius: 4px;\r\n}\r\n\r\n.ko-hop-le {\r\n  border-radius: 4px;\r\n  background-color: aqua;\r\n}\r\n\r\n$textSize: 8.5px; //14px !default; //table text size\r\n@import \"~tabulator-tables/src/scss/tabulator.scss\";\r\n\r\n.tabulator-col-title {\r\n  text-align: center;\r\n}\r\n\r\n.tabulator .tabulator-footer .tabulator-page.active {\r\n  background-color: greenyellow !important;\r\n  color: blue !important;\r\n}\r\n\r\n.tabulator-row .tabulator-cell {\r\n  padding: 18px 4px;\r\n}\r\n\r\n\r\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\r\n  width: 24px;\r\n  height: 24px;\r\n  font-size: 10px;\r\n  line-height: 1;\r\n  margin: 0px auto;\r\n  padding: 6px 0;\r\n}\r\n\r\n.custom-control.custom-checkbox {\r\n  position: relative;\r\n  z-index: 1;\r\n  display: block;\r\n  min-height: 0.9rem;\r\n  padding-left: 1.5rem;\r\n  padding-top: 0.3rem;\r\n}\r\n\r\n.col-4 input {\r\n  margin-bottom: 1px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 0.3rem;\r\n}\r\n</style>\r\n\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueTabulatorInline.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueTabulatorInline.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VueTabulatorInline.vue?vue&type=template&id=2f35f97e&\"\nimport script from \"./VueTabulatorInline.vue?vue&type=script&lang=js&\"\nexport * from \"./VueTabulatorInline.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VueTabulatorInline.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es-x/no-array-prototype-foreach -- safe\n} : [].forEach;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\nvar TypeError = global.TypeError;\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar TypeError = global.TypeError;\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","export default \"<template>\\r\\n  <div>\\r\\n    <raw-loader :mytxt=\\\"require('!raw-loader!./VueTabulatorInline.vue').default\\\"></raw-loader>\\r\\n    {{ msg }}<br>\\r\\n    <!-- {{myvalid}}<br> -->\\r\\n    <!-- rowedit : {{rowedit}}<br>   -->\\r\\n    sel : {{ sel }}<br>\\r\\n    valid : {{ valid }}<br>\\r\\n    {{ tableData }}\\r\\n    <div class=\\\"mb-1\\\">\\r\\n      <button class=\\\"mr-1\\\" @click=\\\"onAdd\\\">Add</button>\\r\\n      <!-- <button class=\\\"mr-1\\\" @click=\\\"testData\\\" >Test data</button> -->\\r\\n      <!-- <button class=\\\"mr-1\\\" @click=\\\"testEdit\\\" >Test Edit</button> -->\\r\\n    </div>\\r\\n    <!-- {{tableData}} -->\\r\\n    <div ref=\\\"table\\\"></div>\\r\\n    <b-modal ref=\\\"my-modal2\\\" id=\\\"modal-1\\\" size=\\\"sm\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer title=\\\"BootstrapVue\\\">\\r\\n      <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n        <div>\\r\\n          <!-- <pre>{{r}}</pre> -->\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" disabled v-model=\\\"r.id\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Name\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <input type=\\\"text\\\" v-model=\\\"r.name\\\" name=\\\"name\\\" v-validate=\\\"'required'\\\" :class=\\\"{\\r\\n                'form-control': true,\\r\\n                'ko-hop-le': errors.has('name'),\\r\\n              }\\\" autocomplete=\\\"off\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Ngay\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-datepicker v-model=\\\"r.ngay\\\" name=\\\"ngay\\\" v-validate=\\\"'required'\\\"\\r\\n                :date-format-options=\\\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\\\" locale=\\\"vi\\\" class=\\\"mb-2\\\">\\r\\n              </b-form-datepicker>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Act\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <b-form-checkbox v-model=\\\"r.act\\\" name=\\\"checkbox-1\\\" value=true unchecked-value=false @change=\\\"ChangeAct\\\">\\r\\n                Active\\r\\n              </b-form-checkbox>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Thành phố {{ errors.has('tp') }}\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select v-model=\\\"r.tp\\\" name=\\\"tp\\\" v-validate=\\\"'required'\\\" :reduce=\\\"(option) => option.id\\\" :options=\\\"tps\\\"\\r\\n                :has-error=\\\"errors.has('tp')\\\" :class=\\\"{ danger: errors.has('tp') }\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n              Quyền\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <v-select multiple name=\\\"quyen\\\" v-model=\\\"r.quyen\\\" :options=\\\"['Admin', 'User', 'Editor']\\\"\\r\\n                v-validate=\\\"'required'\\\" :class=\\\"{ danger: errors.has('quyen') }\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-1 btn-sm\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </b-modal>\\r\\n  </div>\\r\\n</template>\\r\\n<script>\\r\\nimport { TabulatorFull as Tabulator } from 'tabulator-tables'; //import Tabulator library\\r\\n//import $ from \\\"jquery\\\"\\r\\nimport MyLoader from \\\"@/func/MyLoad.js\\\";\\r\\n\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n  classes: true,\\r\\n});\\r\\n\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\nimport \\\"vue-select/dist/vue-select.css\\\";\\r\\nimport moment from 'moment';\\r\\nexport default {\\r\\n  data: function () {\\r\\n    return {\\r\\n      tabulator: null, //variable to hold your table\\r\\n      tableData: [], //data for table to display\\r\\n      msg: \\\"hello world\\\",\\r\\n      count: 8,\\r\\n      r: {\\r\\n        id: 0,\\r\\n        ten: 'thuc 101',\\r\\n        ngay: new Date\\r\\n      },\\r\\n      tps: [\\r\\n        { label: 'Huế', id: 'HUE' },\\r\\n        { label: 'Sài gòn', id: 'SG' },\\r\\n        { label: 'Đà nẵng', id: 'DN' },\\r\\n        { label: 'Quảng ngãi', id: 'QN' },\\r\\n      ],\\r\\n      sel: {},\\r\\n      valid: '',\\r\\n\\r\\n      mons: [\\r\\n        { id: 1, name: 'Gạo' },\\r\\n        { id: 2, name: 'Đường' },\\r\\n        { id: 3, name: 'Muối' },\\r\\n        { id: 4, name: 'Bột ngọt' },\\r\\n        { id: 5, name: 'Nước ngọt' },\\r\\n        { id: 6, name: 'Cà phê' },\\r\\n        { id: 7, name: 'Bia' },\\r\\n        { id: 8, name: 'Nước mía' }\\r\\n      ]\\r\\n\\r\\n\\r\\n    }\\r\\n  },\\r\\n  mounted() {\\r\\n\\r\\n\\r\\n    if (!document.getElementById(\\\"myScript\\\")) {\\r\\n      MyLoader.loadScript(\\\"myScript\\\", \\\"/js/jquery.min.js\\\").then(() => {\\r\\n        MyLoader.loadScript(\\\"\\\", \\\"/js/bootstrap.js\\\").then(() => {\\r\\n          MyLoader.loadScript(\\\"\\\", \\\"/js/select2.min.js\\\").then(() => {\\r\\n            MyLoader.loadScript(\\\"\\\", \\\"/js/bootstrap-datepicker.js\\\").then(() => {\\r\\n              MyLoader.loadScript(\\\"\\\", \\\"/js/moment.js\\\").then(() => {\\r\\n                MyLoader.loadCss(\\\"/css/select2.min.css\\\").then(() => {\\r\\n                  MyLoader.loadCss(\\\"/css/bootstrap-datepicker.css\\\").then(() => {\\r\\n                    this.onReady();\\r\\n                  })\\r\\n                })\\r\\n              })\\r\\n            })\\r\\n          })\\r\\n        })\\r\\n      })\\r\\n    } else {\\r\\n      this.onReady();\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    onReady() {\\r\\n      this.loadTabulator();\\r\\n    },\\r\\n    loadTabulator() {\\r\\n\\r\\n      var that = this;\\r\\n\\r\\n\\r\\n      var dateEditor = function (cell, onRendered, success, cancel, editorParams) {\\r\\n        var editor = document.createElement(\\\"input\\\");\\r\\n        editor.setAttribute(\\\"type\\\", \\\"date\\\");\\r\\n        editor.style.padding = \\\"3px\\\";\\r\\n        editor.style.width = \\\"100%\\\";\\r\\n        editor.style.boxSizing = \\\"border-box\\\";\\r\\n        editor.value = moment(cell.getValue(), \\\"DD/MM/YYYY\\\").format(\\\"YYYY-MM-DD\\\")\\r\\n        onRendered(function () {\\r\\n          editor.focus();\\r\\n          editor.style.css = \\\"100%\\\";\\r\\n        });\\r\\n        function successFunc() {\\r\\n          success(moment(editor.value, \\\"YYYY-MM-DD\\\").format(\\\"DD/MM/YYYY\\\"));\\r\\n        }\\r\\n        editor.addEventListener(\\\"change\\\", successFunc);\\r\\n        editor.addEventListener(\\\"blur\\\", successFunc);\\r\\n        return editor;\\r\\n      };\\r\\n      //in your column definition for the column\\r\\n      //{title:\\\"Birthday\\\", field:\\\"dob\\\", editor:dateEditor}}\\r\\n\\r\\n      var editor_select = function (cell, onRendered, success, cancel, editorParams) {\\r\\n        var editor = $(\\\"<select><select/>\\\");\\r\\n        var selectedLabel = cell.getValue();\\r\\n\\r\\n        function optionAppend(element, label, value, disabled) {\\r\\n          var option = $(\\\"<option></option>\\\").attr(\\\"value\\\", value).text(label);\\r\\n          element.append(option);\\r\\n        }\\r\\n        var key;\\r\\n        for (key in editorParams) {\\r\\n          var editorParam = editorParams[key];\\r\\n          if (typeof editorParam.value != \\\"undefined\\\") {\\r\\n            optionAppend(editor, editorParam.text, editorParam.value);\\r\\n          }\\r\\n        }\\r\\n\\r\\n        editor.css({\\r\\n          \\\"padding\\\": \\\"4px\\\",\\r\\n          \\\"width\\\": \\\"100%\\\",\\r\\n          \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n          \\\"height\\\": \\\"100%\\\",\\r\\n        }).val(cell.getValue());\\r\\n\\r\\n        var selectedValue = \\\"\\\";\\r\\n        for (var key in editorParams) {\\r\\n          var editorParam = editorParams[key];\\r\\n          if (editorParam.text == selectedLabel) {\\r\\n            selectedValue = editorParam.value;\\r\\n          }\\r\\n        }\\r\\n\\r\\n        onRendered(function () {\\r\\n          editor.focus();\\r\\n          editor.val(selectedValue);\\r\\n        });\\r\\n\\r\\n\\r\\n        editor.on(\\\"change blur\\\", function (e) {\\r\\n          var value = editor.val();\\r\\n          success(value);\\r\\n        });\\r\\n        editor.on(\\\"keydown\\\", function (e) {\\r\\n          if (e.keyCode === 13) {\\r\\n            success(select.val());\\r\\n          }\\r\\n        });\\r\\n        //return the editor element\\r\\n        return editor;\\r\\n      };\\r\\n\\r\\n      var list = [\\r\\n        { id: 1, text: 'thuc 1' },\\r\\n        { id: 2, text: 'thuc 2' },\\r\\n        { id: 3, text: 'thuc 3' },\\r\\n        { id: 4, text: 'thuc 4' },\\r\\n        { id: 5, text: 'thuc 5' }\\r\\n      ];\\r\\n      //create custom editor\\r\\n      var select2Editor = function (cell, onRendered, success, cancel, editorParams) {\\r\\n\\r\\n        //create input element to hold select\\r\\n        var editor = document.createElement(\\\"select\\\");\\r\\n\\r\\n        onRendered(function () {\\r\\n          var select_2 = $(editor);\\r\\n\\r\\n\\r\\n          // $(\\\".js-example-data-array\\\").select2({\\r\\n          //   data: data\\r\\n          // })                  \\r\\n\\r\\n          select_2.select2({\\r\\n            theme: \\\"classic\\\",\\r\\n            placeholder: 'Select',\\r\\n            data: list,\\r\\n            minimumResultsForSearch: Infinity,\\r\\n            width: 300,\\r\\n            minimumInputLength: 0,\\r\\n            allowClear: true,\\r\\n          });\\r\\n\\r\\n          select_2.on('change', function (e) {\\r\\n            success(select_2.val());\\r\\n          });\\r\\n\\r\\n\\r\\n          select_2.on('blur', function (e) {\\r\\n            cancel();\\r\\n          });\\r\\n        });\\r\\n\\r\\n\\r\\n        //add editor to cell\\r\\n        return editor;\\r\\n      }\\r\\n\\r\\n\\r\\n\\r\\n      var cboData = [\\r\\n        {\\r\\n          \\\"key\\\": \\\"hue\\\",\\r\\n          \\\"name\\\": \\\"Huế\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"key\\\": \\\"sg\\\",\\r\\n          \\\"name\\\": \\\"Sài gòn\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"key\\\": \\\"hn\\\",\\r\\n          \\\"name\\\": \\\"Hà nội\\\"\\r\\n        }\\r\\n      ];\\r\\n      var comboEditor = function (cell, onRendered, success, cancel, editorParams) {\\r\\n        var editor = document.createElement(\\\"select\\\");\\r\\n        for (var i = 0; i < editorParams.length; i++) {\\r\\n          var opt = document.createElement('option');\\r\\n          opt.value = editorParams[i].key;\\r\\n          opt.innerHTML = editorParams[i].name;\\r\\n          editor.appendChild(opt);\\r\\n        }\\r\\n\\r\\n        editor.style.padding = \\\"3px\\\";\\r\\n        editor.style.width = \\\"100%\\\";\\r\\n        editor.style.boxSizing = \\\"border-box\\\";\\r\\n\\r\\n        editor.value = cell.getValue();\\r\\n\\r\\n        onRendered(function () {\\r\\n          editor.focus();\\r\\n          editor.style.css = \\\"100%\\\";\\r\\n        });\\r\\n\\r\\n        function successFunc() {\\r\\n          console.log('successFunc');\\r\\n          success(editor.value);\\r\\n        }\\r\\n\\r\\n        editor.addEventListener(\\\"change\\\", successFunc);\\r\\n        editor.addEventListener(\\\"blur\\\", successFunc);\\r\\n\\r\\n        return editor;\\r\\n      };\\r\\n\\r\\n\\r\\n      var select21Editor = function (cell, onRendered, success, cancel, editorParams) {\\r\\n        var editor = document.createElement(\\\"select\\\");\\r\\n        editor.style.padding = \\\"3px\\\";\\r\\n        editor.style.width = \\\"100%\\\";\\r\\n        editor.style.boxSizing = \\\"border-box\\\";\\r\\n        onRendered(function () {\\r\\n          var select_2 = $(editor);\\r\\n          select_2.select2({\\r\\n            theme: \\\"classic\\\",\\r\\n            // placeholder: 'Select',\\r\\n            data: list,\\r\\n            // minimumResultsForSearch: Infinity,\\r\\n            width: 100,\\r\\n            // minimumInputLength: 0,\\r\\n            // allowClear: true,\\r\\n          });\\r\\n\\r\\n          select_2.on('change', function (e) {\\r\\n            console.log('success');\\r\\n            success(select_2.val());\\r\\n          });\\r\\n\\r\\n\\r\\n          select_2.on('blur', function (e) {\\r\\n            cancel();\\r\\n          });\\r\\n        });\\r\\n        return editor;\\r\\n      };\\r\\n      //{title: \\\"Select2\\\", field: \\\"lucky_no\\\", align: \\\"center\\\", width: 300, editor: select2Editor},          \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      var datePickerFormatter = function (cell, formatterParams, onRendered) {\\r\\n        onRendered(function () {\\r\\n          let $cell = $(cell.getElement()).find(\\\"input\\\");\\r\\n          $cell.width(\\\"80%\\\");\\r\\n          //$cell.height(\\\"50%\\\");\\r\\n          $cell.css(\\\"border\\\", \\\"0px solid blue\\\");\\r\\n          $cell.css(\\\"text-align\\\", \\\"center\\\");\\r\\n          $cell.prop(\\\"readonly\\\", true);\\r\\n          $cell.datepicker({\\r\\n            format: \\\"dd/mm/yyyy\\\",\\r\\n            todayBtn: true,\\r\\n            autoclose: true,\\r\\n            todayHighlight: true,\\r\\n          });\\r\\n          //alert(cell.getValue());\\r\\n          let value = moment(cell.getValue(), \\\"DD/MM/YYYY\\\").format(\\r\\n            \\\"DD/MM/YYYY\\\"\\r\\n          );\\r\\n          $cell.datepicker(\\\"setDate\\\", value);\\r\\n\\r\\n\\r\\n          $cell.datepicker().on(\\\"changeDate\\\", function () {\\r\\n            let d = $(this).datepicker(\\\"getDate\\\");\\r\\n            cell.setValue(moment(d).format(\\\"DD/MM/YYYY\\\"));\\r\\n          });\\r\\n        });\\r\\n        var $el = $(\\\"<input />\\\");\\r\\n        return $el[0];\\r\\n      };\\r\\n      var dateFormatter = function (cell, formatterParams) {\\r\\n        var value = cell.getValue();\\r\\n        if (value) {\\r\\n          value = moment(value, \\\"YYYY/MM/DD\\\").format(\\\"DD/MM/YYYY\\\");\\r\\n        }\\r\\n        return value;\\r\\n      };\\r\\n\\r\\n      var select2Formatter = function (cell, formatterParams, onRendered) {\\r\\n        onRendered(function () {\\r\\n          let $myCell = $(cell.getElement());\\r\\n          let $cell = $(cell.getElement()).find(\\\"select\\\");\\r\\n          $cell.css({\\r\\n            \\\"padding\\\": \\\"4px\\\",\\r\\n            \\\"width\\\": \\\"100%\\\",\\r\\n            \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n            \\\"font-family\\\": \\\"\\\",\\r\\n          })\\r\\n          $cell.select2({\\r\\n            //placeholder: '-- // --',\\r\\n            width: \\\"100%\\\",\\r\\n            //allowClear: true,\\r\\n          });\\r\\n          $cell.focus();\\r\\n          $cell.val(cell.getValue()).trigger(\\\"change.select2\\\");\\r\\n          $(cell.getElement())\\r\\n            .find(\\\"select\\\")\\r\\n            .on(\\\"change\\\", function () {\\r\\n              cell.setValue($(this).val());\\r\\n            });\\r\\n          $myCell\\r\\n            .find(\\\".select2-container--default\\\")\\r\\n            .css(\\\"border\\\", \\\"0px solid blue\\\");\\r\\n          $myCell\\r\\n            .find(\\\".select2-selection--single\\\")\\r\\n            .css(\\\"border\\\", \\\"0px solid blue\\\");\\r\\n        });\\r\\n        var $el = $(\\\"<select class='tabu' >\\\");\\r\\n        formatterParams.forEach((el) => {\\r\\n          let $option = $(\\\"<option>\\\").val(el.id).text(el.text);\\r\\n          $el.append($option);\\r\\n        });\\r\\n        return $el[0];\\r\\n      };\\r\\n\\r\\n\\r\\n      // create custom formatter\\r\\n      var selectFormatter = function (cell, formatterParams) {\\r\\n        //create and style select\\r\\n        var select = $(\\\"<select><select/>\\\");\\r\\n\\r\\n        //add options elements\\r\\n        formatterParams.forEach(function (item) {\\r\\n          select.append($(\\\"<option></option>\\\").attr(\\\"value\\\", item).text(item));\\r\\n        });\\r\\n\\r\\n        //define styling\\r\\n        select.css({\\r\\n          \\\"padding\\\": \\\"4px\\\",\\r\\n          \\\"width\\\": \\\"100%\\\",\\r\\n          \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n          \\\"font-family\\\": \\\"\\\",\\r\\n        })\\r\\n\\r\\n          //set cell value\\r\\n          .val(cell.getValue())\\r\\n\\r\\n\\r\\n        //submit new value on blur\\r\\n        select.on(\\\"change blur\\\", function (e) {\\r\\n          cell.setValue(select.val());\\r\\n        });\\r\\n\\r\\n        //submit new value on enter\\r\\n        select.on(\\\"keydown\\\", function (e) {\\r\\n          if (e.keyCode === 13) {\\r\\n            cell.setValue(select.val());\\r\\n          }\\r\\n        });\\r\\n\\r\\n        return select;\\r\\n      }\\r\\n      //in column definition assign formatter and define options \\r\\n      //{title:\\\"Gender\\\", field:\\\"gender\\\", formatter:selectFormatter, formatterParams:[\\\"male\\\", \\\"female\\\"]}\\r\\n\\r\\n      /*\\r\\n      function globalCellClick(e, cell) {\\r\\n          console.log('Inside cell select'); // works now, so function is being reached\\r\\n          var mycell = cell.getElement();\\r\\n          console.log('Cell: ' , mycell); // works\\r\\n          var cellf = mycell.attr('tabulator-field');\\r\\n          console.log('Selected cell field: ' + cellf); // works\\r\\n          var celledit = mycell.getColumn().getDefinition().editable; // check if cell is editable\\r\\n          console.log('Editable cell: ' + celledit); // **(BROKEN): mycell.getColumn() is undefined**\\r\\n          var  celltxt = mycell.getValue();\\r\\n          console.log('Selected cell text: ' + celltxt); // **(BROKEN): mycell.getValue() is undefined**\\r\\n      }*/\\r\\n\\r\\n      var roweditCheck = function (cell) {\\r\\n        //cell - the cell component for the editable cell\\r\\n        //get row data\\r\\n        //var data = cell.getRow().getData();\\r\\n        //return data.age > 18; // only allow the name cell to be edited if the age is over 18\\r\\n        let row = cell.getRow();\\r\\n        let id = row.getIndex();\\r\\n        let $cell = row.getElement();\\r\\n        //var editFunc = cell.getColumn().getDefinition().editable; \\r\\n        //var isEditable = cell.getRow().getElement().classList.contains('isEditable');\\r\\n        //console.log(isEditable);\\r\\n        //console.log(editFunc);           \\r\\n        //alert( JSON.stringify (cell.getRow().getData()));\\r\\n        //console.log($cell.html());\\r\\n        //row.getElement().style.backgroundColor = \\\"#1e3b20\\\";\\r\\n        //$(row.getElement()).css(\\\"backgroundColor\\\",'yellow');\\r\\n        //console.log($(row.getElement()).text());\\r\\n        //let sel=cell.getRow().isSelected();\\r\\n        //console.log(sel);\\r\\n        if (that.sel.id == cell.getRow().getData().id) {\\r\\n          return true;\\r\\n        } else {\\r\\n          return false;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      this.tabulator = new Tabulator(this.$refs.table, {\\r\\n        //selectable:true,\\r\\n        data: this.tableData, //link data to table\\r\\n        reactiveData: true, //enable data reactivity\\r\\n        height: $(window).innerHeight() - 400,//'200px',//$(window).innerHeight()\\r\\n        //addRowPos:\\\"top\\\",       //top,bottom//when adding a new row, add it to the top of the table\\r\\n        // columnVertAlign: \\\"middle\\\", //align header contents\\r\\n        // cellVertAlign: \\\"middle\\\", //vertically center cell contents\\r\\n        history: true,             //allow undo and redo actions on the table\\r\\n        pagination: \\\"local\\\",       //paginate the data\\r\\n        paginationSize: 3,         //allow 7 rows per page of data\\r\\n        paginationCounter: \\\"rows\\\", //display count of paginated rows in footer\\r\\n        paginationInitialPage: 1, //optional parameter to set the initial page to load    \\r\\n        paginationSizeSelector: [5, 10, 20, 30, 50],\\r\\n        rowFormatter: function (row) {\\r\\n          //console.log('rowformater')\\r\\n          console.log($(row.getElement()).html());\\r\\n        },\\r\\n        //autoColumns:true,\\r\\n        columns: [\\r\\n          {\\r\\n            title: \\\"STT\\\",\\r\\n            formatter: \\\"rownum\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Cmd\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            headerSort: false,\\r\\n            width: 100,\\r\\n            formatter: function (cell, formatterParams, onRendered) {\\r\\n              onRendered(function () {\\r\\n                $(cell.getElement()).find(\\\"#testedit\\\").on(\\\"click\\\", cell, that.onTestEdit);\\r\\n                $(cell.getElement()).find(\\\"#save\\\").on(\\\"click\\\", cell.getRow(), that.onSave);\\r\\n                $(cell.getElement()).find(\\\"#cancel\\\").on(\\\"click\\\", cell.getRow(), that.onCancel);\\r\\n                $(cell.getElement()).find(\\\"#edit\\\").on(\\\"click\\\", cell.getRow(), that.onEdit);\\r\\n                $(cell.getElement()).find(\\\"#del\\\").on(\\\"click\\\", cell.getRow(), that.onDel);\\r\\n              });\\r\\n              let $div = $(\\\"<div>\\\");\\r\\n              //let $btnTestEdit=  $(\\\"<button>\\\", { text: \\\"Test edit\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"testedit\\\");\\r\\n              let $btnSave = $(\\\"<button>\\\", { text: \\\"Save\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"save\\\").hide();\\r\\n              let $btnCancel = $(\\\"<button>\\\", { text: \\\"Cancel\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"cancel\\\").hide();\\r\\n              let $btnEdit = $(\\\"<button>\\\", { text: \\\"Edit\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"edit\\\");\\r\\n              let $btnDel = $(\\\"<button>\\\", { text: \\\"Del\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"del\\\");\\r\\n              $div.append($btnSave);\\r\\n              $div.append($btnCancel);\\r\\n              $div.append($btnEdit);\\r\\n              $div.append($btnDel);\\r\\n              if (that.sel.id == cell.getRow().getData().id) {\\r\\n                $btnSave.show();\\r\\n                $btnCancel.show();\\r\\n                $btnEdit.hide();\\r\\n                $btnDel.hide();\\r\\n              } else {\\r\\n                // $btnSave.hide();\\r\\n                // $btnCancel.hide();\\r\\n                // $btnEdit.show();\\r\\n                if ($.isEmptyObject(that.sel) == true) {\\r\\n                  $btnSave.hide();\\r\\n                  $btnCancel.hide();\\r\\n                  $btnEdit.show();\\r\\n                } else {\\r\\n                  $btnEdit.attr('disabled', 'disabled');//.hide();\\r\\n                  $btnDel.attr('disabled', 'disabled');//.hide();\\r\\n                }\\r\\n              }\\r\\n              return $div[0];\\r\\n            },\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Id\\\",\\r\\n            field: \\\"id\\\",\\r\\n            width: 50,\\r\\n            //headerFilter: true,\\r\\n            hozAlign: \\\"center\\\",\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Name\\\",\\r\\n            field: \\\"name\\\",\\r\\n            width: 80,\\r\\n            editor: \\\"input\\\",\\r\\n            validator: [\\\"required\\\"], //\\\"required\\\"  \\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"SoLg\\\",\\r\\n            field: \\\"solg\\\",\\r\\n            width: 50,\\r\\n            editor: \\\"input\\\",\\r\\n            validator: [\\\"required\\\", \\\"integer\\\"], //\\\"required\\\"          \\r\\n            hozAlign: \\\"right\\\",\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"DonGia\\\",\\r\\n            field: \\\"dongia\\\",\\r\\n            width: 50,\\r\\n            editor: \\\"input\\\",\\r\\n            validator: [\\\"required\\\", \\\"integer\\\"], //\\\"required\\\"          \\r\\n            hozAlign: \\\"right\\\",\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Tien\\\",\\r\\n            field: \\\"tien\\\",\\r\\n            width: 50,\\r\\n            editor: \\\"input\\\",\\r\\n            validator: [\\\"required\\\", \\\"integer\\\"], //\\\"required\\\"          \\r\\n            hozAlign: \\\"right\\\",\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Ngày\\\",\\r\\n            field: \\\"ngay\\\",\\r\\n            sorter: \\\"string\\\",\\r\\n            //headerFilter: true,\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            width: 100,\\r\\n            //editable: true,\\r\\n            //editor: dateEditor,\\r\\n            editor: dateEditor,\\r\\n            validator: \\\"required\\\",\\r\\n            //formatter: datePickerFormatter,\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"MonId\\\",\\r\\n            field: \\\"monid\\\",\\r\\n            hozAlign: \\\"center\\\",\\r\\n            width: 100,\\r\\n            editor: select2Editor,\\r\\n            editorParams: [\\r\\n              { \\\"value\\\": \\\"1\\\", \\\"text\\\": \\\"\\\" },\\r\\n              { \\\"value\\\": \\\"2\\\", \\\"text\\\": \\\"Grammes\\\" },\\r\\n              { \\\"value\\\": \\\"3\\\", \\\"text\\\": \\\"Kilogrammes\\\" },\\r\\n              { \\\"value\\\": \\\"4\\\", \\\"text\\\": \\\"Livres\\\" },\\r\\n              { \\\"value\\\": \\\"5\\\", \\\"text\\\": \\\"Milligrammes\\\" },\\r\\n              { \\\"value\\\": \\\"6\\\", \\\"text\\\": \\\"Once\\\" }\\r\\n            ],\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Monid2\\\",\\r\\n            field: \\\"monid\\\",\\r\\n            align: \\\"center\\\",\\r\\n            width: 100,\\r\\n            editor: select21Editor,//select2Editor,\\r\\n            formatterParams: this.mons.map((x) => ({\\r\\n              id: x.id,\\r\\n              text: `${x.id} - ${x.name}`,\\r\\n            })),\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n          {\\r\\n            title: \\\"MonId3\\\",\\r\\n            field: \\\"monid\\\",\\r\\n            headerHozAlign: \\\"center\\\",\\r\\n            hozAlign: \\\"left\\\",\\r\\n            width: 100,\\r\\n            //editor:\\\"input\\\",\\r\\n            formatter: select2Formatter,\\r\\n            formatterParams: this.mons.map((x) => ({\\r\\n              id: x.id,\\r\\n              text: `${x.id} - ${x.name}`,\\r\\n            })),\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n\\r\\n          {\\r\\n            title: \\\"MonId4\\\",\\r\\n            field: \\\"monid\\\",\\r\\n            align: \\\"center\\\",\\r\\n            width: 100,\\r\\n            //editor: true,\\r\\n            formatter: function (cell, formatterParams, onRendered) {\\r\\n              onRendered(function () {\\r\\n                var select_2 = $(cell.getElement());\\r\\n\\r\\n                select_2.select2({\\r\\n                  //theme: \\\"classic\\\",\\r\\n                  //placeholder: 'Select',\\r\\n                  data: [\\r\\n                    { id: 1, text: 'thuc 101' },\\r\\n                    { id: 2, text: 'thuc 102' }\\r\\n                  ],\\r\\n                  //minimumResultsForSearch: Infinity,\\r\\n                  width: 100,\\r\\n                  //minimumInputLength: 0,\\r\\n                  allowClear: true,\\r\\n                }).on('change', function (e) {\\r\\n                  console.log('change');\\r\\n                });\\r\\n\\r\\n                select_2.val(list[cell.getValue()].id);\\r\\n                var x = select_2.val();\\r\\n                select_2.val(x).trigger('change.select2');\\r\\n              })\\r\\n            },\\r\\n            editable: roweditCheck,//editCheck,\\r\\n\\r\\n          },\\r\\n          {\\r\\n            title: \\\"Tp\\\",\\r\\n            field: 'tp',\\r\\n            width: 100,\\r\\n            headerHozAlign: 'center',\\r\\n            hozAlign: 'center',\\r\\n            editor: comboEditor,\\r\\n            editorParams: cboData,\\r\\n            formatter: function (cell, formatterParams) {\\r\\n              for (var i = 0; i < formatterParams.length; i++) {\\r\\n                if (formatterParams[i].key == cell.getValue()) {\\r\\n                  return formatterParams[i].name;\\r\\n                }\\r\\n              }\\r\\n            },\\r\\n            formatterParams: cboData,\\r\\n            editable: roweditCheck,//editCheck,\\r\\n          },\\r\\n        ], //define table columns\\r\\n      });\\r\\n      this.tabulator.on(\\\"dataLoaded\\\", function (data) {\\r\\n        that.onLoad();\\r\\n      });\\r\\n      this.tabulator.on(\\\"pageLoaded\\\", function (pageno) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"dataChanged\\\", function (data) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"rowClick\\\", function (e, row) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"rowSelectionChanged\\\", function (data, rows) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"rowSelected\\\", function (row) {\\r\\n        let index = row.getIndex();\\r\\n        that.msg = index;\\r\\n        console.log('rowSelected');\\r\\n      });\\r\\n      this.tabulator.on(\\\"cellEditing\\\", function (cell) {\\r\\n        let row = cell.getRow();\\r\\n        let data = row.getData();\\r\\n        let index = row.getIndex();\\r\\n        //that.tabulator.deselectRow();\\r\\n        //that.tabulator.selectRow(index);  \\r\\n        //console.log(`cellediting - ${index}`);\\r\\n      });\\r\\n      this.tabulator.on(\\\"cellEditCancelled\\\", function (cell) {\\r\\n      });\\r\\n      this.tabulator.on(\\\"cellEdited\\\", function (cell) {\\r\\n        //console.log(`cell edited`);\\r\\n        let row = cell.getRow();\\r\\n        let data = row.getData();\\r\\n        let index = row.getIndex();\\r\\n        //alert(JSON.stringify(data));\\r\\n        let solg = data.solg;\\r\\n        let dongia = data.dongia;\\r\\n        let tien = solg * dongia;\\r\\n        console.log(tien);\\r\\n\\r\\n\\r\\n      });\\r\\n      this.tabulator.on(\\\"validationFailed\\\", function (cell, value, validators) {\\r\\n        let field = cell.getField();\\r\\n        that.valid = field;\\r\\n      });\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    },\\r\\n    onLoad() {\\r\\n      let ar = [\\r\\n        { id: 1, name: \\\"thuc 101\\\", solg: 10, dongia: 1000, tien: 1, ngay: \\\"01/01/1968\\\", monid: 1, tp: \\\"hue\\\" },\\r\\n        { id: 2, name: \\\"thuc 102\\\", solg: 1, dongia: 2000, tien: 1, ngay: \\\"01/01/1968\\\", monid: 1, tp: \\\"hue\\\" }\\r\\n      ];\\r\\n      this.count = 3;\\r\\n      ar.forEach(x => {\\r\\n        this.tableData.push(x);\\r\\n      })\\r\\n    },\\r\\n    ChangeAct() {\\r\\n      let act = (this.r.act == 'true') ? true : false;\\r\\n      this.r.act = act;\\r\\n    },\\r\\n    onSave(e) {\\r\\n      if (this.valid != \\\"\\\") {\\r\\n        this.toast(\\\"không hợp lệ!!!\\\")\\r\\n        return;\\r\\n      }\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      var cells = row.getCells();\\r\\n      let id = row.getIndex();\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      let r = JSON.parse(JSON.stringify(this.tableData[index]));// this.tableData[index]\\r\\n      alert(JSON.stringify(r));\\r\\n      this.sel = {};\\r\\n      this.tabulator.redraw(true);\\r\\n    },\\r\\n    onSaveModal() {\\r\\n      this.$validator.validateAll().then((result) => {\\r\\n        if (!result) {\\r\\n          this.toast(\\\"Không hợp lệ\\\");\\r\\n          return;\\r\\n        }\\r\\n        let r = JSON.parse(JSON.stringify(this.r));\\r\\n        if (r.id == 0) {\\r\\n          r.id = this.count;\\r\\n          this.tabulatorAdd(r);\\r\\n          this.count++;\\r\\n          this.setPage(1);\\r\\n        } else {\\r\\n          this.tabulatorUpdate(r);\\r\\n        }\\r\\n        this.hideModal();\\r\\n      });\\r\\n    },\\r\\n    onAdd() {\\r\\n      let r = {\\r\\n        id: this.count,\\r\\n        name: \\\"thuc 101\\\",\\r\\n        solg: 1,\\r\\n        dongia: 1000,\\r\\n      }\\r\\n      this.tabulatorAdd(r);\\r\\n      this.count++;\\r\\n      this.setPage(1);\\r\\n    },\\r\\n    onCancel(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      var cells = row.getCells();\\r\\n      let id = row.getIndex();\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      let r = JSON.parse(JSON.stringify(this.sel));\\r\\n      this.tabulatorUpdate(r);\\r\\n      this.sel = {};\\r\\n      this.valid = \\\"\\\";\\r\\n      let $row = $(row.getElement());\\r\\n      this.tabulator.redraw(true);\\r\\n    },\\r\\n    onEdit(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      var cells = row.getCells();\\r\\n      let id = row.getIndex();\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      this.sel = JSON.parse(JSON.stringify(row.getData()));\\r\\n      let $row = $(row.getElement());\\r\\n      this.tabulator.redraw(true)\\r\\n    },\\r\\n    onDel(e) {\\r\\n      e.preventDefault();\\r\\n      let row = e.data;\\r\\n      let id = row.getIndex();\\r\\n      this.tabulatorDel(id);\\r\\n    },\\r\\n    getPageMax() {\\r\\n      return this.tabulator.getPageMax();\\r\\n    },\\r\\n    getLastPage(count) {\\r\\n      let pageSize = this.tabulator.getPageSize();\\r\\n      let du = count % pageSize;\\r\\n      return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n    },\\r\\n    getPageSize() {\\r\\n      return this.tabulator.getPageSize();\\r\\n    },\\r\\n    getPage() {\\r\\n      return this.tabulator.getPage();\\r\\n    },\\r\\n    setPage(_page) {\\r\\n      this.tabulator.setPage(_page);\\r\\n    },\\r\\n    getData() {\\r\\n      return this.tabulator.getData();\\r\\n    },\\r\\n    tabulatorAdd(r) {\\r\\n      this.tableData.unshift(r);\\r\\n    },\\r\\n    tabulatorDel(id) {\\r\\n      let index = this.tableData.findIndex(x => x.id == id);\\r\\n      this.tableData.splice(index, 1);\\r\\n    },\\r\\n    tabulatorUpdate(r) {\\r\\n      let index = this.tableData.findIndex(x => x.id == r.id);\\r\\n      this.tableData.splice(index, 1, r);\\r\\n    },\\r\\n    tabulatorGetRow(id) {\\r\\n      //let index=this.tabulator.getData().findIndex(x=>x.id==id);\\r\\n      //let r=this.tabulator.getData()[index];\\r\\n      //return r;\\r\\n    },\\r\\n    toast(msg, variant = null) {\\r\\n      this.$bvToast.toast(msg, {\\r\\n        title: `Information`,\\r\\n        variant: variant,\\r\\n        solid: true,\\r\\n      });\\r\\n    },\\r\\n    showModal() {\\r\\n      this.$refs['my-modal2'].show()\\r\\n    },\\r\\n    hideModal() {\\r\\n      this.$refs['my-modal2'].hide()\\r\\n    },\\r\\n  }\\r\\n}\\r\\n</script>\\r\\n<style lang=\\\"scss\\\">\\r\\n.select2-container--default .select2-selection--single .select2-selection__arrow {\\r\\n  height: 15px;\\r\\n  position: absolute;\\r\\n  top: 1px;\\r\\n  right: 1px;\\r\\n  width: 20px;\\r\\n}\\r\\n\\r\\n.select2-container .select2-selection--single {\\r\\n  box-sizing: border-box;\\r\\n  cursor: pointer;\\r\\n  display: block;\\r\\n  height: 18px;\\r\\n  user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n}\\r\\n\\r\\n.select2-container--default .select2-selection--single .select2-selection__rendered {\\r\\n  color: #444;\\r\\n  line-height: 18px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.xyz {\\r\\n  border: 1px solid red;\\r\\n}\\r\\n\\r\\n.danger,\\r\\n.danger .dropdown-toggle,\\r\\n.danger .selected-tag {\\r\\n  background-color: aqua;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.ko-hop-le {\\r\\n  border-radius: 4px;\\r\\n  background-color: aqua;\\r\\n}\\r\\n\\r\\n$textSize: 8.5px; //14px !default; //table text size\\r\\n@import \\\"~tabulator-tables/src/scss/tabulator.scss\\\";\\r\\n\\r\\n.tabulator-col-title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.tabulator .tabulator-footer .tabulator-page.active {\\r\\n  background-color: greenyellow !important;\\r\\n  color: blue !important;\\r\\n}\\r\\n\\r\\n.tabulator-row .tabulator-cell {\\r\\n  padding: 18px 4px;\\r\\n}\\r\\n\\r\\n\\r\\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\\r\\n  width: 24px;\\r\\n  height: 24px;\\r\\n  font-size: 10px;\\r\\n  line-height: 1;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 0;\\r\\n}\\r\\n\\r\\n.custom-control.custom-checkbox {\\r\\n  position: relative;\\r\\n  z-index: 1;\\r\\n  display: block;\\r\\n  min-height: 0.9rem;\\r\\n  padding-left: 1.5rem;\\r\\n  padding-top: 0.3rem;\\r\\n}\\r\\n\\r\\n.col-4 input {\\r\\n  margin-bottom: 1px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n  margin-bottom: 0.3rem;\\r\\n}\\r\\n</style>\\r\\n\\r\\n\";","var MyLoad = {\r\n    cong(a, b) {\r\n        return a + b;\r\n    },\r\n    nhan(a, b) {\r\n        return a * b;\r\n    },\r\n    list() {\r\n        return [\r\n            { id: 1, ten: \"thuc 101\" },\r\n            { id: 2, ten: \"thuc 102\" },\r\n            { id: 3, ten: \"thuc 103\" },\r\n        ]\r\n    },\r\n    loadCss(url) {\r\n        return new Promise((resolve, reject) => {\r\n            let link = document.createElement('link');\r\n            link.type = 'text/css';\r\n            link.rel = 'stylesheet';\r\n            link.onload = resolve;\r\n            link.href = url;\r\n            let headScript = document.querySelector('script');\r\n            headScript.parentNode.insertBefore(link, headScript);\r\n        });\r\n    },\r\n    loadScript(id, url) {\r\n        return new Promise(function (resolve, reject) {\r\n            var script = document.createElement(\"script\");\r\n            script.onload = resolve;\r\n            script.onerror = reject;\r\n            script.src = url;\r\n            script.type = \"text/javascript\";\r\n            script.setAttribute('id', id);\r\n            document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n        });\r\n    },\r\n    loadMyScript(that) {\r\n        if (!document.getElementById(\"myScript\")) {\r\n            this.loadScript(\"myScript\", \"js/jquery.min.js\").then(() => {\r\n                this.loadScript(\"\", \"js/bootstrap.js\").then(() => {\r\n                    this.loadScript(\"\", \"js/select2.min.js\").then(() => {\r\n                        this.loadScript(\"\", \"js/bootstrap-datepicker.js\").then(() => {\r\n                            //this.loadScript(\"\", \"js/moment.js\").then(()=>{\r\n                                this.loadCss(\"css/select2.min.css\").then(() => {\r\n                                    this.loadCss(\"css/bootstrap-datepicker.css\").then(() => {\r\n                                        that.onReady();\r\n                                    });\r\n                                });\r\n                            //});\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        } else {\r\n            that.onReady();\r\n        }\r\n    },\r\n    /*\r\n\r\n        \r\n\r\n    */\r\n   /*\r\n    datePickerFormatter(cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n            let $cell = $(cell.getElement()).find(\"input\");\r\n            $cell.width(\"100%\");\r\n            $cell.height(\"100%\");\r\n            $cell.css(\"border\", \"0px solid blue\");\r\n            $cell.css(\"text-align\", \"center\");\r\n            $cell.prop(\"readonly\", true);\r\n            $cell.datepicker({\r\n                format: \"dd/mm/yyyy\",\r\n                //todayBtn: true,\r\n                autoclose: true,\r\n                todayHighlight: true,\r\n            });\r\n            let value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\r\n                \"DD/MM/YYYY\"\r\n            );\r\n            $cell.datepicker(\"setDate\", value);\r\n\r\n            $cell.datepicker().on(\"changeDate\", function () {\r\n                let d = $(this).datepicker(\"getDate\");\r\n                cell.setValue(moment(d).format(\"DD/MM/YYYY\"));\r\n            });\r\n        });\r\n        var $el = $(\"<input />\");\r\n        return $el[0];\r\n    },\r\n    select2Formatter(cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n            let $myCell = $(cell.getElement());\r\n            let $cell = $(cell.getElement()).find(\"select\");\r\n            $cell.select2({\r\n                //placeholder: '-- // --',\r\n                width: \"100%\",\r\n                //allowClear: true,\r\n            });\r\n            $cell.focus();\r\n            $cell.val(cell.getValue()).trigger(\"change.select2\");\r\n            $(cell.getElement())\r\n                .find(\"select\")\r\n                .on(\"change\", function () {\r\n                    cell.setValue($(this).val());\r\n                });\r\n            $myCell\r\n                .find(\".select2-container--default\")\r\n                .css(\"border\", \"0px solid blue\");\r\n            $myCell\r\n                .find(\".select2-selection--single\")\r\n                .css(\"border\", \"0px solid blue\");\r\n        });\r\n        var $el = $(\"<select class='tabu' >\");\r\n        formatterParams.forEach((el) => {\r\n            let $option = $(\"<option>\").val(el.id).text(el.text);\r\n            $el.append($option);\r\n        });\r\n        return $el[0];\r\n    },\r\n    */\r\n}\r\nexport default MyLoad\r\n//import MyLoader from \"@/func/MyLoad.js\";\r\n\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","msg","sel","valid","tableData","staticClass","on","onAdd","ref","$event","stopPropagation","preventDefault","onSaveModal","apply","arguments","directives","name","rawName","value","r","expression","domProps","target","composing","$set","class","errors","has","year","month","day","model","callback","$$v","ChangeAct","danger","option","id","tps","hideModal","staticRenderFns","Vue","classes","data","tabulator","count","ten","ngay","label","mons","mounted","MyLoader","methods","onReady","loadTabulator","success","editor","onRendered","text","select_2","theme","placeholder","minimumResultsForSearch","width","minimumInputLength","allowClear","cancel","opt","console","$cell","$","find","cell","$myCell","css","formatterParams","$el","reactiveData","height","history","pagination","paginationSize","paginationCounter","paginationInitialPage","paginationSizeSelector","rowFormatter","columns","title","formatter","headerHozAlign","hozAlign","headerSort","$div","$btnSave","$btnCancel","$btnEdit","$btnDel","field","validator","editable","sorter","editorParams","align","that","onLoad","solg","dongia","tien","monid","tp","ar","onSave","e","alert","onCancel","onEdit","onDel","getPageMax","getLastPage","getPageSize","getPage","setPage","_page","getData","tabulatorAdd","tabulatorDel","tabulatorUpdate","tabulatorGetRow","toast","variant","solid","showModal","component","$forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","forEach","callbackfn","length","undefined","fails","METHOD_NAME","argument","method","call","toPropertyKey","definePropertyModule","createPropertyDescriptor","object","key","propertyKey","f","global","isArray","isObject","toObject","lengthOfArrayLike","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","TypeError","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","proto","arity","forced","arg","i","k","len","E","A","n","$find","addToUnscopables","FIND","SKIPS_HOLES","Array","$map","HAS_SPECIES_SUPPORT","map","toAbsoluteIndex","toIntegerOrInfinity","max","Math","min","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","splice","start","deleteCount","insertCount","actualDeleteCount","from","to","actualStart","argumentsLength","DOMIterables","DOMTokenListPrototype","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","prototype","MyLoad","cong","a","b","nhan","list","loadCss","url","Promise","resolve","reject","link","document","createElement","type","rel","onload","href","headScript","querySelector","parentNode","insertBefore","loadScript","script","onerror","src","setAttribute","getElementsByTagName","appendChild","loadMyScript","getElementById","then"],"sourceRoot":""}