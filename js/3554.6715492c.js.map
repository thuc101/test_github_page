{"version":3,"file":"js/3554.6715492c.js","mappings":"oKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,aAAa,CAACG,MAAM,CAAC,MAAQ,cAAmDH,EAAG,cAAc,CAACG,MAAM,CAAC,MAAQ,KAAK,CAACH,EAAG,OAAO,CAACI,GAAG,CAAC,OAAS,SAASC,GAAyD,OAAjDA,EAAOC,kBAAkBD,EAAOE,iBAAwBX,EAAIY,OAAOC,MAAM,KAAMC,cAAc,CAACV,EAAG,UAAU,CAACW,IAAI,UAAUR,MAAM,CAAC,cAAc,UAAU,MAAQP,EAAIgB,WAAW,OAAShB,EAAIiB,OAAO,eAAejB,EAAIkB,YAAY,WAAWlB,EAAImB,QAAQ,OAASnB,EAAIoB,OAAO,yBAAyBpB,EAAIqB,SAAS,UAAUrB,EAAIsB,OAAO,YAAYtB,EAAIuB,SAAS,iBAAiBvB,EAAIwB,cAAc,QAAU,KAAK,aAAa,GAAG,MAAQ,GAAG,MAAQ,GAAG,SAAW,GAAG,SAAW,IAAIhB,GAAG,CAAC,gBAAgB,SAASC,GAAQT,EAAIsB,OAAOb,GAAQ,iBAAiB,SAASA,GAAQT,EAAIsB,OAAOb,GAAQ,kBAAkB,SAASA,GAAQT,EAAIuB,SAASd,GAAQ,mBAAmB,SAASA,GAAQT,EAAIuB,SAASd,GAAQ,SAAWT,EAAIyB,YAAYC,YAAY1B,EAAI2B,GAAG,CAAC,CAACC,IAAI,SAASC,GAAG,SAASd,GACtiC,IAAIe,EAAQf,EAAIe,MACZC,EAAOhB,EAAIgB,KACXH,EAAMb,EAAIiB,MAAMJ,IACpB,MAAO,CAAE5B,EAAIiC,IAAIjC,EAAIkC,MAAQH,EAAK/B,EAAIkC,KAAM,CAAmB,GAAjBH,EAAK/B,EAAIkC,KAAW,EAASlC,EAAIkC,IAAK,CAAClC,EAAImC,GAAG,IAAInC,EAAIoC,GAAGN,GAAO,QAAuC9B,EAAIqC,MAAMrC,EAAIqC,KAAOrC,EAAIiC,IAAIjC,EAAIkC,MAAQH,EAAK/B,EAAIkC,MAAyB,GAAjBH,EAAK/B,EAAIkC,KAAY,CAAS,MAAPN,EAAa,CAACxB,EAAG,OAAO,CAACJ,EAAImC,GAAGnC,EAAIoC,GAAGN,OAAW9B,EAAIqC,KAAa,QAAPT,EAAe,CAACxB,EAAG,eAAe,CAACkC,WAAW,CAAC,CAACC,KAAK,WAAWC,QAAQ,aAAaV,MAAM,WAAaW,WAAW,eAAeC,MAAM,CAAE,YAAa1C,EAAI2C,OAAOC,IAAIhB,IAAOrB,MAAM,CAAC,KAAOqB,EAAI,YAAc,IAAIiB,MAAM,CAACf,MAAOC,EAAKH,GAAMkB,SAAS,SAAUC,GAAM/C,EAAIgD,KAAKjB,EAAMH,EAAKmB,IAAMN,WAAW,gBAAgBzC,EAAIqC,MAAMrC,EAAIqC,QAAQ,CAACT,IAAI,YAAYC,GAAG,SAASoB,GAAK,MAAO,CAAuB,GAArBA,EAAIlB,KAAK/B,EAAIkC,KAAW,CAAC9B,EAAG,WAAW,CAACE,YAAY,OAAOC,MAAM,CAAC,KAAO,MAAMC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIY,OAAOqC,EAAIlB,SAAS,CAAC3B,EAAG,0BAA0B,GAAGA,EAAG,WAAW,CAACE,YAAY,OAAOC,MAAM,CAAC,KAAO,MAAMC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIkD,SAASD,EAAIlB,SAAS,CAAC3B,EAAG,kBAAkB,IAAI,CAAEJ,EAAIiC,IAAIjC,EAAIkC,MAAQe,EAAIlB,KAAK/B,EAAIkC,KAAM9B,EAAG,WAAW,CAACE,YAAY,OAAOC,MAAM,CAAC,SAAyB,GAAdP,EAAImD,QAAqC,GAAnBnD,EAAIoD,YAAoB,QAAU,UAAU,KAAO,MAAM5C,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIqD,OAAOJ,EAAIlB,SAAS,CAAC3B,EAAG,yBAAyB,GAAGJ,EAAIqC,KAAMrC,EAAIiC,IAAIjC,EAAIkC,MAAQe,EAAIlB,KAAK/B,EAAIkC,KAAM9B,EAAG,WAAW,CAACE,YAAY,OAAOC,MAAM,CAAC,SAAyB,GAAdP,EAAImD,QAAqC,GAAnBnD,EAAIoD,YAAoB,QAAU,UAAU,KAAO,MAAM5C,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIsD,MAAML,EAAIlB,SAAS,CAAC3B,EAAG,iBAAiB,GAAGJ,EAAIqC,KAAMrC,EAAIiC,IAAIjC,EAAIkC,MAAQe,EAAIlB,KAAK/B,EAAIkC,KAAM9B,EAAG,WAAW,CAACE,YAAY,OAAOC,MAAM,CAAC,QAAU,UAAU,KAAO,MAAMC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIY,OAAOqC,EAAIlB,SAAS,CAAC3B,EAAG,0BAA0B,GAAGJ,EAAIqC,KAAMrC,EAAIiC,IAAIjC,EAAIkC,MAAQe,EAAIlB,KAAK/B,EAAIkC,KAAM9B,EAAG,WAAW,CAACE,YAAY,OAAOC,MAAM,CAAC,QAAU,UAAU,KAAO,MAAMC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIkD,SAASD,EAAIlB,SAAS,CAAC3B,EAAG,kBAAkB,GAAGJ,EAAIqC,SAAS,CAACT,IAAI,aAAaC,GAAG,SAAS0B,GAAM,MAAO,CAACnD,EAAG,KAAK,CAACG,MAAM,CAAC,QAAUgD,EAAKC,UAAU,CAACpD,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACE,YAAY,OAAOC,MAAM,CAAC,GAAK,MAAM,CAACH,EAAG,eAAe,CAACE,YAAY,OAAOC,MAAM,CAAC,MAAQ,WAAW,YAAY,eAAe,gBAAgB,IAAI,iBAAiB,QAAQ,aAAa,OAAO,CAACH,EAAG,gBAAgB,CAACG,MAAM,CAAC,KAAO,OAAO,CAACH,EAAG,eAAe,CAACG,MAAM,CAAC,GAAK,eAAe,KAAO,SAAS,YAAc,kBAAkBsC,MAAM,CAACf,MAAO9B,EAAU,OAAE8C,SAAS,SAAUC,GAAM/C,EAAIoB,OAAO2B,GAAKN,WAAW,YAAYrC,EAAG,uBAAuB,CAACA,EAAG,WAAW,CAACG,MAAM,CAAC,UAAYP,EAAIoB,QAAQZ,GAAG,CAAC,MAAQ,SAASC,GAAQT,EAAIoB,OAAS,MAAM,CAACpB,EAAImC,GAAG,YAAY,IAAI,IAAI,IAAI,GAAG/B,EAAG,QAAQ,CAACE,YAAY,OAAOC,MAAM,CAAC,GAAK,MAAM,CAACH,EAAG,eAAe,CAACE,YAAY,OAAOC,MAAM,CAAC,MAAQ,UAAU,YAAY,kBAAkB,gBAAgB,IAAI,gBAAgB,IAAI,gBAAgB,IAAI,iBAAiB,QAAQ,aAAa,OAAO,CAACH,EAAG,gBAAgB,CAACG,MAAM,CAAC,GAAK,kBAAkB,QAAUP,EAAIyD,YAAY,KAAO,MAAMZ,MAAM,CAACf,MAAO9B,EAAW,QAAE8C,SAAS,SAAUC,GAAM/C,EAAImB,QAAQ4B,GAAKN,WAAW,cAAc,IAAI,GAAGrC,EAAG,QAAQ,CAACE,YAAY,kBAAkBC,MAAM,CAAC,GAAK,MAAM,CAACH,EAAG,OAAO,CAACJ,EAAImC,GAAG,UAAUnC,EAAIoC,GAAGpC,EAAIkB,aAAa,MAAMlB,EAAIoC,GAAGpC,EAAI0D,WAAW,OAAO1D,EAAIoC,GAAGpC,EAAI2D,WAAW,OAAOvD,EAAG,WAAW,CAACE,YAAY,YAAYC,MAAM,CAAC,SAAyB,GAAdP,EAAImD,QAAqC,GAAnBnD,EAAIoD,YAAoB,KAAO,MAAM5C,GAAG,CAAC,MAAQR,EAAI4D,QAAQ,CAACxD,EAAG,IAAI,CAACJ,EAAImC,GAAG,YAAY,GAAG/B,EAAG,QAAQ,CAACE,YAAY,OAAOC,MAAM,CAAC,GAAK,MAAM,CAACH,EAAG,eAAe,CAACW,IAAI,SAASR,MAAM,CAAC,SAAyB,GAAdP,EAAImD,QAAqC,GAAnBnD,EAAIoD,YAAoB,aAAapD,EAAI2D,UAAU,WAAW3D,EAAImB,QAAQ,KAAO,KAAK,MAAQ,OAAO,aAAa,QAAQ,YAAY,OAAO,YAAY,OAAO,YAAY,QAAQX,GAAG,CAAC,OAASR,EAAI6D,aAAa,MAAQ7D,EAAI8D,eAAejB,MAAM,CAACf,MAAO9B,EAAe,YAAE8C,SAAS,SAAUC,GAAM/C,EAAIkB,YAAY6B,GAAKN,WAAW,kBAAkB,IAAI,IAAI,MAAM,CAACb,IAAI,cAAcC,GAAG,SAASoB,GAAK,MAAO,CAAC7C,EAAG,SAAS,CAACA,EAAG,KAAKJ,EAAI+D,GAAId,EAAQ,MAAE,SAASnB,EAAMF,GAAK,OAAOxB,EAAG,KAAK,CAACwB,IAAIA,GAAK,CAAC5B,EAAImC,GAAGnC,EAAIoC,GAAGR,GAAK,KAAK5B,EAAIoC,GAAGN,SAAY,aAAa,GAAG1B,EAAG,UAAU,CAACG,MAAM,CAAC,GAAKP,EAAIgE,UAAUC,GAAG,MAAQjE,EAAIgE,UAAUE,MAAM,UAAU,IAAI1D,GAAG,CAAC,KAAOR,EAAImE,iBAAiB,CAAC/D,EAAG,MAAM,CAACJ,EAAImC,GAAGnC,EAAIoC,GAAGpC,EAAIgE,UAAUI,eAAe,IAAI,IACnqIC,EAAkB,G,4GC4HtBC,EAAAA,WAAAA,IAAQA,EAAAA,GAAa,CACrBC,SAAAA,EACAC,cAAAA,cAGAF,EAAAA,WAAAA,UAAc,WAAYA,KAS1B,OACAG,WAAAA,CACAC,sBAAAA,EAAAA,GAGAnB,OACA,OACAoB,MAAAA,GAEA1D,OAAAA,CACA,CACAW,IAAAA,KACAgD,UAAAA,CAAAA,EAAAA,EAAAA,IACA,EAEAC,UAAAA,EACAC,QAAAA,cACAC,QAAAA,2BACAC,QAAAA,CAAAC,MAAAA,QAGA,CAAArD,IAAAA,OAAAiD,UAAAA,EAAAC,QAAAA,cAAAC,QAAAA,eAAAC,QAAAA,CAAAC,MAAAA,QACA,CACArD,IAAAA,MACAc,MAAAA,cACAoC,QAAAA,cACAC,QAAAA,eACAC,QAAAA,CAAAC,MAAAA,SAGAtB,UAAAA,EACAzC,YAAAA,EACAC,QAAAA,EACAsC,YAAAA,CAAAA,EAAAA,GAAAA,GAAAA,CAAA3B,MAAAA,IAAAoD,KAAAA,eACA5D,OAAAA,GACAC,UAAAA,EACAC,cAAAA,MACAJ,OAAAA,KACAC,SAAAA,GACA2C,UAAAA,CACAC,GAAAA,aACAC,MAAAA,GACAE,QAAAA,IAEAnC,IAAAA,GACAC,IAAAA,KACAwB,UAAAA,EACAP,QAAAA,EACAgC,SAAAA,GACAC,KAAAA,KAIAC,MAAAA,CACA3B,UAAAA,SAAAA,EAAAA,KAEAxC,YAAAA,SAAAA,KAEAyC,UAAAA,SAAAA,EAAAA,MAGA2B,SAAAA,GAEAC,YAEAC,QAAAA,CACAC,UAAAA,EAAAA,EAAAA,WAAAA,SAAAA,GACAC,MAAAA,2BAAAA,KACAC,MAAAC,GACA,WAEAD,MAAApC,IACAsC,QAAAA,IAAAA,KAAAA,UAAAA,IACA,2BAEA,KACA/B,kBAEA9C,WAAAA,GACA,oBACA,YACA,WACA,aACA,OACA,uBAEA,GADA8E,EAAAA,GAAAA,UAAAA,UAAAA,YAAAA,cAAAA,IACA,UACA,eACAA,EAAAA,GAAAA,YAAAA,IAEA,kBACAH,MAAAI,IAIA,GAFAC,EAAAA,UAAAA,EAAAA,KAAAA,UACAA,EAAAA,UAAAA,EAAAA,KAAAA,SACA,gBACA,SACAC,EAAAA,KAAAA,KAAAA,EACAA,EAAAA,UAAAA,MACAF,EAAAA,KAAAA,KAAAA,QAAAA,GAEA,kCAGAG,QAAAA,GACA,SASA,OARA3C,EAAAA,SAAAA,IACA,SACA4C,OAAAA,KAAAA,GAAAA,SAAAA,IACA,QACAC,EAAAA,GAAAA,EAAAA,MAEAC,EAAAA,KAAAA,MAEA,GAEAxC,eACA,YACA,gBAEAD,QACA,eACA,8BAEAP,OAAAA,GACA,iDAGA,yCAMAzC,OAAAA,GACA,wCACA,MAEA,YADA,2BAGA,oCACA,eACA,YAEA,mBAIAsC,SAAAA,GACA,gBACA,iBACA,cAEA,eACA,+BAGAI,MAAAA,GACA,uBAEAgD,OAAAA,GACA,WACA,qCACA,wBAEAlD,YACA,sCAEAmD,UACA,SAIA,OAHA,wBACA,mBAEA,GAEAC,SAAAA,GACA,eACA,oBACAzE,EAAAA,GAAAA,KAAAA,IAAAA,KAIA0E,YAAAA,GACA,mBACA,MACA,2BAEAC,SAAAA,GACA,mBACA,8BAEAC,MAAAA,EAAAA,EAAAA,MACA,uBACAzC,MAAAA,cACA0C,QAAAA,EACAC,OAAAA,KAGA,aACA,yCACAlB,MAAAI,IACA,4BACA,eACA,gCAEAe,OAAAC,IACAC,EAAAA,EAAAA,QAAAA,OAGA,gBACA,4CACArB,MAAAI,IACA,4BACA,eACA,YACA,gCAEAe,OAAAC,IACAC,EAAAA,EAAAA,QAAAA,OAGA,aACA,iDACArB,MAAAI,IACA,qBAEA,YADA,4BAGA,4BACA,yCACA,yCACA,gCAEAe,OAAAC,IACAC,EAAAA,EAAAA,QAAAA,OAIA,eACA,kDACArB,MAAAI,IACA,yBAOAe,OAAAC,IACAC,EAAAA,EAAAA,QAAAA,OAKAC,KAAAA,EAAAA,EAAAA,GACA,uCACA,gDACA,yDAEA9C,iBACA,wBACA,2BAEA1C,WAAAA,GACA,wBACA,sBCxZ+Q,I,UCO3QyF,GAAY,OACd,EACAnH,EACAsE,GACA,EACA,KACA,KACA,MAIF,EAAe6C,EAAiB,S,oBClBhC,4hjB,6CCEA,IAAIC,EAAMC,aAAaC,QAAQ,SAC/B,OAAeC,IAAAA,OAAa,CACxBC,QAAS,GACTC,QAAS,CACLC,cAAgB,UAASN,IACzB,eAAgB,qC,oBCPxB,QACIO,QAAQX,GACJ,IAAIY,EAAOC,KAAKC,MAAMD,KAAKE,UAAUf,IAAMgB,OAC3C,GAAY,KAARJ,EAAa,CACb,IAAIK,EAAMJ,KAAKC,MAAMD,KAAKE,UAAUf,EAAInB,WAAWrC,KAAK0E,QACxDC,MAAMF,QAEFjB,EAAInB,SACuB,KAAvBmB,EAAInB,SAASmC,OACbG,MAAM,qCACsB,KAAvBnB,EAAInB,SAASmC,QAClBG,MAAM,mBACHnB,EAAIoB,QACXD,MAAMN,KAAKE,UAAUf,EAAIoB,UAClBpB,EAAIkB,SACXC,MAAMN,KAAKE,UAAUf,EAAIkB,a,6CCbzC,MAAMG,EAAc,KAClB,MAAMC,EAAiB,CACrBd,QAAS,GACTe,OAAQ,MACRd,QAAS,CAEP,eAAgB,mCAKpB,IAAIe,EAAWC,IAAAA,OAAaH,GAS5B,OANAE,EAASE,aAAaN,QAAQO,KAAI,SAAUC,GAC1C,MAAMxB,EAAQC,aAAaC,QAAQ,SAEnC,OADAsB,EAAOnB,QAAQC,cAAiBN,EAAS,UAASA,IAAU,GACrDwB,KAGFJ,GAGT,OAAeH","sources":["webpack://vue_start_1/./src/views/Ban/BanTblEdit.vue?a397","webpack://vue_start_1/src/views/Ban/BanTblEdit.vue","webpack://vue_start_1/./src/views/Ban/BanTblEdit.vue?aa41","webpack://vue_start_1/./src/views/Ban/BanTblEdit.vue?e980","webpack://vue_start_1/./src/views/Ban/BanTblEdit.vue","webpack://vue_start_1/./src/Repository.js","webpack://vue_start_1/./src/TumLum.js","webpack://vue_start_1/./src/fetchClient.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"MonHocToan\"},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./BanTblEdit.vue').default}}),_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSave.apply(null, arguments)}}},[_c('b-table',{ref:\"mytable\",attrs:{\"thead-class\":\"myTable\",\"items\":_vm.myProvider,\"fields\":_vm.fields,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"filter-included-fields\":_vm.filterOn,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"stacked\":\"sm\",\"show-empty\":\"\",\"small\":\"\",\"fixed\":\"\",\"outlined\":\"\",\"bordered\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\nvar value = ref.value;\nvar item = ref.item;\nvar key = ref.field.key;\nreturn [(_vm.sel[_vm.pri] != item[_vm.pri])?[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:[_vm._v(\" \"+_vm._s(value)+\" \")]]:_vm._e()]:_vm._e(),((_vm.sel[_vm.pri] == item[_vm.pri] || item[_vm.pri] == 0))?[(key == 'Id')?[_c('span',[_vm._v(_vm._s(value))])]:_vm._e(),(key == 'Name')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e()]:_vm._e()]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnDel(row.item)}}},[_c('b-icon-trash')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}},{key:\"bottom-row\",fn:function(data){return [_c('td',{attrs:{\"colspan\":data.columns}},[_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Tìm kiếm\",\"label-for\":\"filter-input\",\"label-cols-sm\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-input-group',{attrs:{\"size\":\"sm\"}},[_c('b-form-input',{attrs:{\"id\":\"filter-input\",\"type\":\"search\",\"placeholder\":\"Type to Search\"},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(\"Clear\")])],1)],1)],1)],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Số dòng\",\"label-for\":\"per-page-select\",\"label-cols-sm\":\"6\",\"label-cols-md\":\"4\",\"label-cols-lg\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-form-select',{attrs:{\"id\":\"per-page-select\",\"options\":_vm.pageOptions,\"size\":\"sm\"},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1),_c('b-col',{staticClass:\"my-1 text-right\",attrs:{\"sm\":\"6\"}},[_c('span',[_vm._v(\"page : \"+_vm._s(_vm.currentPage)+\" / \"+_vm._s(_vm.last_page)+\" of \"+_vm._s(_vm.totalRows)+\" \")]),_c('b-button',{staticClass:\"mr-1 mb-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"size\":\"sm\"},on:{\"click\":_vm.OnAdd}},[_c('b',[_vm._v(\"Add\")])])],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-pagination',{ref:\"mypage\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"size\":\"sm\",\"align\":\"fill\",\"first-text\":\"First\",\"prev-text\":\"Prev\",\"next-text\":\"Next\",\"last-text\":\"Last\"},on:{\"change\":_vm.onChangePage,\"input\":_vm.onPagingInput},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1)]}},{key:\"row-details\",fn:function(row){return [_c('b-card',[_c('ul',_vm._l((row.item),function(value,key){return _c('li',{key:key},[_vm._v(_vm._s(key)+\": \"+_vm._s(value))])}),0)])]}}])})],1),_c('b-modal',{attrs:{\"id\":_vm.infoModal.id,\"title\":_vm.infoModal.title,\"ok-only\":\"\"},on:{\"hide\":_vm.resetInfoModal}},[_c('pre',[_vm._v(_vm._s(_vm.infoModal.content))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"MonHocToan\">\r\n        <raw-loader :mytxt=\"require('!raw-loader!./BanTblEdit.vue').default\"></raw-loader>\r\n        <b-container fluid>\r\n            <!-- User Interface controls -->\r\n            <!-- Main table element -->\r\n            <form @submit.stop.prevent=\"onSave\">\r\n                <b-table thead-class=\"myTable\" ref=\"mytable\" :items=\"myProvider\" :fields=\"fields\"\r\n                    :current-page=\"currentPage\" :per-page=\"perPage\" :filter=\"filter\" :filter-included-fields=\"filterOn\"\r\n                    :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" :sort-direction=\"sortDirection\" stacked=\"sm\"\r\n                    show-empty small fixed outlined bordered @filtered=\"onFiltered\">\r\n                    <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n                        <template v-if=\"sel[pri] != item[pri]\">\r\n                            <template v-if=\"item[pri] != 0\">\r\n                                <template v-if=\"key == pri\">\r\n                                    {{ value }}\r\n                                </template>\r\n                                <template v-else>\r\n                                    {{ value }}\r\n                                </template>\r\n                            </template>\r\n                        </template>\r\n                        <template v-if=\"(sel[pri] == item[pri] || item[pri] == 0)\">\r\n                            <template v-if=\"key == 'Id'\">\r\n                                <span>{{ value }}</span>\r\n                            </template>\r\n                            <template v-if=\"key == 'Name'\">\r\n                                <b-form-input v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\" placeholder=\"\"\r\n                                    :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                                </b-form-input>\r\n                            </template>\r\n                        </template>\r\n                        <!-- { \"id\": 1, \"firstName\": \"\", \"lastName\": \"\", \"age\": 65, \"active\": true } -->\r\n                    </template>\r\n                    <template #cell(cmd)=\"row\">\r\n                        <template v-if=\"row.item[pri] == 0\">\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                        <template v-else>\r\n                            <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnEdit(row.item)\">\r\n                                <b-icon-pencil-square></b-icon-pencil-square>\r\n                            </b-button>\r\n                            <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnDel(row.item)\">\r\n                                <b-icon-trash></b-icon-trash>\r\n                            </b-button>\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                    </template>\r\n\r\n                    <template #bottom-row=\"data\">\r\n                        <td :colspan=\"data.columns\">\r\n                            <b-row>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Tìm kiếm\" label-for=\"filter-input\" label-cols-sm=\"3\"\r\n                                        label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                                        <b-input-group size=\"sm\">\r\n                                            <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\r\n                                                placeholder=\"Type to Search\">\r\n                                            </b-form-input>\r\n\r\n                                            <b-input-group-append>\r\n                                                <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                                            </b-input-group-append>\r\n                                        </b-input-group>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Số dòng\" label-for=\"per-page-select\" label-cols-sm=\"6\"\r\n                                        label-cols-md=\"4\" label-cols-lg=\"3\" label-align-sm=\"right\" label-size=\"sm\"\r\n                                        class=\"mb-0\">\r\n                                        <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\"\r\n                                            size=\"sm\">\r\n                                        </b-form-select>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n\r\n                                <b-col sm=\"6\" class=\"my-1 text-right\">\r\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\r\n                                    <b-button :disabled=\"adding == true || isEditing() == true\" class=\"mr-1 mb-1\" size=\"sm\"\r\n                                        @click=\"OnAdd\">\r\n                                        <b>Add</b></b-button>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-pagination :disabled=\"adding == true || isEditing() == true\" ref=\"mypage\"\r\n                                        v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" size=\"sm\"\r\n                                        align=\"fill\" @change=\"onChangePage\" @input=\"onPagingInput\" first-text=\"First\"\r\n                                        prev-text=\"Prev\" next-text=\"Next\" last-text=\"Last\">\r\n                                    </b-pagination>\r\n                                </b-col>\r\n                            </b-row>\r\n\r\n                        </td>\r\n                    </template>\r\n\r\n                    <template #row-details=\"row\">\r\n                        <b-card>\r\n                            <ul>\r\n                                <li v-for=\"(value, key) in row.item\" :key=\"key\">{{ key }}: {{ value }}</li>\r\n                            </ul>\r\n                        </b-card>\r\n                    </template>\r\n                </b-table>\r\n\r\n            </form>\r\n            <!-- Info modal -->\r\n            <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n                <pre>{{ infoModal.content }}</pre>\r\n            </b-modal>\r\n        </b-container>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\n//import \"vue-select/dist/vue-select.css\";\r\n\r\nimport VueTypeaheadBootstrap from \"vue-typeahead-bootstrap\";\r\nimport { debounce } from \"lodash\";\r\nimport Repository from \"@/Repository\"\r\nimport fetchClient from \"@/fetchClient\";\r\nimport moment from \"moment\";\r\nimport TumLum from \"@/TumLum\";\r\nexport default {\r\n    components: {\r\n        VueTypeaheadBootstrap\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [\r\n                {\r\n                    key: 'Id',\r\n                    formatter: (value, key, item) => {\r\n                        return value;\r\n                    },\r\n                    sortable: true,\r\n                    thClass: 'text-center',\r\n                    tdClass: 'text-center align-middle',\r\n                    thStyle: { width: \"10%\" },\r\n                },\r\n                //{ key: 'TenHocSinh', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"80%\" }, },\r\n                { key: 'Name', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"80%\" }, },\r\n                {\r\n                    key: 'cmd',\r\n                    class: 'text-center',\r\n                    thClass: 'text-center',\r\n                    tdClass: 'align-middle',\r\n                    thStyle: { width: \"10%\" }\r\n                }\r\n            ],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            pageOptions: [5, 10, 15, { value: 100, text: \"Show a lot\" }],\r\n            sortBy: '',\r\n            sortDesc: false,\r\n            sortDirection: 'asc',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: 'info-modal',\r\n                title: '',\r\n                content: ''\r\n            },\r\n            sel: {},\r\n            pri: \"Id\",\r\n            last_page: 0,\r\n            adding: false,\r\n            ListAuto: [],\r\n            Lops: [],\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        last_page: function (newValue, oldValue) {\r\n        },\r\n        currentPage: function (val) {\r\n        },\r\n        totalRows: function (newValue, oldValue) {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        OnSearch: debounce(function (query) {\r\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(JSON.stringify(data))\r\n                    this.ListAuto = data.items;\r\n                });\r\n        }, 500),\r\n        onPagingInput() {\r\n        },\r\n        myProvider(ctx) {\r\n            let currentPage = ctx.currentPage;\r\n            let perPage = ctx.perPage;\r\n            let sortBy = ctx.sortBy;\r\n            let sortDesc = ctx.sortDesc;\r\n            let vm = this;\r\n            let url = `/api/Ban4/GetPage2`;\r\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\r\n            if (ctx.filter) {\r\n                let filter = ctx.filter;\r\n                url = `${url}&filter=${filter}`;\r\n            }\r\n            return fetchClient.get(url)\r\n                .then(res => {\r\n                    //this.LdsLop();\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    if (this.adding == true) {\r\n                        let r = {};\r\n                        r[this.pri] = 0;\r\n                        r[\"TenLop\"] = \"xxx\";\r\n                        res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                })\r\n        },\r\n        mapData(data) {\r\n            let kq = [];\r\n            data.forEach(obj => {\r\n                let x = {};\r\n                Object.keys(obj).forEach(key => {\r\n                    let k = key;\r\n                    x[k] = obj[key];\r\n                });\r\n                kq.push(x);\r\n            })\r\n            return kq;\r\n        },\r\n        onChangePage() {\r\n            this.sel = {};\r\n            this.adding = false;\r\n        },\r\n        OnAdd() {\r\n            this.adding = true;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        OnEdit(item) {\r\n            if (JSON.stringify(this.sel) != \"{}\" || this.adding == true) {\r\n                return;\r\n            }\r\n            this.sel = JSON.parse(JSON.stringify(item));\r\n            return;\r\n            //this.getById(item[this.pri]).then(res => {\r\n            //    this.sel = res.data;\r\n            //})\r\n        },\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r);\r\n                } else {\r\n                    this.Update(r);\r\n                }\r\n            });\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] != 0) {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            } else {\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            }\r\n        },\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]);\r\n        },\r\n        delRow(item) {\r\n            let id = item.id;\r\n            let index = this.items.findIndex(x => x.id == id);\r\n            this.items.splice(index, 1);\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != \"{}\"\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x.id == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        gotoPage(page) {\r\n            this.currentPage = page;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async Add(r) {\r\n            return await fetchClient.post(`/api/Ban4/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.adding = false;\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`/api/Ban4/Update`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.adding = false;\r\n                    this.sel = {};\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Del(id) {\r\n            return await fetchClient.get(`/api/Ban4/Delete?id=${id}`)\r\n                .then(res => {\r\n                    if (res.data.kq == 'nook') {\r\n                        this.toast(`${res.data.msg}`);\r\n                        return;\r\n                    }\r\n                    this.toast(`${res.data.msg}`);\r\n                    let lastPage = this.getLastPage(this.totalRows - 1);\r\n                    if (lastPage < this.currentPage) this.currentPage = lastPage;\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n\r\n        async LdsLop() {\r\n            return await fetchClient.get(`/api/LopHoc4/LdsComboItem`)\r\n                .then(res => {\r\n                    this.Lops = res.data.list;\r\n                    //alert(JSON.stringify(res));\r\n                    /*{\"data\":{\"msg\":\"get ok\",\r\n                    \"list\":[{\"label\":\"Lớp 11A\",\"id\":1}]},\"\r\n                    */\r\n\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n\r\n\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = ''\r\n            this.infoModal.content = ''\r\n        },\r\n        onFiltered(filteredItems) {\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BanTblEdit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BanTblEdit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BanTblEdit.vue?vue&type=template&id=214bfe1e&\"\nimport script from \"./BanTblEdit.vue?vue&type=script&lang=js&\"\nexport * from \"./BanTblEdit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div class=\\\"MonHocToan\\\">\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./BanTblEdit.vue').default\\\"></raw-loader>\\r\\n        <b-container fluid>\\r\\n            <!-- User Interface controls -->\\r\\n            <!-- Main table element -->\\r\\n            <form @submit.stop.prevent=\\\"onSave\\\">\\r\\n                <b-table thead-class=\\\"myTable\\\" ref=\\\"mytable\\\" :items=\\\"myProvider\\\" :fields=\\\"fields\\\"\\r\\n                    :current-page=\\\"currentPage\\\" :per-page=\\\"perPage\\\" :filter=\\\"filter\\\" :filter-included-fields=\\\"filterOn\\\"\\r\\n                    :sort-by.sync=\\\"sortBy\\\" :sort-desc.sync=\\\"sortDesc\\\" :sort-direction=\\\"sortDirection\\\" stacked=\\\"sm\\\"\\r\\n                    show-empty small fixed outlined bordered @filtered=\\\"onFiltered\\\">\\r\\n                    <template v-slot:cell()=\\\"{ value, item, field: { key } }\\\">\\r\\n                        <template v-if=\\\"sel[pri] != item[pri]\\\">\\r\\n                            <template v-if=\\\"item[pri] != 0\\\">\\r\\n                                <template v-if=\\\"key == pri\\\">\\r\\n                                    {{ value }}\\r\\n                                </template>\\r\\n                                <template v-else>\\r\\n                                    {{ value }}\\r\\n                                </template>\\r\\n                            </template>\\r\\n                        </template>\\r\\n                        <template v-if=\\\"(sel[pri] == item[pri] || item[pri] == 0)\\\">\\r\\n                            <template v-if=\\\"key == 'Id'\\\">\\r\\n                                <span>{{ value }}</span>\\r\\n                            </template>\\r\\n                            <template v-if=\\\"key == 'Name'\\\">\\r\\n                                <b-form-input v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\" placeholder=\\\"\\\"\\r\\n                                    :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                                </b-form-input>\\r\\n                            </template>\\r\\n                        </template>\\r\\n                        <!-- { \\\"id\\\": 1, \\\"firstName\\\": \\\"\\\", \\\"lastName\\\": \\\"\\\", \\\"age\\\": 65, \\\"active\\\": true } -->\\r\\n                    </template>\\r\\n                    <template #cell(cmd)=\\\"row\\\">\\r\\n                        <template v-if=\\\"row.item[pri] == 0\\\">\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                        <template v-else>\\r\\n                            <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnEdit(row.item)\\\">\\r\\n                                <b-icon-pencil-square></b-icon-pencil-square>\\r\\n                            </b-button>\\r\\n                            <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnDel(row.item)\\\">\\r\\n                                <b-icon-trash></b-icon-trash>\\r\\n                            </b-button>\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                    </template>\\r\\n\\r\\n                    <template #bottom-row=\\\"data\\\">\\r\\n                        <td :colspan=\\\"data.columns\\\">\\r\\n                            <b-row>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Tìm kiếm\\\" label-for=\\\"filter-input\\\" label-cols-sm=\\\"3\\\"\\r\\n                                        label-align-sm=\\\"right\\\" label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                                        <b-input-group size=\\\"sm\\\">\\r\\n                                            <b-form-input id=\\\"filter-input\\\" v-model=\\\"filter\\\" type=\\\"search\\\"\\r\\n                                                placeholder=\\\"Type to Search\\\">\\r\\n                                            </b-form-input>\\r\\n\\r\\n                                            <b-input-group-append>\\r\\n                                                <b-button :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\">Clear</b-button>\\r\\n                                            </b-input-group-append>\\r\\n                                        </b-input-group>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Số dòng\\\" label-for=\\\"per-page-select\\\" label-cols-sm=\\\"6\\\"\\r\\n                                        label-cols-md=\\\"4\\\" label-cols-lg=\\\"3\\\" label-align-sm=\\\"right\\\" label-size=\\\"sm\\\"\\r\\n                                        class=\\\"mb-0\\\">\\r\\n                                        <b-form-select id=\\\"per-page-select\\\" v-model=\\\"perPage\\\" :options=\\\"pageOptions\\\"\\r\\n                                            size=\\\"sm\\\">\\r\\n                                        </b-form-select>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1 text-right\\\">\\r\\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\\r\\n                                    <b-button :disabled=\\\"adding == true || isEditing() == true\\\" class=\\\"mr-1 mb-1\\\" size=\\\"sm\\\"\\r\\n                                        @click=\\\"OnAdd\\\">\\r\\n                                        <b>Add</b></b-button>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-pagination :disabled=\\\"adding == true || isEditing() == true\\\" ref=\\\"mypage\\\"\\r\\n                                        v-model=\\\"currentPage\\\" :total-rows=\\\"totalRows\\\" :per-page=\\\"perPage\\\" size=\\\"sm\\\"\\r\\n                                        align=\\\"fill\\\" @change=\\\"onChangePage\\\" @input=\\\"onPagingInput\\\" first-text=\\\"First\\\"\\r\\n                                        prev-text=\\\"Prev\\\" next-text=\\\"Next\\\" last-text=\\\"Last\\\">\\r\\n                                    </b-pagination>\\r\\n                                </b-col>\\r\\n                            </b-row>\\r\\n\\r\\n                        </td>\\r\\n                    </template>\\r\\n\\r\\n                    <template #row-details=\\\"row\\\">\\r\\n                        <b-card>\\r\\n                            <ul>\\r\\n                                <li v-for=\\\"(value, key) in row.item\\\" :key=\\\"key\\\">{{ key }}: {{ value }}</li>\\r\\n                            </ul>\\r\\n                        </b-card>\\r\\n                    </template>\\r\\n                </b-table>\\r\\n\\r\\n            </form>\\r\\n            <!-- Info modal -->\\r\\n            <b-modal :id=\\\"infoModal.id\\\" :title=\\\"infoModal.title\\\" ok-only @hide=\\\"resetInfoModal\\\">\\r\\n                <pre>{{ infoModal.content }}</pre>\\r\\n            </b-modal>\\r\\n        </b-container>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n});\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\n//import \\\"vue-select/dist/vue-select.css\\\";\\r\\n\\r\\nimport VueTypeaheadBootstrap from \\\"vue-typeahead-bootstrap\\\";\\r\\nimport { debounce } from \\\"lodash\\\";\\r\\nimport Repository from \\\"@/Repository\\\"\\r\\nimport fetchClient from \\\"@/fetchClient\\\";\\r\\nimport moment from \\\"moment\\\";\\r\\nimport TumLum from \\\"@/TumLum\\\";\\r\\nexport default {\\r\\n    components: {\\r\\n        VueTypeaheadBootstrap\\r\\n    },\\r\\n\\r\\n    data() {\\r\\n        return {\\r\\n            items: [\\r\\n            ],\\r\\n            fields: [\\r\\n                {\\r\\n                    key: 'Id',\\r\\n                    formatter: (value, key, item) => {\\r\\n                        return value;\\r\\n                    },\\r\\n                    sortable: true,\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'text-center align-middle',\\r\\n                    thStyle: { width: \\\"10%\\\" },\\r\\n                },\\r\\n                //{ key: 'TenHocSinh', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"80%\\\" }, },\\r\\n                { key: 'Name', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"80%\\\" }, },\\r\\n                {\\r\\n                    key: 'cmd',\\r\\n                    class: 'text-center',\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'align-middle',\\r\\n                    thStyle: { width: \\\"10%\\\" }\\r\\n                }\\r\\n            ],\\r\\n            totalRows: 1,\\r\\n            currentPage: 1,\\r\\n            perPage: 5,\\r\\n            pageOptions: [5, 10, 15, { value: 100, text: \\\"Show a lot\\\" }],\\r\\n            sortBy: '',\\r\\n            sortDesc: false,\\r\\n            sortDirection: 'asc',\\r\\n            filter: null,\\r\\n            filterOn: [],\\r\\n            infoModal: {\\r\\n                id: 'info-modal',\\r\\n                title: '',\\r\\n                content: ''\\r\\n            },\\r\\n            sel: {},\\r\\n            pri: \\\"Id\\\",\\r\\n            last_page: 0,\\r\\n            adding: false,\\r\\n            ListAuto: [],\\r\\n            Lops: [],\\r\\n        }\\r\\n    },\\r\\n\\r\\n    watch: {\\r\\n        last_page: function (newValue, oldValue) {\\r\\n        },\\r\\n        currentPage: function (val) {\\r\\n        },\\r\\n        totalRows: function (newValue, oldValue) {\\r\\n        }\\r\\n    },\\r\\n    computed: {\\r\\n    },\\r\\n    mounted() {\\r\\n    },\\r\\n    methods: {\\r\\n        OnSearch: debounce(function (query) {\\r\\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\\r\\n                .then((response) => {\\r\\n                    return response.json();\\r\\n                })\\r\\n                .then((data) => {\\r\\n                    console.log(JSON.stringify(data))\\r\\n                    this.ListAuto = data.items;\\r\\n                });\\r\\n        }, 500),\\r\\n        onPagingInput() {\\r\\n        },\\r\\n        myProvider(ctx) {\\r\\n            let currentPage = ctx.currentPage;\\r\\n            let perPage = ctx.perPage;\\r\\n            let sortBy = ctx.sortBy;\\r\\n            let sortDesc = ctx.sortDesc;\\r\\n            let vm = this;\\r\\n            let url = `/api/Ban4/GetPage2`;\\r\\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\\r\\n            if (ctx.filter) {\\r\\n                let filter = ctx.filter;\\r\\n                url = `${url}&filter=${filter}`;\\r\\n            }\\r\\n            return fetchClient.get(url)\\r\\n                .then(res => {\\r\\n                    //this.LdsLop();\\r\\n                    vm.last_page = res.data.last_page;\\r\\n                    vm.totalRows = res.data.rowCount;\\r\\n                    if (this.adding == true) {\\r\\n                        let r = {};\\r\\n                        r[this.pri] = 0;\\r\\n                        r[\\\"TenLop\\\"] = \\\"xxx\\\";\\r\\n                        res.data.data.unshift(r);\\r\\n                    }\\r\\n                    return vm.mapData(res.data.data); //res.data.data;\\r\\n                })\\r\\n        },\\r\\n        mapData(data) {\\r\\n            let kq = [];\\r\\n            data.forEach(obj => {\\r\\n                let x = {};\\r\\n                Object.keys(obj).forEach(key => {\\r\\n                    let k = key;\\r\\n                    x[k] = obj[key];\\r\\n                });\\r\\n                kq.push(x);\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        onChangePage() {\\r\\n            this.sel = {};\\r\\n            this.adding = false;\\r\\n        },\\r\\n        OnAdd() {\\r\\n            this.adding = true;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        OnEdit(item) {\\r\\n            if (JSON.stringify(this.sel) != \\\"{}\\\" || this.adding == true) {\\r\\n                return;\\r\\n            }\\r\\n            this.sel = JSON.parse(JSON.stringify(item));\\r\\n            return;\\r\\n            //this.getById(item[this.pri]).then(res => {\\r\\n            //    this.sel = res.data;\\r\\n            //})\\r\\n        },\\r\\n        onSave(item) {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(item));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r);\\r\\n                } else {\\r\\n                    this.Update(r);\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        OnCancel(item) {\\r\\n            if (item[this.pri] != 0) {\\r\\n                this.doCancel(item);\\r\\n                this.sel = {};\\r\\n            } else {\\r\\n                this.adding = false;\\r\\n                this.$refs.mytable.refresh();\\r\\n            }\\r\\n        },\\r\\n        OnDel(item) {\\r\\n            this.Del(item[this.pri]);\\r\\n        },\\r\\n        delRow(item) {\\r\\n            let id = item.id;\\r\\n            let index = this.items.findIndex(x => x.id == id);\\r\\n            this.items.splice(index, 1);\\r\\n        },\\r\\n        isEditing() {\\r\\n            return JSON.stringify(this.sel) != \\\"{}\\\"\\r\\n        },\\r\\n        isAdded() {\\r\\n            let kq = false;\\r\\n            this.items.forEach(x => {\\r\\n                if (x.id == 0) kq = true;\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        doCancel(item) {\\r\\n            for (let key in item) {\\r\\n                if (item[key] != this.sel[key]) {\\r\\n                    item[key] = this.sel[key]\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        getLastPage(count) {\\r\\n            let pageSize = this.perPage;//this.tabulator.getPageSize();\\r\\n            let du = count % pageSize;\\r\\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n        },\\r\\n        gotoPage(page) {\\r\\n            this.currentPage = page;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n        async Add(r) {\\r\\n            return await fetchClient.post(`/api/Ban4/Add`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.adding = false;\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Update(r) {\\r\\n            return await fetchClient.post(`/api/Ban4/Update`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.adding = false;\\r\\n                    this.sel = {};\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Del(id) {\\r\\n            return await fetchClient.get(`/api/Ban4/Delete?id=${id}`)\\r\\n                .then(res => {\\r\\n                    if (res.data.kq == 'nook') {\\r\\n                        this.toast(`${res.data.msg}`);\\r\\n                        return;\\r\\n                    }\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    let lastPage = this.getLastPage(this.totalRows - 1);\\r\\n                    if (lastPage < this.currentPage) this.currentPage = lastPage;\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n\\r\\n        async LdsLop() {\\r\\n            return await fetchClient.get(`/api/LopHoc4/LdsComboItem`)\\r\\n                .then(res => {\\r\\n                    this.Lops = res.data.list;\\r\\n                    //alert(JSON.stringify(res));\\r\\n                    /*{\\\"data\\\":{\\\"msg\\\":\\\"get ok\\\",\\r\\n                    \\\"list\\\":[{\\\"label\\\":\\\"Lớp 11A\\\",\\\"id\\\":1}]},\\\"\\r\\n                    */\\r\\n\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n\\r\\n\\r\\n        info(item, index, button) {\\r\\n            this.infoModal.title = `Row index: ${index}`\\r\\n            this.infoModal.content = JSON.stringify(item, null, 2)\\r\\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\\r\\n        },\\r\\n        resetInfoModal() {\\r\\n            this.infoModal.title = ''\\r\\n            this.infoModal.content = ''\\r\\n        },\\r\\n        onFiltered(filteredItems) {\\r\\n            this.totalRows = filteredItems.length\\r\\n            this.currentPage = 1\\r\\n        }\\r\\n    }\\r\\n}\\r\\n</script>\";","//file name : Repository.js\nimport Axios from 'axios';\nlet token=localStorage.getItem(\"token\");//store.state.token;\nexport default Axios.create({\n    baseURL: '',\n    headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n})\n","export default {\r\n    XuLyErr(err) {\r\n        let code = JSON.parse(JSON.stringify(err)).status;\r\n        if (code == 400) {\r\n            let msg = JSON.parse(JSON.stringify(err.response)).data.message;\r\n            alert(msg);\r\n        } else {\r\n            if (err.response) {\r\n                if (err.response.status == 401)\r\n                    alert(\"Chưa đăng nhập hoặc token hết hạn\");\r\n                else if (err.response.status == 403)\r\n                    alert(\"Bạn ko có quyền\");\r\n            } else if (err.request) {\r\n                alert(JSON.stringify(err.request));\r\n            } else if (err.message) {\r\n                alert(JSON.stringify(err.message));\r\n            }\r\n        }\r\n    }\r\n}\r\n  /*\r\nimport TumLum from '@/TumLum';\r\n*/","import axios from 'axios';\r\n\r\nconst fetchClient = () => {\r\n  const defaultOptions = {\r\n    baseURL: '',\r\n    method: 'get',\r\n    headers: {\r\n      //'Content-Type': 'application/json',\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n  };\r\n\r\n  // Create instance\r\n  let instance = axios.create(defaultOptions);\r\n\r\n  // Set the AUTH token for any request\r\n  instance.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem('token');\r\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\r\n    return config;\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport default fetchClient();"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","$event","stopPropagation","preventDefault","onSave","apply","arguments","ref","myProvider","fields","currentPage","perPage","filter","filterOn","sortBy","sortDesc","sortDirection","onFiltered","scopedSlots","_u","key","fn","value","item","field","sel","pri","_v","_s","_e","directives","name","rawName","expression","class","errors","has","model","callback","$$v","$set","row","OnCancel","adding","isEditing","OnEdit","OnDel","data","columns","pageOptions","last_page","totalRows","OnAdd","onChangePage","onPagingInput","_l","infoModal","id","title","resetInfoModal","content","staticRenderFns","Vue","classes","fieldsBagName","components","VueTypeaheadBootstrap","items","formatter","sortable","thClass","tdClass","thStyle","width","text","ListAuto","Lops","watch","computed","mounted","methods","OnSearch","fetch","then","response","console","url","res","vm","r","mapData","Object","x","kq","delRow","isAdded","doCancel","getLastPage","gotoPage","toast","variant","solid","catch","err","TumLum","info","component","token","localStorage","getItem","Axios","baseURL","headers","Authorization","XuLyErr","code","JSON","parse","stringify","status","msg","message","alert","request","fetchClient","defaultOptions","method","instance","axios","interceptors","use","config"],"sourceRoot":""}