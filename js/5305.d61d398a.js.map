{"version":3,"file":"js/5305.d61d398a.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/NguoiDung/NguoiDungRole.vue?a7d2","webpack://vue_start_1/src/views/NguoiDung/NguoiDungRole.vue","webpack://vue_start_1/./src/views/NguoiDung/NguoiDungRole.vue?373b","webpack://vue_start_1/./src/views/NguoiDung/NguoiDungRole.vue?4005","webpack://vue_start_1/./src/views/NguoiDung/NguoiDungRole.vue","webpack://vue_start_1/./src/TumLum.js","webpack://vue_start_1/./src/fetchClient.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"MonHocToan\"},[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./NguoiDungRole.vue').default}}),_c('h1',{staticClass:\"border-bottom\"},[_vm._v(\"Nguoi Dung Role\")]),_c('div',[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('b-modal',{ref:\"my-modal\",attrs:{\"size\":\"sm\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":(_vm.sel2[_vm.pri] == 0) ? 'Add User' : 'form Edit'}},[_c('div',{staticClass:\"d-block\"},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',{},[_vm._l((_vm.sel2),function(v,k){return _c('div',{key:k,staticClass:\"form-group row\"},[((k == _vm.pri))?[_c('label',{staticClass:\"col-sm-3 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-9\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"readonly\":true,\"name\":k,\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e(),(k == 'FirstName')?[_c('label',{staticClass:\"col-sm-3 col-form-label\"},[_vm._v(\"FirstName\")]),_c('div',{staticClass:\"col-sm-9\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"name\":k,\"autocomplete\":\"off\",\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e(),(k == 'LastName')?[_c('label',{staticClass:\"col-sm-3 col-form-label\"},[_vm._v(\"LastName\")]),_c('div',{staticClass:\"col-sm-9\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"name\":k,\"autocomplete\":\"off\",\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e(),(k == 'Username')?[_c('label',{staticClass:\"col-sm-3 col-form-label\"},[_vm._v(\"Username\")]),_c('div',{staticClass:\"col-sm-9\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"readonly\":_vm.sel2[_vm.pri]!=0,\"name\":k,\"autocomplete\":\"off\",\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e(),(k == 'Password')?[_c('label',{staticClass:\"col-sm-3 col-form-label\"},[_vm._v(\"Password\")]),_c('div',{staticClass:\"col-sm-9\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sel2[k]),expression:\"sel2[k]\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                                            'form-control': true,\n                                            'ko-hop-le': _vm.errors.has(k),\n                                        },attrs:{\"readonly\":_vm.sel2[_vm.pri]!=0,\"name\":k,\"autocomplete\":\"off\",\"type\":\"text\"},domProps:{\"value\":(_vm.sel2[k])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sel2, k, $event.target.value)}}})])]:_vm._e(),(k == 'Role')?[_c('label',{staticClass:\"col-sm-3 col-form-label\"},[_vm._v(\"Role\")]),_c('div',{staticClass:\"col-sm-9\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has(k) },attrs:{\"multiple\":\"\",\"name\":k,\"reduce\":function (option) { return option.id; },\"options\":_vm.ListRole,\"has-error\":_vm.errors.has(k)},model:{value:(_vm.sel2[k]),callback:function ($$v) {_vm.$set(_vm.sel2, k, $$v)},expression:\"sel2[k]\"}})],1)]:_vm._e(),(k == 'TrangThai')?[_c('label',{staticClass:\"col-sm-3 col-form-label\"},[_vm._v(\"TrangThai\")]),_c('div',{staticClass:\"col-sm-9\"},[_c('b-form-checkbox',{staticClass:\"my-checkbox\",attrs:{\"name\":k,\"value\":\"true\",\"unchecked-value\":\"false\"},model:{value:(_vm.sel2[k]),callback:function ($$v) {_vm.$set(_vm.sel2, k, $$v)},expression:\"sel2[k]\"}})],1)]:_vm._e()],2)}),_c('div',{staticClass:\"text-right\"},[_c('button',{staticClass:\"btn mr-1\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])],2)])])]),_c('b-table',{ref:\"mytable\",attrs:{\"thead-class\":\"myTable\",\"items\":_vm.myProvider,\"fields\":_vm.fields,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"filter-included-fields\":_vm.filterOn,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"stacked\":\"sm\",\"show-empty\":\"\",\"small\":\"\",\"fixed\":\"\",\"outlined\":\"\",\"bordered\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\n                                        var value = ref.value;\n                                        var item = ref.item;\n                                        var key = ref.field.key;\nreturn [[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),( key == 'Username' )?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),( key == 'FirstName' )?[_vm._v(\" \"+_vm._s(item[key])+\" \")]:_vm._e(),( key == 'LastName' )?[_vm._v(\" \"+_vm._s(item[key])+\" \")]:_vm._e(),( key == 'Role' )?[_vm._v(\" \"+_vm._s(item[key])+\" \")]:_vm._e(),( key == 'TrangThai' )?[_c('b-form-checkbox',{staticClass:\"my-checkbox\",attrs:{\"disabled\":true,\"size\":\"sm\",\"name\":key,\"value\":\"true\",\"unchecked-value\":\"false\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e()]:_vm._e()]]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[_c('button',{on:{\"click\":function($event){$event.preventDefault();return _vm.onReset(row.item)}}},[_vm._v(\"Reset\")]),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnDel(row.item)}}},[_c('b-icon-trash')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.onSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}},{key:\"bottom-row\",fn:function(data){return [_c('td',{attrs:{\"colspan\":data.columns}},[_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Tìm kiếm\",\"label-for\":\"filter-input\",\"label-cols-sm\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-input-group',{attrs:{\"size\":\"sm\"}},[_c('b-form-input',{attrs:{\"id\":\"filter-input\",\"type\":\"search\",\"placeholder\":\"Type to Search\"},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(\"Clear\")])],1)],1)],1)],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"label\":\"Số dòng\",\"label-for\":\"per-page-select\",\"label-cols-sm\":\"6\",\"label-cols-md\":\"4\",\"label-cols-lg\":\"3\",\"label-align-sm\":\"right\",\"label-size\":\"sm\"}},[_c('b-form-select',{attrs:{\"id\":\"per-page-select\",\"options\":_vm.pageOptions,\"size\":\"sm\"},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1),_c('b-col',{staticClass:\"my-1 text-right\",attrs:{\"sm\":\"6\"}},[_c('span',[_vm._v(\"page : \"+_vm._s(_vm.currentPage)+\" / \"+_vm._s(_vm.last_page)+\" of \"+_vm._s(_vm.totalRows)+\" \")]),_c('b-button',{staticClass:\"mr-1 mb-1\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"size\":\"sm\"},on:{\"click\":_vm.OnAdd}},[_c('b',[_vm._v(\"Add\")])])],1),_c('b-col',{staticClass:\"my-1\",attrs:{\"sm\":\"6\"}},[_c('b-pagination',{ref:\"mypage\",attrs:{\"disabled\":_vm.adding == true || _vm.isEditing() == true,\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"size\":\"sm\",\"align\":\"fill\",\"first-text\":\"First\",\"prev-text\":\"Prev\",\"next-text\":\"Next\",\"last-text\":\"Last\"},on:{\"change\":_vm.onChangePage,\"input\":_vm.onPagingInput},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1)]}},{key:\"row-details\",fn:function(row){return [_c('b-card',[_c('ul',_vm._l((row.item),function(value,key){return _c('li',{key:key},[_vm._v(_vm._s(key)+\": \"+_vm._s(value))])}),0)])]}}])})],1),_c('b-modal',{attrs:{\"id\":_vm.infoModal.id,\"title\":_vm.infoModal.title,\"ok-only\":\"\"},on:{\"hide\":_vm.resetInfoModal}},[_c('pre',[_vm._v(_vm._s(_vm.infoModal.content))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"MonHocToan\">\r\n        <raw-loader :mytxt=\"require('!raw-loader!./NguoiDungRole.vue').default\"></raw-loader>\r\n        <h1 class=\"border-bottom\">Nguoi Dung Role</h1>\r\n        <div>\r\n            <form @submit.stop.prevent=\"onSaveModal\">\r\n                <b-modal ref=\"my-modal\" size=\"sm\" :no-close-on-backdrop=\"true\" hide-footer\r\n                    :title=\"(sel2[pri] == 0) ? 'Add User' : 'form Edit'\">\r\n                    <div class=\"d-block\">\r\n                        <form @submit.stop.prevent=\"onSaveModal\">\r\n                            <div class=\"\">\r\n                                <div class=\"form-group row\" v-for=\"(v, k) in sel2\" :key=\"k\">\r\n\r\n                                    <template v-if=\"(k == pri)\">\r\n                                        <label class=\"col-sm-3 col-form-label\">Id</label>\r\n                                        <div class=\"col-sm-9\">\r\n                                            <input :readonly=\"true\" :name=\"k\" v-model=\"sel2[k]\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'FirstName'\">\r\n                                        <label class=\"col-sm-3 col-form-label\">FirstName</label>\r\n                                        <div class=\"col-sm-9\">\r\n                                            <input :name=\"k\" v-model=\"sel2[k]\" autocomplete=\"off\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" v-validate=\"'required'\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'LastName'\">\r\n                                        <label class=\"col-sm-3 col-form-label\">LastName</label>\r\n                                        <div class=\"col-sm-9\">\r\n                                            <input :name=\"k\" v-model=\"sel2[k]\" autocomplete=\"off\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" v-validate=\"'required'\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'Username'\">\r\n                                        <label class=\"col-sm-3 col-form-label\">Username</label>\r\n                                        <div class=\"col-sm-9\">\r\n                                            <input :readonly=\" sel2[pri]!=0 \" :name=\"k\" v-model=\"sel2[k]\" autocomplete=\"off\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" v-validate=\"'required'\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'Password'\">\r\n                                        <label class=\"col-sm-3 col-form-label\">Password</label>\r\n                                        <div class=\"col-sm-9\">\r\n                                            <input :readonly=\" sel2[pri]!=0 \" :name=\"k\" v-model=\"sel2[k]\" autocomplete=\"off\" :class=\"{\r\n                                                'form-control': true,\r\n                                                'ko-hop-le': errors.has(k),\r\n                                            }\" type=\"text\" v-validate=\"'required'\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'Role'\">\r\n                                        <label class=\"col-sm-3 col-form-label\">Role</label>\r\n                                        <div class=\"col-sm-9\">\r\n                                            <v-select multiple v-model=\"sel2[k]\" v-validate=\"'required'\" :name=\"k\" :reduce=\"(option) => option.id\"\r\n                                            :options=\"\r\n                                            ListRole\r\n                                            \" :has-error=\"errors.has(k)\" :class=\"{ danger: errors.has(k) }\" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"k == 'TrangThai'\">\r\n                                        <label class=\"col-sm-3 col-form-label\">TrangThai</label>\r\n                                        <div class=\"col-sm-9\">\r\n                                            <b-form-checkbox class=\"my-checkbox\" v-model=\"sel2[k]\" \r\n                                                :name=\"k\"\r\n                                                value=true\r\n                                                unchecked-value=false>\r\n                                            </b-form-checkbox>\r\n                                        </div>\r\n                                    </template>\r\n                                </div>\r\n                                <div class=\"text-right\">\r\n                                    <button type=\"submit\" class=\"btn mr-1\">Save</button>\r\n                                    <button type=\"button\" class=\"btn\" @click=\"hideModal()\">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </b-modal>\r\n                <b-table thead-class=\"myTable\" ref=\"mytable\" :items=\"myProvider\" :fields=\"fields\"\r\n                    :current-page=\"currentPage\" :per-page=\"perPage\" :filter=\"filter\" :filter-included-fields=\"filterOn\"\r\n                    :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" :sort-direction=\"sortDirection\" stacked=\"sm\"\r\n                    show-empty small fixed outlined bordered @filtered=\"onFiltered\">\r\n                    <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n                        <template>\r\n                            <template v-if=\"item[pri] != 0\">\r\n                                <template v-if=\"key == pri\">\r\n                                    {{ value }} \r\n                                </template>\r\n                                <template v-if=\" key == 'Username' \">\r\n                                    {{value}}\r\n                                </template>\r\n                                <template v-if=\" key == 'FirstName' \">\r\n                                    {{ item[key] }}\r\n                                </template>\r\n                                <template v-if=\" key == 'LastName' \">\r\n                                    {{ item[key] }}\r\n                                </template>\r\n                                <template v-if=\" key == 'Role' \">\r\n                                    {{ item[key] }}\r\n                                </template>\r\n                                <template v-if=\" key == 'TrangThai' \">\r\n                                    <b-form-checkbox :disabled=\"true\" size=\"sm\" class=\"my-checkbox\" v-model=\"item[key]\" \r\n                                        :name=\"key\"\r\n                                        value=true\r\n                                        unchecked-value=false>\r\n                                    </b-form-checkbox>\r\n                                </template>\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                    <template #cell(cmd)=\"row\">\r\n                        <template v-if=\"row.item[pri] == 0\">\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                        <template v-else>\r\n                            <button v-on:click.prevent=\"onReset(row.item)\">Reset</button>\r\n                            <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnEdit(row.item)\">\r\n                                <b-icon-pencil-square></b-icon-pencil-square>\r\n                            </b-button>\r\n                            <b-button :disabled=\"adding == true || isEditing() == true\" variant=\"outline\" class=\"mr-1\"\r\n                                v-if=\"sel[pri] != row.item[pri]\" size=\"sm\" @click=\"OnDel(row.item)\">\r\n                                <b-icon-trash></b-icon-trash>\r\n                            </b-button>\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"onSave(row.item)\">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                                @click=\"OnCancel(row.item)\">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                    </template>\r\n                    <template #bottom-row=\"data\">\r\n                        <td :colspan=\"data.columns\">\r\n                            <b-row>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Tìm kiếm\" label-for=\"filter-input\" label-cols-sm=\"3\"\r\n                                        label-align-sm=\"right\" label-size=\"sm\" class=\"mb-0\">\r\n                                        <b-input-group size=\"sm\">\r\n                                            <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\r\n                                                placeholder=\"Type to Search\">\r\n                                            </b-form-input>\r\n                                            <b-input-group-append>\r\n                                                <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                                            </b-input-group-append>\r\n                                        </b-input-group>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-form-group label=\"Số dòng\" label-for=\"per-page-select\" label-cols-sm=\"6\"\r\n                                        label-cols-md=\"4\" label-cols-lg=\"3\" label-align-sm=\"right\" label-size=\"sm\"\r\n                                        class=\"mb-0\">\r\n                                        <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\"\r\n                                            size=\"sm\">\r\n                                        </b-form-select>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1 text-right\">\r\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\r\n                                    <b-button :disabled=\"adding == true || isEditing() == true\" class=\"mr-1 mb-1\" size=\"sm\"\r\n                                        @click=\"OnAdd\">\r\n                                        <b>Add</b></b-button>\r\n                                </b-col>\r\n                                <b-col sm=\"6\" class=\"my-1\">\r\n                                    <b-pagination :disabled=\"adding == true || isEditing() == true\" ref=\"mypage\"\r\n                                        v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" size=\"sm\"\r\n                                        align=\"fill\" @change=\"onChangePage\" @input=\"onPagingInput\" first-text=\"First\"\r\n                                        prev-text=\"Prev\" next-text=\"Next\" last-text=\"Last\">\r\n                                    </b-pagination>\r\n                                </b-col>\r\n                            </b-row>\r\n                        </td>\r\n                    </template>\r\n                    <template #row-details=\"row\">\r\n                        <b-card>\r\n                            <ul>\r\n                                <li v-for=\"(value, key) in row.item\" :key=\"key\">{{ key }}: {{ value }}</li>\r\n                            </ul>\r\n                        </b-card>\r\n                    </template>\r\n                </b-table>\r\n            </form>\r\n            <!-- Info modal -->\r\n            <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n                <pre>{{ infoModal.content }}</pre>\r\n            </b-modal>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\nimport VueTypeaheadBootstrap from \"vue-typeahead-bootstrap\";\r\nimport { debounce } from \"lodash\";\r\nimport fetchClient from \"@/fetchClient\";\r\nimport TumLum from \"@/TumLum\";\r\n\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\n\r\nexport default {\r\n    components: {\r\n        VueTypeaheadBootstrap,\r\n    },\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [\r\n                {\r\n                    key: 'Id',\r\n                    formatter: (value, key, item) => {\r\n                        return value;\r\n                    },\r\n                    sortable: true,\r\n                    thClass: 'text-center',\r\n                    tdClass: 'text-center align-middle',\r\n                    thStyle: { width: \"8%\" },\r\n                },\r\n                //{ key: 'TenLop', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"80%\" }, },\r\n                { key: 'Username', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"10%\" }, },\r\n                { key: 'FirstName', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"10%\" }, },\r\n                { key: 'LastName', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"10%\" }, },\r\n                { key: 'Role', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"40%\" }, },\r\n                { key: 'TrangThai',label:'TT', sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \"5%\" }, },\r\n                {\r\n                    key: 'cmd',\r\n                    class: 'text-center',\r\n                    thClass: 'text-center',\r\n                    tdClass: 'align-middle',\r\n                    thStyle: { width: \"17%\" }\r\n                }\r\n            ],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            pageOptions: [5, 10, 15, { value: 100, text: \"Show a lot\" }],\r\n            sortBy: '',\r\n            sortDesc: false,\r\n            sortDirection: 'asc',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: 'info-modal',\r\n                title: '',\r\n                content: ''\r\n            },\r\n            sel: {},\r\n            sel2: {},\r\n            pri: \"Id\",\r\n            last_page: 0,\r\n            adding: false,\r\n            ListAuto: [],\r\n\r\n            title: \"hello title\",\r\n            LopHocs: [],\r\n            url:`/api/NguoiDung4`,\r\n            ListRole:[]\r\n        }\r\n    },\r\n    watch: {\r\n        last_page: function (newValue, oldValue) {\r\n        },\r\n        currentPage: function (val) {\r\n        },\r\n        totalRows: function (newValue, oldValue) {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        onReset(item){\r\n            this.Reset(item.Id);\r\n        },\r\n        OnSearch: debounce(function (query) {\r\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(JSON.stringify(data))\r\n                    this.ListAuto = data.items;\r\n                });\r\n        }, 500),\r\n        onPagingInput() {\r\n        },\r\n        myProvider(ctx) {\r\n            let currentPage = ctx.currentPage;\r\n            let perPage = ctx.perPage;\r\n            let sortBy = ctx.sortBy;\r\n            let sortDesc = ctx.sortDesc;\r\n            let vm = this;\r\n            let url = `${this.url}/GetPage2`;\r\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\r\n            if (ctx.filter) {\r\n                let filter = ctx.filter;\r\n                url = `${url}&filter=${filter}`;\r\n            }\r\n            return fetchClient.get(url)\r\n                .then(res => {\r\n                    this.GetRoleList();\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    vm.items = res.data.data;\r\n                    if (this.adding == true) {\r\n                        // let r = {};\r\n                        // r[this.pri] = 0;\r\n                        // r[\"TenKhach\"] = \"xxx\";\r\n                        // r[\"Ngay\"] = new Date();\r\n                        // res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        mapData(data) {\r\n            let kq = [];\r\n            data.forEach(obj => {\r\n                let x = {};\r\n                Object.keys(obj).forEach(key => {\r\n                    let k = key;\r\n                    if(k!=\"Role\"){\r\n                        x[k] = obj[key];\r\n                    }else{\r\n                        if(obj[key]==\"\"){\r\n                            x[k]=null;\r\n                        }else{\r\n                            x[k]=obj[key].split(\",\");\r\n                        }\r\n                    }\r\n                });\r\n                kq.push(x);\r\n            })\r\n            return kq;\r\n        },\r\n        onChangePage() {\r\n            this.sel = {};\r\n            this.adding = false;\r\n        },\r\n        OnAdd() {\r\n            let r={}\r\n            r[this.pri]=0;\r\n            r[\"FirstName\"]=\"\";\r\n            r[\"LastName\"]=\"\";\r\n            r[\"Username\"]=\"\";\r\n            r[\"Password\"]=\"123\";\r\n            r[\"Role\"]=[];\r\n            r[\"TrangThai\"]=false;\r\n            this.sel2 =r;\r\n            this.showModal();\r\n        },\r\n        OnEdit(item) {\r\n            if (JSON.stringify(this.sel) != \"{}\" || this.adding == true) {\r\n                return;\r\n            }\r\n            this.getById(item[this.pri]);\r\n        },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.sel2));\r\n\r\n                let roleStr = \"\";\r\n                r.Role.forEach((v, k) => {\r\n                    if (k < r.Role.length - 1) {\r\n                        roleStr += `${v},`;\r\n                    } else {\r\n                        roleStr += `${v}`;\r\n                    }\r\n                })\r\n                r.Role=roleStr;\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r);\r\n                } else {\r\n                    this.Update(r);\r\n                }\r\n            });\r\n        },\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r).then(res => {\r\n                        if (res.data.kq == 'ok') {\r\n                            this.toast(`${res.data.msg}`);\r\n                            this.adding = false;\r\n                            this.$refs.mytable.refresh();\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.Update(r).then(res => {\r\n                        this.toast(`${res.data.msg}`);\r\n                        this.adding = false;\r\n                        this.sel = {};\r\n                        this.$refs.mytable.refresh();\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] != 0) {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            } else {\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            }\r\n        },\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]).then(res => {\r\n                if (res.data.kq == 'nook') {\r\n                    this.toast(`${res.data.msg}`);\r\n                    return;\r\n                }\r\n                this.toast(`${res.data.msg}`);\r\n                let lastPage = this.getLastPage(this.totalRows - 1);\r\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\r\n                this.$refs.mytable.refresh();\r\n            })\r\n        },\r\n        delRow(item) {\r\n            let id = item.id;\r\n            let index = this.items.findIndex(x => x.id == id);\r\n            this.items.splice(index, 1);\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != \"{}\"\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x.id == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        gotoPage(page) {\r\n            this.currentPage = page;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async Reset(id){\r\n            return await fetchClient.get(`/api/NguoiDung4/Reset?id=${id}`)\r\n            .then(res=>{\r\n                this.$refs.mytable.refresh();\r\n            })\r\n            .catch(err=>{\r\n                TumLum.XuLyErr(err);\r\n            })\r\n        },\r\n        async Add(r) {\r\n            return await fetchClient.post(`${this.url}/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.hideModal();\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`${this.url}/Update`, r)\r\n                .then(res => {\r\n                    this.hideModal();\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Del(id) {\r\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\r\n                .then(res => {\r\n                    this.sel2 = res.data;\r\n                    this.sel2[\"Role\"]=this.sel2[\"Role\"].split(\",\");\r\n                    this.showModal();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async GetRoleList() {\r\n            return await fetchClient.get(`${this.url}/TestRoleList`)\r\n                .then(res => {\r\n                    this.ListRole=res.data;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async GetComboLopHoc() {\r\n            return await fetchClient.get(`/api/LopHoc4/LdsComboItem`)\r\n                .then(res => {\r\n                    this.LopHocs = res.data.list;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = ''\r\n            this.infoModal.content = ''\r\n        },\r\n        onFiltered(filteredItems) {\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        },\r\n        showModal() {\r\n            this.$refs[\"my-modal\"].show();\r\n        },\r\n        hideModal() {\r\n            this.$refs[\"my-modal\"].hide();\r\n        },\r\n    }\r\n}\r\n</script>\r\n  \r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NguoiDungRole.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NguoiDungRole.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NguoiDungRole.vue?vue&type=template&id=364a8772&\"\nimport script from \"./NguoiDungRole.vue?vue&type=script&lang=js&\"\nexport * from \"./NguoiDungRole.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div class=\\\"MonHocToan\\\">\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./NguoiDungRole.vue').default\\\"></raw-loader>\\r\\n        <h1 class=\\\"border-bottom\\\">Nguoi Dung Role</h1>\\r\\n        <div>\\r\\n            <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n                <b-modal ref=\\\"my-modal\\\" size=\\\"sm\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer\\r\\n                    :title=\\\"(sel2[pri] == 0) ? 'Add User' : 'form Edit'\\\">\\r\\n                    <div class=\\\"d-block\\\">\\r\\n                        <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n                            <div class=\\\"\\\">\\r\\n                                <div class=\\\"form-group row\\\" v-for=\\\"(v, k) in sel2\\\" :key=\\\"k\\\">\\r\\n\\r\\n                                    <template v-if=\\\"(k == pri)\\\">\\r\\n                                        <label class=\\\"col-sm-3 col-form-label\\\">Id</label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <input :readonly=\\\"true\\\" :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'FirstName'\\\">\\r\\n                                        <label class=\\\"col-sm-3 col-form-label\\\">FirstName</label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <input :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" autocomplete=\\\"off\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" v-validate=\\\"'required'\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'LastName'\\\">\\r\\n                                        <label class=\\\"col-sm-3 col-form-label\\\">LastName</label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <input :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" autocomplete=\\\"off\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" v-validate=\\\"'required'\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'Username'\\\">\\r\\n                                        <label class=\\\"col-sm-3 col-form-label\\\">Username</label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <input :readonly=\\\" sel2[pri]!=0 \\\" :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" autocomplete=\\\"off\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" v-validate=\\\"'required'\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'Password'\\\">\\r\\n                                        <label class=\\\"col-sm-3 col-form-label\\\">Password</label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <input :readonly=\\\" sel2[pri]!=0 \\\" :name=\\\"k\\\" v-model=\\\"sel2[k]\\\" autocomplete=\\\"off\\\" :class=\\\"{\\r\\n                                                'form-control': true,\\r\\n                                                'ko-hop-le': errors.has(k),\\r\\n                                            }\\\" type=\\\"text\\\" v-validate=\\\"'required'\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'Role'\\\">\\r\\n                                        <label class=\\\"col-sm-3 col-form-label\\\">Role</label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <v-select multiple v-model=\\\"sel2[k]\\\" v-validate=\\\"'required'\\\" :name=\\\"k\\\" :reduce=\\\"(option) => option.id\\\"\\r\\n                                            :options=\\\"\\r\\n                                            ListRole\\r\\n                                            \\\" :has-error=\\\"errors.has(k)\\\" :class=\\\"{ danger: errors.has(k) }\\\" />\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                    <template v-if=\\\"k == 'TrangThai'\\\">\\r\\n                                        <label class=\\\"col-sm-3 col-form-label\\\">TrangThai</label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <b-form-checkbox class=\\\"my-checkbox\\\" v-model=\\\"sel2[k]\\\" \\r\\n                                                :name=\\\"k\\\"\\r\\n                                                value=true\\r\\n                                                unchecked-value=false>\\r\\n                                            </b-form-checkbox>\\r\\n                                        </div>\\r\\n                                    </template>\\r\\n                                </div>\\r\\n                                <div class=\\\"text-right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn mr-1\\\">Save</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </b-modal>\\r\\n                <b-table thead-class=\\\"myTable\\\" ref=\\\"mytable\\\" :items=\\\"myProvider\\\" :fields=\\\"fields\\\"\\r\\n                    :current-page=\\\"currentPage\\\" :per-page=\\\"perPage\\\" :filter=\\\"filter\\\" :filter-included-fields=\\\"filterOn\\\"\\r\\n                    :sort-by.sync=\\\"sortBy\\\" :sort-desc.sync=\\\"sortDesc\\\" :sort-direction=\\\"sortDirection\\\" stacked=\\\"sm\\\"\\r\\n                    show-empty small fixed outlined bordered @filtered=\\\"onFiltered\\\">\\r\\n                    <template v-slot:cell()=\\\"{ value, item, field: { key } }\\\">\\r\\n                        <template>\\r\\n                            <template v-if=\\\"item[pri] != 0\\\">\\r\\n                                <template v-if=\\\"key == pri\\\">\\r\\n                                    {{ value }} \\r\\n                                </template>\\r\\n                                <template v-if=\\\" key == 'Username' \\\">\\r\\n                                    {{value}}\\r\\n                                </template>\\r\\n                                <template v-if=\\\" key == 'FirstName' \\\">\\r\\n                                    {{ item[key] }}\\r\\n                                </template>\\r\\n                                <template v-if=\\\" key == 'LastName' \\\">\\r\\n                                    {{ item[key] }}\\r\\n                                </template>\\r\\n                                <template v-if=\\\" key == 'Role' \\\">\\r\\n                                    {{ item[key] }}\\r\\n                                </template>\\r\\n                                <template v-if=\\\" key == 'TrangThai' \\\">\\r\\n                                    <b-form-checkbox :disabled=\\\"true\\\" size=\\\"sm\\\" class=\\\"my-checkbox\\\" v-model=\\\"item[key]\\\" \\r\\n                                        :name=\\\"key\\\"\\r\\n                                        value=true\\r\\n                                        unchecked-value=false>\\r\\n                                    </b-form-checkbox>\\r\\n                                </template>\\r\\n                            </template>\\r\\n                        </template>\\r\\n                    </template>\\r\\n                    <template #cell(cmd)=\\\"row\\\">\\r\\n                        <template v-if=\\\"row.item[pri] == 0\\\">\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                        <template v-else>\\r\\n                            <button v-on:click.prevent=\\\"onReset(row.item)\\\">Reset</button>\\r\\n                            <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnEdit(row.item)\\\">\\r\\n                                <b-icon-pencil-square></b-icon-pencil-square>\\r\\n                            </b-button>\\r\\n                            <b-button :disabled=\\\"adding == true || isEditing() == true\\\" variant=\\\"outline\\\" class=\\\"mr-1\\\"\\r\\n                                v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\" @click=\\\"OnDel(row.item)\\\">\\r\\n                                <b-icon-trash></b-icon-trash>\\r\\n                            </b-button>\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"onSave(row.item)\\\">\\r\\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                            </b-button>\\r\\n                            <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                                @click=\\\"OnCancel(row.item)\\\">\\r\\n                                <b-icon-file-x></b-icon-file-x>\\r\\n                            </b-button>\\r\\n                        </template>\\r\\n                    </template>\\r\\n                    <template #bottom-row=\\\"data\\\">\\r\\n                        <td :colspan=\\\"data.columns\\\">\\r\\n                            <b-row>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Tìm kiếm\\\" label-for=\\\"filter-input\\\" label-cols-sm=\\\"3\\\"\\r\\n                                        label-align-sm=\\\"right\\\" label-size=\\\"sm\\\" class=\\\"mb-0\\\">\\r\\n                                        <b-input-group size=\\\"sm\\\">\\r\\n                                            <b-form-input id=\\\"filter-input\\\" v-model=\\\"filter\\\" type=\\\"search\\\"\\r\\n                                                placeholder=\\\"Type to Search\\\">\\r\\n                                            </b-form-input>\\r\\n                                            <b-input-group-append>\\r\\n                                                <b-button :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\">Clear</b-button>\\r\\n                                            </b-input-group-append>\\r\\n                                        </b-input-group>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-form-group label=\\\"Số dòng\\\" label-for=\\\"per-page-select\\\" label-cols-sm=\\\"6\\\"\\r\\n                                        label-cols-md=\\\"4\\\" label-cols-lg=\\\"3\\\" label-align-sm=\\\"right\\\" label-size=\\\"sm\\\"\\r\\n                                        class=\\\"mb-0\\\">\\r\\n                                        <b-form-select id=\\\"per-page-select\\\" v-model=\\\"perPage\\\" :options=\\\"pageOptions\\\"\\r\\n                                            size=\\\"sm\\\">\\r\\n                                        </b-form-select>\\r\\n                                    </b-form-group>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1 text-right\\\">\\r\\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\\r\\n                                    <b-button :disabled=\\\"adding == true || isEditing() == true\\\" class=\\\"mr-1 mb-1\\\" size=\\\"sm\\\"\\r\\n                                        @click=\\\"OnAdd\\\">\\r\\n                                        <b>Add</b></b-button>\\r\\n                                </b-col>\\r\\n                                <b-col sm=\\\"6\\\" class=\\\"my-1\\\">\\r\\n                                    <b-pagination :disabled=\\\"adding == true || isEditing() == true\\\" ref=\\\"mypage\\\"\\r\\n                                        v-model=\\\"currentPage\\\" :total-rows=\\\"totalRows\\\" :per-page=\\\"perPage\\\" size=\\\"sm\\\"\\r\\n                                        align=\\\"fill\\\" @change=\\\"onChangePage\\\" @input=\\\"onPagingInput\\\" first-text=\\\"First\\\"\\r\\n                                        prev-text=\\\"Prev\\\" next-text=\\\"Next\\\" last-text=\\\"Last\\\">\\r\\n                                    </b-pagination>\\r\\n                                </b-col>\\r\\n                            </b-row>\\r\\n                        </td>\\r\\n                    </template>\\r\\n                    <template #row-details=\\\"row\\\">\\r\\n                        <b-card>\\r\\n                            <ul>\\r\\n                                <li v-for=\\\"(value, key) in row.item\\\" :key=\\\"key\\\">{{ key }}: {{ value }}</li>\\r\\n                            </ul>\\r\\n                        </b-card>\\r\\n                    </template>\\r\\n                </b-table>\\r\\n            </form>\\r\\n            <!-- Info modal -->\\r\\n            <b-modal :id=\\\"infoModal.id\\\" :title=\\\"infoModal.title\\\" ok-only @hide=\\\"resetInfoModal\\\">\\r\\n                <pre>{{ infoModal.content }}</pre>\\r\\n            </b-modal>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n});\\r\\nimport VueTypeaheadBootstrap from \\\"vue-typeahead-bootstrap\\\";\\r\\nimport { debounce } from \\\"lodash\\\";\\r\\nimport fetchClient from \\\"@/fetchClient\\\";\\r\\nimport TumLum from \\\"@/TumLum\\\";\\r\\n\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\n\\r\\nexport default {\\r\\n    components: {\\r\\n        VueTypeaheadBootstrap,\\r\\n    },\\r\\n    data() {\\r\\n        return {\\r\\n            items: [\\r\\n            ],\\r\\n            fields: [\\r\\n                {\\r\\n                    key: 'Id',\\r\\n                    formatter: (value, key, item) => {\\r\\n                        return value;\\r\\n                    },\\r\\n                    sortable: true,\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'text-center align-middle',\\r\\n                    thStyle: { width: \\\"8%\\\" },\\r\\n                },\\r\\n                //{ key: 'TenLop', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"80%\\\" }, },\\r\\n                { key: 'Username', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"10%\\\" }, },\\r\\n                { key: 'FirstName', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"10%\\\" }, },\\r\\n                { key: 'LastName', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"10%\\\" }, },\\r\\n                { key: 'Role', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"40%\\\" }, },\\r\\n                { key: 'TrangThai',label:'TT', sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \\\"5%\\\" }, },\\r\\n                {\\r\\n                    key: 'cmd',\\r\\n                    class: 'text-center',\\r\\n                    thClass: 'text-center',\\r\\n                    tdClass: 'align-middle',\\r\\n                    thStyle: { width: \\\"17%\\\" }\\r\\n                }\\r\\n            ],\\r\\n            totalRows: 1,\\r\\n            currentPage: 1,\\r\\n            perPage: 5,\\r\\n            pageOptions: [5, 10, 15, { value: 100, text: \\\"Show a lot\\\" }],\\r\\n            sortBy: '',\\r\\n            sortDesc: false,\\r\\n            sortDirection: 'asc',\\r\\n            filter: null,\\r\\n            filterOn: [],\\r\\n            infoModal: {\\r\\n                id: 'info-modal',\\r\\n                title: '',\\r\\n                content: ''\\r\\n            },\\r\\n            sel: {},\\r\\n            sel2: {},\\r\\n            pri: \\\"Id\\\",\\r\\n            last_page: 0,\\r\\n            adding: false,\\r\\n            ListAuto: [],\\r\\n\\r\\n            title: \\\"hello title\\\",\\r\\n            LopHocs: [],\\r\\n            url:`/api/NguoiDung4`,\\r\\n            ListRole:[]\\r\\n        }\\r\\n    },\\r\\n    watch: {\\r\\n        last_page: function (newValue, oldValue) {\\r\\n        },\\r\\n        currentPage: function (val) {\\r\\n        },\\r\\n        totalRows: function (newValue, oldValue) {\\r\\n        }\\r\\n    },\\r\\n    computed: {\\r\\n    },\\r\\n    mounted() {\\r\\n    },\\r\\n    methods: {\\r\\n        onReset(item){\\r\\n            this.Reset(item.Id);\\r\\n        },\\r\\n        OnSearch: debounce(function (query) {\\r\\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\\r\\n                .then((response) => {\\r\\n                    return response.json();\\r\\n                })\\r\\n                .then((data) => {\\r\\n                    console.log(JSON.stringify(data))\\r\\n                    this.ListAuto = data.items;\\r\\n                });\\r\\n        }, 500),\\r\\n        onPagingInput() {\\r\\n        },\\r\\n        myProvider(ctx) {\\r\\n            let currentPage = ctx.currentPage;\\r\\n            let perPage = ctx.perPage;\\r\\n            let sortBy = ctx.sortBy;\\r\\n            let sortDesc = ctx.sortDesc;\\r\\n            let vm = this;\\r\\n            let url = `${this.url}/GetPage2`;\\r\\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\\r\\n            if (ctx.filter) {\\r\\n                let filter = ctx.filter;\\r\\n                url = `${url}&filter=${filter}`;\\r\\n            }\\r\\n            return fetchClient.get(url)\\r\\n                .then(res => {\\r\\n                    this.GetRoleList();\\r\\n                    vm.last_page = res.data.last_page;\\r\\n                    vm.totalRows = res.data.rowCount;\\r\\n                    vm.items = res.data.data;\\r\\n                    if (this.adding == true) {\\r\\n                        // let r = {};\\r\\n                        // r[this.pri] = 0;\\r\\n                        // r[\\\"TenKhach\\\"] = \\\"xxx\\\";\\r\\n                        // r[\\\"Ngay\\\"] = new Date();\\r\\n                        // res.data.data.unshift(r);\\r\\n                    }\\r\\n                    return vm.mapData(res.data.data); //res.data.data;\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        mapData(data) {\\r\\n            let kq = [];\\r\\n            data.forEach(obj => {\\r\\n                let x = {};\\r\\n                Object.keys(obj).forEach(key => {\\r\\n                    let k = key;\\r\\n                    if(k!=\\\"Role\\\"){\\r\\n                        x[k] = obj[key];\\r\\n                    }else{\\r\\n                        if(obj[key]==\\\"\\\"){\\r\\n                            x[k]=null;\\r\\n                        }else{\\r\\n                            x[k]=obj[key].split(\\\",\\\");\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n                kq.push(x);\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        onChangePage() {\\r\\n            this.sel = {};\\r\\n            this.adding = false;\\r\\n        },\\r\\n        OnAdd() {\\r\\n            let r={}\\r\\n            r[this.pri]=0;\\r\\n            r[\\\"FirstName\\\"]=\\\"\\\";\\r\\n            r[\\\"LastName\\\"]=\\\"\\\";\\r\\n            r[\\\"Username\\\"]=\\\"\\\";\\r\\n            r[\\\"Password\\\"]=\\\"123\\\";\\r\\n            r[\\\"Role\\\"]=[];\\r\\n            r[\\\"TrangThai\\\"]=false;\\r\\n            this.sel2 =r;\\r\\n            this.showModal();\\r\\n        },\\r\\n        OnEdit(item) {\\r\\n            if (JSON.stringify(this.sel) != \\\"{}\\\" || this.adding == true) {\\r\\n                return;\\r\\n            }\\r\\n            this.getById(item[this.pri]);\\r\\n        },\\r\\n        onSaveModal() {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(this.sel2));\\r\\n\\r\\n                let roleStr = \\\"\\\";\\r\\n                r.Role.forEach((v, k) => {\\r\\n                    if (k < r.Role.length - 1) {\\r\\n                        roleStr += `${v},`;\\r\\n                    } else {\\r\\n                        roleStr += `${v}`;\\r\\n                    }\\r\\n                })\\r\\n                r.Role=roleStr;\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r);\\r\\n                } else {\\r\\n                    this.Update(r);\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        onSave(item) {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(item));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r).then(res => {\\r\\n                        if (res.data.kq == 'ok') {\\r\\n                            this.toast(`${res.data.msg}`);\\r\\n                            this.adding = false;\\r\\n                            this.$refs.mytable.refresh();\\r\\n                        }\\r\\n                    })\\r\\n                } else {\\r\\n                    this.Update(r).then(res => {\\r\\n                        this.toast(`${res.data.msg}`);\\r\\n                        this.adding = false;\\r\\n                        this.sel = {};\\r\\n                        this.$refs.mytable.refresh();\\r\\n                    })\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        OnCancel(item) {\\r\\n            if (item[this.pri] != 0) {\\r\\n                this.doCancel(item);\\r\\n                this.sel = {};\\r\\n            } else {\\r\\n                this.adding = false;\\r\\n                this.$refs.mytable.refresh();\\r\\n            }\\r\\n        },\\r\\n        OnDel(item) {\\r\\n            this.Del(item[this.pri]).then(res => {\\r\\n                if (res.data.kq == 'nook') {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    return;\\r\\n                }\\r\\n                this.toast(`${res.data.msg}`);\\r\\n                let lastPage = this.getLastPage(this.totalRows - 1);\\r\\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\\r\\n                this.$refs.mytable.refresh();\\r\\n            })\\r\\n        },\\r\\n        delRow(item) {\\r\\n            let id = item.id;\\r\\n            let index = this.items.findIndex(x => x.id == id);\\r\\n            this.items.splice(index, 1);\\r\\n        },\\r\\n        isEditing() {\\r\\n            return JSON.stringify(this.sel) != \\\"{}\\\"\\r\\n        },\\r\\n        isAdded() {\\r\\n            let kq = false;\\r\\n            this.items.forEach(x => {\\r\\n                if (x.id == 0) kq = true;\\r\\n            })\\r\\n            return kq;\\r\\n        },\\r\\n        doCancel(item) {\\r\\n            for (let key in item) {\\r\\n                if (item[key] != this.sel[key]) {\\r\\n                    item[key] = this.sel[key]\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        getLastPage(count) {\\r\\n            let pageSize = this.perPage;\\r\\n            let du = count % pageSize;\\r\\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n        },\\r\\n        gotoPage(page) {\\r\\n            this.currentPage = page;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n        async Reset(id){\\r\\n            return await fetchClient.get(`/api/NguoiDung4/Reset?id=${id}`)\\r\\n            .then(res=>{\\r\\n                this.$refs.mytable.refresh();\\r\\n            })\\r\\n            .catch(err=>{\\r\\n                TumLum.XuLyErr(err);\\r\\n            })\\r\\n        },\\r\\n        async Add(r) {\\r\\n            return await fetchClient.post(`${this.url}/Add`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.hideModal();\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Update(r) {\\r\\n            return await fetchClient.post(`${this.url}/Update`, r)\\r\\n                .then(res => {\\r\\n                    this.hideModal();\\r\\n                    this.toast(`${res.data.msg}`)\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Del(id) {\\r\\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`)\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async getById(id) {\\r\\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.sel2 = res.data;\\r\\n                    this.sel2[\\\"Role\\\"]=this.sel2[\\\"Role\\\"].split(\\\",\\\");\\r\\n                    this.showModal();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async GetRoleList() {\\r\\n            return await fetchClient.get(`${this.url}/TestRoleList`)\\r\\n                .then(res => {\\r\\n                    this.ListRole=res.data;\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async GetComboLopHoc() {\\r\\n            return await fetchClient.get(`/api/LopHoc4/LdsComboItem`)\\r\\n                .then(res => {\\r\\n                    this.LopHocs = res.data.list;\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        info(item, index, button) {\\r\\n            this.infoModal.title = `Row index: ${index}`\\r\\n            this.infoModal.content = JSON.stringify(item, null, 2)\\r\\n            this.$root.$emit('bv::show::modal', this.infoModal.id, button)\\r\\n        },\\r\\n        resetInfoModal() {\\r\\n            this.infoModal.title = ''\\r\\n            this.infoModal.content = ''\\r\\n        },\\r\\n        onFiltered(filteredItems) {\\r\\n            this.totalRows = filteredItems.length\\r\\n            this.currentPage = 1\\r\\n        },\\r\\n        showModal() {\\r\\n            this.$refs[\\\"my-modal\\\"].show();\\r\\n        },\\r\\n        hideModal() {\\r\\n            this.$refs[\\\"my-modal\\\"].hide();\\r\\n        },\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n  \\r\\n  \";","export default {\r\n    XuLyErr(err) {\r\n        let code = JSON.parse(JSON.stringify(err)).status;\r\n        if (code == 400) {\r\n            let msg = JSON.parse(JSON.stringify(err.response)).data.message;\r\n            alert(msg);\r\n        } else {\r\n            if (err.response) {\r\n                if (err.response.status == 401)\r\n                    alert(\"Chưa đăng nhập hoặc token hết hạn\");\r\n                else if (err.response.status == 403)\r\n                    alert(\"Bạn ko có quyền\");\r\n            } else if (err.request) {\r\n                alert(JSON.stringify(err.request));\r\n            } else if (err.message) {\r\n                alert(JSON.stringify(err.message));\r\n            }\r\n        }\r\n    }\r\n}\r\n  /*\r\nimport TumLum from '@/TumLum';\r\n*/","import axios from 'axios';\r\n\r\nconst fetchClient = () => {\r\n  const defaultOptions = {\r\n    baseURL: '',\r\n    method: 'get',\r\n    headers: {\r\n      //'Content-Type': 'application/json',\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n  };\r\n\r\n  // Create instance\r\n  let instance = axios.create(defaultOptions);\r\n\r\n  // Set the AUTH token for any request\r\n  instance.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem('token');\r\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\r\n    return config;\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport default fetchClient();"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","on","$event","stopPropagation","preventDefault","onSaveModal","apply","arguments","ref","sel2","pri","_l","v","k","key","directives","name","rawName","value","expression","class","errors","has","domProps","target","composing","$set","_e","danger","option","id","ListRole","model","callback","$$v","hideModal","myProvider","fields","currentPage","perPage","filter","filterOn","sortBy","sortDesc","sortDirection","onFiltered","scopedSlots","_u","fn","item","field","_s","row","onSave","OnCancel","onReset","sel","adding","isEditing","OnEdit","OnDel","data","columns","pageOptions","last_page","totalRows","OnAdd","onChangePage","onPagingInput","infoModal","title","resetInfoModal","content","staticRenderFns","Vue","classes","fieldsBagName","components","VueTypeaheadBootstrap","items","formatter","sortable","thClass","tdClass","thStyle","width","label","text","ListAuto","LopHocs","url","watch","computed","mounted","methods","OnSearch","fetch","then","response","console","res","vm","catch","err","TumLum","mapData","Object","x","kq","r","roleStr","delRow","isAdded","doCancel","getLastPage","gotoPage","toast","variant","solid","info","showModal","component","XuLyErr","code","JSON","parse","stringify","status","msg","message","alert","request","fetchClient","defaultOptions","baseURL","method","headers","instance","axios","interceptors","use","config","token","localStorage","getItem","Authorization"],"sourceRoot":""}