"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[5305],{8534:function(e,t,r){r.r(t),r.d(t,{default:function(){return g}});var n=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"MonHocToan"},[n("raw-loader",{attrs:{mytxt:r(29938).Z}}),n("h1",{staticClass:"border-bottom"},[e._v("Nguoi Dung Role")]),n("div",[n("form",{on:{submit:function(t){return t.stopPropagation(),t.preventDefault(),e.onSaveModal.apply(null,arguments)}}},[n("b-modal",{ref:"my-modal",attrs:{size:"sm","no-close-on-backdrop":!0,"hide-footer":"",title:0==e.sel2[e.pri]?"Add User":"form Edit"}},[n("div",{staticClass:"d-block"},[n("form",{on:{submit:function(t){return t.stopPropagation(),t.preventDefault(),e.onSaveModal.apply(null,arguments)}}},[n("div",{},[e._l(e.sel2,(function(t,r){return n("div",{key:r,staticClass:"form-group row"},[r==e.pri?[n("label",{staticClass:"col-sm-3 col-form-label"},[e._v("Id")]),n("div",{staticClass:"col-sm-9"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.sel2[r],expression:"sel2[k]"}],class:{"form-control":!0,"ko-hop-le":e.errors.has(r)},attrs:{readonly:!0,name:r,type:"text"},domProps:{value:e.sel2[r]},on:{input:function(t){t.target.composing||e.$set(e.sel2,r,t.target.value)}}})])]:e._e(),"FirstName"==r?[n("label",{staticClass:"col-sm-3 col-form-label"},[e._v("FirstName")]),n("div",{staticClass:"col-sm-9"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.sel2[r],expression:"sel2[k]"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":e.errors.has(r)},attrs:{name:r,autocomplete:"off",type:"text"},domProps:{value:e.sel2[r]},on:{input:function(t){t.target.composing||e.$set(e.sel2,r,t.target.value)}}})])]:e._e(),"LastName"==r?[n("label",{staticClass:"col-sm-3 col-form-label"},[e._v("LastName")]),n("div",{staticClass:"col-sm-9"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.sel2[r],expression:"sel2[k]"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":e.errors.has(r)},attrs:{name:r,autocomplete:"off",type:"text"},domProps:{value:e.sel2[r]},on:{input:function(t){t.target.composing||e.$set(e.sel2,r,t.target.value)}}})])]:e._e(),"Username"==r?[n("label",{staticClass:"col-sm-3 col-form-label"},[e._v("Username")]),n("div",{staticClass:"col-sm-9"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.sel2[r],expression:"sel2[k]"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":e.errors.has(r)},attrs:{readonly:0!=e.sel2[e.pri],name:r,autocomplete:"off",type:"text"},domProps:{value:e.sel2[r]},on:{input:function(t){t.target.composing||e.$set(e.sel2,r,t.target.value)}}})])]:e._e(),"Password"==r?[n("label",{staticClass:"col-sm-3 col-form-label"},[e._v("Password")]),n("div",{staticClass:"col-sm-9"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.sel2[r],expression:"sel2[k]"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":e.errors.has(r)},attrs:{readonly:0!=e.sel2[e.pri],name:r,autocomplete:"off",type:"text"},domProps:{value:e.sel2[r]},on:{input:function(t){t.target.composing||e.$set(e.sel2,r,t.target.value)}}})])]:e._e(),"Role"==r?[n("label",{staticClass:"col-sm-3 col-form-label"},[e._v("Role")]),n("div",{staticClass:"col-sm-9"},[n("v-select",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{danger:e.errors.has(r)},attrs:{multiple:"",name:r,reduce:function(e){return e.id},options:e.ListRole,"has-error":e.errors.has(r)},model:{value:e.sel2[r],callback:function(t){e.$set(e.sel2,r,t)},expression:"sel2[k]"}})],1)]:e._e(),"TrangThai"==r?[n("label",{staticClass:"col-sm-3 col-form-label"},[e._v("TrangThai")]),n("div",{staticClass:"col-sm-9"},[n("b-form-checkbox",{staticClass:"my-checkbox",attrs:{name:r,value:"true","unchecked-value":"false"},model:{value:e.sel2[r],callback:function(t){e.$set(e.sel2,r,t)},expression:"sel2[k]"}})],1)]:e._e()],2)})),n("div",{staticClass:"text-right"},[n("button",{staticClass:"btn mr-1",attrs:{type:"submit"}},[e._v("Save")]),n("button",{staticClass:"btn",attrs:{type:"button"},on:{click:function(t){return e.hideModal()}}},[e._v("Cancel")])])],2)])])]),n("b-table",{ref:"mytable",attrs:{"thead-class":"myTable",items:e.myProvider,fields:e.fields,"current-page":e.currentPage,"per-page":e.perPage,filter:e.filter,"filter-included-fields":e.filterOn,"sort-by":e.sortBy,"sort-desc":e.sortDesc,"sort-direction":e.sortDirection,stacked:"sm","show-empty":"",small:"",fixed:"",outlined:"",bordered:""},on:{"update:sortBy":function(t){e.sortBy=t},"update:sort-by":function(t){e.sortBy=t},"update:sortDesc":function(t){e.sortDesc=t},"update:sort-desc":function(t){e.sortDesc=t},filtered:e.onFiltered},scopedSlots:e._u([{key:"cell()",fn:function(t){var r=t.value,s=t.item,a=t.field.key;return[[0!=s[e.pri]?[a==e.pri?[e._v(" "+e._s(r)+" ")]:e._e(),"Username"==a?[e._v(" "+e._s(r)+" ")]:e._e(),"FirstName"==a?[e._v(" "+e._s(s[a])+" ")]:e._e(),"LastName"==a?[e._v(" "+e._s(s[a])+" ")]:e._e(),"Role"==a?[e._v(" "+e._s(s[a])+" ")]:e._e(),"TrangThai"==a?[n("b-form-checkbox",{staticClass:"my-checkbox",attrs:{disabled:!0,size:"sm",name:a,value:"true","unchecked-value":"false"},model:{value:s[a],callback:function(t){e.$set(s,a,t)},expression:"item[key]"}})]:e._e()]:e._e()]]}},{key:"cell(cmd)",fn:function(t){return[0==t.item[e.pri]?[n("b-button",{staticClass:"mr-1",attrs:{size:"sm"},on:{click:function(r){return e.onSave(t.item)}}},[n("b-icon-hand-thumbs-up")],1),n("b-button",{staticClass:"mr-1",attrs:{size:"sm"},on:{click:function(r){return e.OnCancel(t.item)}}},[n("b-icon-file-x")],1)]:[n("button",{on:{click:function(r){return r.preventDefault(),e.onReset(t.item)}}},[e._v("Reset")]),e.sel[e.pri]!=t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{disabled:1==e.adding||1==e.isEditing(),variant:"outline",size:"sm"},on:{click:function(r){return e.OnEdit(t.item)}}},[n("b-icon-pencil-square")],1):e._e(),e.sel[e.pri]!=t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{disabled:1==e.adding||1==e.isEditing(),variant:"outline",size:"sm"},on:{click:function(r){return e.OnDel(t.item)}}},[n("b-icon-trash")],1):e._e(),e.sel[e.pri]==t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(r){return e.onSave(t.item)}}},[n("b-icon-hand-thumbs-up")],1):e._e(),e.sel[e.pri]==t.item[e.pri]?n("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(r){return e.OnCancel(t.item)}}},[n("b-icon-file-x")],1):e._e()]]}},{key:"bottom-row",fn:function(t){return[n("td",{attrs:{colspan:t.columns}},[n("b-row",[n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-form-group",{staticClass:"mb-0",attrs:{label:"Tìm kiếm","label-for":"filter-input","label-cols-sm":"3","label-align-sm":"right","label-size":"sm"}},[n("b-input-group",{attrs:{size:"sm"}},[n("b-form-input",{attrs:{id:"filter-input",type:"search",placeholder:"Type to Search"},model:{value:e.filter,callback:function(t){e.filter=t},expression:"filter"}}),n("b-input-group-append",[n("b-button",{attrs:{disabled:!e.filter},on:{click:function(t){e.filter=""}}},[e._v("Clear")])],1)],1)],1)],1),n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-form-group",{staticClass:"mb-0",attrs:{label:"Số dòng","label-for":"per-page-select","label-cols-sm":"6","label-cols-md":"4","label-cols-lg":"3","label-align-sm":"right","label-size":"sm"}},[n("b-form-select",{attrs:{id:"per-page-select",options:e.pageOptions,size:"sm"},model:{value:e.perPage,callback:function(t){e.perPage=t},expression:"perPage"}})],1)],1),n("b-col",{staticClass:"my-1 text-right",attrs:{sm:"6"}},[n("span",[e._v("page : "+e._s(e.currentPage)+" / "+e._s(e.last_page)+" of "+e._s(e.totalRows)+" ")]),n("b-button",{staticClass:"mr-1 mb-1",attrs:{disabled:1==e.adding||1==e.isEditing(),size:"sm"},on:{click:e.OnAdd}},[n("b",[e._v("Add")])])],1),n("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[n("b-pagination",{ref:"mypage",attrs:{disabled:1==e.adding||1==e.isEditing(),"total-rows":e.totalRows,"per-page":e.perPage,size:"sm",align:"fill","first-text":"First","prev-text":"Prev","next-text":"Next","last-text":"Last"},on:{change:e.onChangePage,input:e.onPagingInput},model:{value:e.currentPage,callback:function(t){e.currentPage=t},expression:"currentPage"}})],1)],1)],1)]}},{key:"row-details",fn:function(t){return[n("b-card",[n("ul",e._l(t.item,(function(t,r){return n("li",{key:r},[e._v(e._s(r)+": "+e._s(t))])})),0)])]}}])})],1),n("b-modal",{attrs:{id:e.infoModal.id,title:e.infoModal.title,"ok-only":""},on:{hide:e.resetInfoModal}},[n("pre",[e._v(e._s(e.infoModal.content))])])],1)],1)},s=[],a=r(12954),l=r(20144),i=r(85890),o=r(96486),d=r(70790),c=r(53009),m=r(19938),u=r.n(m);l["default"].use(a.ZP,{classes:!0,fieldsBagName:"veeFields"}),l["default"].component("v-select",u());var h={components:{VueTypeaheadBootstrap:i.Z},data(){return{items:[],fields:[{key:"Id",formatter:(e,t,r)=>e,sortable:!0,thClass:"text-center",tdClass:"text-center align-middle",thStyle:{width:"8%"}},{key:"Username",sortable:!0,thClass:"text-center",tdClass:"align-middle",thStyle:{width:"10%"}},{key:"FirstName",sortable:!0,thClass:"text-center",tdClass:"align-middle",thStyle:{width:"10%"}},{key:"LastName",sortable:!0,thClass:"text-center",tdClass:"align-middle",thStyle:{width:"10%"}},{key:"Role",sortable:!0,thClass:"text-center",tdClass:"align-middle",thStyle:{width:"40%"}},{key:"TrangThai",label:"TT",sortable:!0,thClass:"text-center",tdClass:"align-middle text-center",thStyle:{width:"5%"}},{key:"cmd",class:"text-center",thClass:"text-center",tdClass:"align-middle",thStyle:{width:"17%"}}],totalRows:1,currentPage:1,perPage:5,pageOptions:[5,10,15,{value:100,text:"Show a lot"}],sortBy:"",sortDesc:!1,sortDirection:"asc",filter:null,filterOn:[],infoModal:{id:"info-modal",title:"",content:""},sel:{},sel2:{},pri:"Id",last_page:0,adding:!1,ListAuto:[],title:"hello title",LopHocs:[],url:"/api/NguoiDung4",ListRole:[]}},watch:{last_page:function(e,t){},currentPage:function(e){},totalRows:function(e,t){}},computed:{},mounted(){},methods:{onReset(e){this.Reset(e.Id)},OnSearch:(0,o.debounce)((function(e){fetch(`/api/Ban/AutoComplete?q=${e}`).then((e=>e.json())).then((e=>{console.log(JSON.stringify(e)),this.ListAuto=e.items}))}),500),onPagingInput(){},myProvider(e){let t=e.currentPage,r=e.perPage,n=e.sortBy,s=e.sortDesc,a=this,l=`${this.url}/GetPage2`;if(l=`${l}?page=${t}&size=${r}&sortBy=${n}&sortDesc=${s}`,e.filter){let t=e.filter;l=`${l}&filter=${t}`}return d.Z.get(l).then((e=>(this.GetRoleList(),a.last_page=e.data.last_page,a.totalRows=e.data.rowCount,a.items=e.data.data,this.adding,a.mapData(e.data.data)))).catch((e=>{c.Z.XuLyErr(e)}))},mapData(e){let t=[];return e.forEach((e=>{let r={};Object.keys(e).forEach((t=>{let n=t;"Role"!=n?r[n]=e[t]:""==e[t]?r[n]=null:r[n]=e[t].split(",")})),t.push(r)})),t},onChangePage(){this.sel={},this.adding=!1},OnAdd(){let e={};e[this.pri]=0,e["FirstName"]="",e["LastName"]="",e["Username"]="",e["Password"]="123",e["Role"]=[],e["TrangThai"]=!1,this.sel2=e,this.showModal()},OnEdit(e){"{}"==JSON.stringify(this.sel)&&1!=this.adding&&this.getById(e[this.pri])},onSaveModal(){this.$validator.validateAll().then((e=>{if(!e)return void this.toast("Không hợp lệ");let t=JSON.parse(JSON.stringify(this.sel2)),r="";t.Role.forEach(((e,n)=>{n<t.Role.length-1?r+=`${e},`:r+=`${e}`})),t.Role=r,0==t[this.pri]?this.Add(t):this.Update(t)}))},onSave(e){this.$validator.validateAll().then((t=>{if(!t)return void this.toast("Không hợp lệ");let r=JSON.parse(JSON.stringify(e));0==r[this.pri]?this.Add(r).then((e=>{"ok"==e.data.kq&&(this.toast(`${e.data.msg}`),this.adding=!1,this.$refs.mytable.refresh())})):this.Update(r).then((e=>{this.toast(`${e.data.msg}`),this.adding=!1,this.sel={},this.$refs.mytable.refresh()}))}))},OnCancel(e){0!=e[this.pri]?(this.doCancel(e),this.sel={}):(this.adding=!1,this.$refs.mytable.refresh())},OnDel(e){this.Del(e[this.pri]).then((e=>{if("nook"==e.data.kq)return void this.toast(`${e.data.msg}`);this.toast(`${e.data.msg}`);let t=this.getLastPage(this.totalRows-1);t<this.currentPage&&(this.currentPage=t),this.$refs.mytable.refresh()}))},delRow(e){let t=e.id,r=this.items.findIndex((e=>e.id==t));this.items.splice(r,1)},isEditing(){return"{}"!=JSON.stringify(this.sel)},isAdded(){let e=!1;return this.items.forEach((t=>{0==t.id&&(e=!0)})),e},doCancel(e){for(let t in e)e[t]!=this.sel[t]&&(e[t]=this.sel[t])},getLastPage(e){let t=this.perPage,r=e%t;return 0==r?e/t:(e-r)/t+1},gotoPage(e){this.currentPage=e,this.$refs.mytable.refresh()},toast(e,t=null){this.$bvToast.toast(e,{title:"Information",variant:t,solid:!0})},async Reset(e){return await d.Z.get(`/api/NguoiDung4/Reset?id=${e}`).then((e=>{this.$refs.mytable.refresh()})).catch((e=>{c.Z.XuLyErr(e)}))},async Add(e){return await d.Z.post(`${this.url}/Add`,e).then((e=>{this.toast(`${e.data.msg}`),this.hideModal(),this.$refs.mytable.refresh()})).catch((e=>{c.Z.XuLyErr(e)}))},async Update(e){return await d.Z.post(`${this.url}/Update`,e).then((e=>{this.hideModal(),this.toast(`${e.data.msg}`),this.$refs.mytable.refresh()})).catch((e=>{c.Z.XuLyErr(e)}))},async Del(e){return await d.Z.get(`${this.url}/Delete?id=${e}`).then((e=>{this.toast(`${e.data.msg}`),this.$refs.mytable.refresh()})).catch((e=>{c.Z.XuLyErr(e)}))},async getById(e){return await d.Z.get(`${this.url}/GetById?id=${e}`).then((e=>{this.sel2=e.data,this.sel2["Role"]=this.sel2["Role"].split(","),this.showModal()})).catch((e=>{c.Z.XuLyErr(e)}))},async GetRoleList(){return await d.Z.get(`${this.url}/TestRoleList`).then((e=>{this.ListRole=e.data})).catch((e=>{c.Z.XuLyErr(e)}))},async GetComboLopHoc(){return await d.Z.get("/api/LopHoc4/LdsComboItem").then((e=>{this.LopHocs=e.data.list})).catch((e=>{c.Z.XuLyErr(e)}))},info(e,t,r){this.infoModal.title=`Row index: ${t}`,this.infoModal.content=JSON.stringify(e,null,2),this.$root.$emit("bv::show::modal",this.infoModal.id,r)},resetInfoModal(){this.infoModal.title="",this.infoModal.content=""},onFiltered(e){this.totalRows=e.length,this.currentPage=1},showModal(){this.$refs["my-modal"].show()},hideModal(){this.$refs["my-modal"].hide()}}},p=h,f=r(1001),b=(0,f.Z)(p,n,s,!1,null,null,null),g=b.exports},29938:function(e,t){t["Z"]='<template>\r\n    <div class="MonHocToan">\r\n        <raw-loader :mytxt="require(\'!raw-loader!./NguoiDungRole.vue\').default"></raw-loader>\r\n        <h1 class="border-bottom">Nguoi Dung Role</h1>\r\n        <div>\r\n            <form @submit.stop.prevent="onSaveModal">\r\n                <b-modal ref="my-modal" size="sm" :no-close-on-backdrop="true" hide-footer\r\n                    :title="(sel2[pri] == 0) ? \'Add User\' : \'form Edit\'">\r\n                    <div class="d-block">\r\n                        <form @submit.stop.prevent="onSaveModal">\r\n                            <div class="">\r\n                                <div class="form-group row" v-for="(v, k) in sel2" :key="k">\r\n\r\n                                    <template v-if="(k == pri)">\r\n                                        <label class="col-sm-3 col-form-label">Id</label>\r\n                                        <div class="col-sm-9">\r\n                                            <input :readonly="true" :name="k" v-model="sel2[k]" :class="{\r\n                                                \'form-control\': true,\r\n                                                \'ko-hop-le\': errors.has(k),\r\n                                            }" type="text" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if="k == \'FirstName\'">\r\n                                        <label class="col-sm-3 col-form-label">FirstName</label>\r\n                                        <div class="col-sm-9">\r\n                                            <input :name="k" v-model="sel2[k]" autocomplete="off" :class="{\r\n                                                \'form-control\': true,\r\n                                                \'ko-hop-le\': errors.has(k),\r\n                                            }" type="text" v-validate="\'required\'" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if="k == \'LastName\'">\r\n                                        <label class="col-sm-3 col-form-label">LastName</label>\r\n                                        <div class="col-sm-9">\r\n                                            <input :name="k" v-model="sel2[k]" autocomplete="off" :class="{\r\n                                                \'form-control\': true,\r\n                                                \'ko-hop-le\': errors.has(k),\r\n                                            }" type="text" v-validate="\'required\'" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if="k == \'Username\'">\r\n                                        <label class="col-sm-3 col-form-label">Username</label>\r\n                                        <div class="col-sm-9">\r\n                                            <input :readonly=" sel2[pri]!=0 " :name="k" v-model="sel2[k]" autocomplete="off" :class="{\r\n                                                \'form-control\': true,\r\n                                                \'ko-hop-le\': errors.has(k),\r\n                                            }" type="text" v-validate="\'required\'" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if="k == \'Password\'">\r\n                                        <label class="col-sm-3 col-form-label">Password</label>\r\n                                        <div class="col-sm-9">\r\n                                            <input :readonly=" sel2[pri]!=0 " :name="k" v-model="sel2[k]" autocomplete="off" :class="{\r\n                                                \'form-control\': true,\r\n                                                \'ko-hop-le\': errors.has(k),\r\n                                            }" type="text" v-validate="\'required\'" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if="k == \'Role\'">\r\n                                        <label class="col-sm-3 col-form-label">Role</label>\r\n                                        <div class="col-sm-9">\r\n                                            <v-select multiple v-model="sel2[k]" v-validate="\'required\'" :name="k" :reduce="(option) => option.id"\r\n                                            :options="\r\n                                            ListRole\r\n                                            " :has-error="errors.has(k)" :class="{ danger: errors.has(k) }" />\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if="k == \'TrangThai\'">\r\n                                        <label class="col-sm-3 col-form-label">TrangThai</label>\r\n                                        <div class="col-sm-9">\r\n                                            <b-form-checkbox class="my-checkbox" v-model="sel2[k]" \r\n                                                :name="k"\r\n                                                value=true\r\n                                                unchecked-value=false>\r\n                                            </b-form-checkbox>\r\n                                        </div>\r\n                                    </template>\r\n                                </div>\r\n                                <div class="text-right">\r\n                                    <button type="submit" class="btn mr-1">Save</button>\r\n                                    <button type="button" class="btn" @click="hideModal()">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </b-modal>\r\n                <b-table thead-class="myTable" ref="mytable" :items="myProvider" :fields="fields"\r\n                    :current-page="currentPage" :per-page="perPage" :filter="filter" :filter-included-fields="filterOn"\r\n                    :sort-by.sync="sortBy" :sort-desc.sync="sortDesc" :sort-direction="sortDirection" stacked="sm"\r\n                    show-empty small fixed outlined bordered @filtered="onFiltered">\r\n                    <template v-slot:cell()="{ value, item, field: { key } }">\r\n                        <template>\r\n                            <template v-if="item[pri] != 0">\r\n                                <template v-if="key == pri">\r\n                                    {{ value }} \r\n                                </template>\r\n                                <template v-if=" key == \'Username\' ">\r\n                                    {{value}}\r\n                                </template>\r\n                                <template v-if=" key == \'FirstName\' ">\r\n                                    {{ item[key] }}\r\n                                </template>\r\n                                <template v-if=" key == \'LastName\' ">\r\n                                    {{ item[key] }}\r\n                                </template>\r\n                                <template v-if=" key == \'Role\' ">\r\n                                    {{ item[key] }}\r\n                                </template>\r\n                                <template v-if=" key == \'TrangThai\' ">\r\n                                    <b-form-checkbox :disabled="true" size="sm" class="my-checkbox" v-model="item[key]" \r\n                                        :name="key"\r\n                                        value=true\r\n                                        unchecked-value=false>\r\n                                    </b-form-checkbox>\r\n                                </template>\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                    <template #cell(cmd)="row">\r\n                        <template v-if="row.item[pri] == 0">\r\n                            <b-button class="mr-1" size="sm" @click="onSave(row.item)">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button class="mr-1" size="sm" @click="OnCancel(row.item)">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                        <template v-else>\r\n                            <button v-on:click.prevent="onReset(row.item)">Reset</button>\r\n                            <b-button :disabled="adding == true || isEditing() == true" variant="outline" class="mr-1"\r\n                                v-if="sel[pri] != row.item[pri]" size="sm" @click="OnEdit(row.item)">\r\n                                <b-icon-pencil-square></b-icon-pencil-square>\r\n                            </b-button>\r\n                            <b-button :disabled="adding == true || isEditing() == true" variant="outline" class="mr-1"\r\n                                v-if="sel[pri] != row.item[pri]" size="sm" @click="OnDel(row.item)">\r\n                                <b-icon-trash></b-icon-trash>\r\n                            </b-button>\r\n                            <b-button variant="outline" class="mr-1" v-if="sel[pri] == row.item[pri]" size="sm"\r\n                                @click="onSave(row.item)">\r\n                                <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                            </b-button>\r\n                            <b-button variant="outline" class="mr-1" v-if="sel[pri] == row.item[pri]" size="sm"\r\n                                @click="OnCancel(row.item)">\r\n                                <b-icon-file-x></b-icon-file-x>\r\n                            </b-button>\r\n                        </template>\r\n                    </template>\r\n                    <template #bottom-row="data">\r\n                        <td :colspan="data.columns">\r\n                            <b-row>\r\n                                <b-col sm="6" class="my-1">\r\n                                    <b-form-group label="Tìm kiếm" label-for="filter-input" label-cols-sm="3"\r\n                                        label-align-sm="right" label-size="sm" class="mb-0">\r\n                                        <b-input-group size="sm">\r\n                                            <b-form-input id="filter-input" v-model="filter" type="search"\r\n                                                placeholder="Type to Search">\r\n                                            </b-form-input>\r\n                                            <b-input-group-append>\r\n                                                <b-button :disabled="!filter" @click="filter = \'\'">Clear</b-button>\r\n                                            </b-input-group-append>\r\n                                        </b-input-group>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm="6" class="my-1">\r\n                                    <b-form-group label="Số dòng" label-for="per-page-select" label-cols-sm="6"\r\n                                        label-cols-md="4" label-cols-lg="3" label-align-sm="right" label-size="sm"\r\n                                        class="mb-0">\r\n                                        <b-form-select id="per-page-select" v-model="perPage" :options="pageOptions"\r\n                                            size="sm">\r\n                                        </b-form-select>\r\n                                    </b-form-group>\r\n                                </b-col>\r\n                                <b-col sm="6" class="my-1 text-right">\r\n                                    <span>page : {{ currentPage }} / {{ last_page }} of {{ totalRows }} </span>\r\n                                    <b-button :disabled="adding == true || isEditing() == true" class="mr-1 mb-1" size="sm"\r\n                                        @click="OnAdd">\r\n                                        <b>Add</b></b-button>\r\n                                </b-col>\r\n                                <b-col sm="6" class="my-1">\r\n                                    <b-pagination :disabled="adding == true || isEditing() == true" ref="mypage"\r\n                                        v-model="currentPage" :total-rows="totalRows" :per-page="perPage" size="sm"\r\n                                        align="fill" @change="onChangePage" @input="onPagingInput" first-text="First"\r\n                                        prev-text="Prev" next-text="Next" last-text="Last">\r\n                                    </b-pagination>\r\n                                </b-col>\r\n                            </b-row>\r\n                        </td>\r\n                    </template>\r\n                    <template #row-details="row">\r\n                        <b-card>\r\n                            <ul>\r\n                                <li v-for="(value, key) in row.item" :key="key">{{ key }}: {{ value }}</li>\r\n                            </ul>\r\n                        </b-card>\r\n                    </template>\r\n                </b-table>\r\n            </form>\r\n            \x3c!-- Info modal --\x3e\r\n            <b-modal :id="infoModal.id" :title="infoModal.title" ok-only @hide="resetInfoModal">\r\n                <pre>{{ infoModal.content }}</pre>\r\n            </b-modal>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport VeeValidate from "vee-validate";\r\nimport Vue from "vue";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: \'veeFields\'\r\n});\r\nimport VueTypeaheadBootstrap from "vue-typeahead-bootstrap";\r\nimport { debounce } from "lodash";\r\nimport fetchClient from "@/fetchClient";\r\nimport TumLum from "@/TumLum";\r\n\r\nimport vSelect from "vue-select";\r\nVue.component("v-select", vSelect);\r\n\r\nexport default {\r\n    components: {\r\n        VueTypeaheadBootstrap,\r\n    },\r\n    data() {\r\n        return {\r\n            items: [\r\n            ],\r\n            fields: [\r\n                {\r\n                    key: \'Id\',\r\n                    formatter: (value, key, item) => {\r\n                        return value;\r\n                    },\r\n                    sortable: true,\r\n                    thClass: \'text-center\',\r\n                    tdClass: \'text-center align-middle\',\r\n                    thStyle: { width: "8%" },\r\n                },\r\n                //{ key: \'TenLop\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "80%" }, },\r\n                { key: \'Username\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "10%" }, },\r\n                { key: \'FirstName\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "10%" }, },\r\n                { key: \'LastName\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "10%" }, },\r\n                { key: \'Role\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "40%" }, },\r\n                { key: \'TrangThai\',label:\'TT\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle text-center\', thStyle: { width: "5%" }, },\r\n                {\r\n                    key: \'cmd\',\r\n                    class: \'text-center\',\r\n                    thClass: \'text-center\',\r\n                    tdClass: \'align-middle\',\r\n                    thStyle: { width: "17%" }\r\n                }\r\n            ],\r\n            totalRows: 1,\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            pageOptions: [5, 10, 15, { value: 100, text: "Show a lot" }],\r\n            sortBy: \'\',\r\n            sortDesc: false,\r\n            sortDirection: \'asc\',\r\n            filter: null,\r\n            filterOn: [],\r\n            infoModal: {\r\n                id: \'info-modal\',\r\n                title: \'\',\r\n                content: \'\'\r\n            },\r\n            sel: {},\r\n            sel2: {},\r\n            pri: "Id",\r\n            last_page: 0,\r\n            adding: false,\r\n            ListAuto: [],\r\n\r\n            title: "hello title",\r\n            LopHocs: [],\r\n            url:`/api/NguoiDung4`,\r\n            ListRole:[]\r\n        }\r\n    },\r\n    watch: {\r\n        last_page: function (newValue, oldValue) {\r\n        },\r\n        currentPage: function (val) {\r\n        },\r\n        totalRows: function (newValue, oldValue) {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        onReset(item){\r\n            this.Reset(item.Id);\r\n        },\r\n        OnSearch: debounce(function (query) {\r\n            fetch(`/api/Ban/AutoComplete?q=${query}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(JSON.stringify(data))\r\n                    this.ListAuto = data.items;\r\n                });\r\n        }, 500),\r\n        onPagingInput() {\r\n        },\r\n        myProvider(ctx) {\r\n            let currentPage = ctx.currentPage;\r\n            let perPage = ctx.perPage;\r\n            let sortBy = ctx.sortBy;\r\n            let sortDesc = ctx.sortDesc;\r\n            let vm = this;\r\n            let url = `${this.url}/GetPage2`;\r\n            url = `${url}?page=${currentPage}&size=${perPage}&sortBy=${sortBy}&sortDesc=${sortDesc}`;\r\n            if (ctx.filter) {\r\n                let filter = ctx.filter;\r\n                url = `${url}&filter=${filter}`;\r\n            }\r\n            return fetchClient.get(url)\r\n                .then(res => {\r\n                    this.GetRoleList();\r\n                    vm.last_page = res.data.last_page;\r\n                    vm.totalRows = res.data.rowCount;\r\n                    vm.items = res.data.data;\r\n                    if (this.adding == true) {\r\n                        // let r = {};\r\n                        // r[this.pri] = 0;\r\n                        // r["TenKhach"] = "xxx";\r\n                        // r["Ngay"] = new Date();\r\n                        // res.data.data.unshift(r);\r\n                    }\r\n                    return vm.mapData(res.data.data); //res.data.data;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        mapData(data) {\r\n            let kq = [];\r\n            data.forEach(obj => {\r\n                let x = {};\r\n                Object.keys(obj).forEach(key => {\r\n                    let k = key;\r\n                    if(k!="Role"){\r\n                        x[k] = obj[key];\r\n                    }else{\r\n                        if(obj[key]==""){\r\n                            x[k]=null;\r\n                        }else{\r\n                            x[k]=obj[key].split(",");\r\n                        }\r\n                    }\r\n                });\r\n                kq.push(x);\r\n            })\r\n            return kq;\r\n        },\r\n        onChangePage() {\r\n            this.sel = {};\r\n            this.adding = false;\r\n        },\r\n        OnAdd() {\r\n            let r={}\r\n            r[this.pri]=0;\r\n            r["FirstName"]="";\r\n            r["LastName"]="";\r\n            r["Username"]="";\r\n            r["Password"]="123";\r\n            r["Role"]=[];\r\n            r["TrangThai"]=false;\r\n            this.sel2 =r;\r\n            this.showModal();\r\n        },\r\n        OnEdit(item) {\r\n            if (JSON.stringify(this.sel) != "{}" || this.adding == true) {\r\n                return;\r\n            }\r\n            this.getById(item[this.pri]);\r\n        },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast("Không hợp lệ");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.sel2));\r\n\r\n                let roleStr = "";\r\n                r.Role.forEach((v, k) => {\r\n                    if (k < r.Role.length - 1) {\r\n                        roleStr += `${v},`;\r\n                    } else {\r\n                        roleStr += `${v}`;\r\n                    }\r\n                })\r\n                r.Role=roleStr;\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r);\r\n                } else {\r\n                    this.Update(r);\r\n                }\r\n            });\r\n        },\r\n        onSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast("Không hợp lệ");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r).then(res => {\r\n                        if (res.data.kq == \'ok\') {\r\n                            this.toast(`${res.data.msg}`);\r\n                            this.adding = false;\r\n                            this.$refs.mytable.refresh();\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.Update(r).then(res => {\r\n                        this.toast(`${res.data.msg}`);\r\n                        this.adding = false;\r\n                        this.sel = {};\r\n                        this.$refs.mytable.refresh();\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] != 0) {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            } else {\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            }\r\n        },\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]).then(res => {\r\n                if (res.data.kq == \'nook\') {\r\n                    this.toast(`${res.data.msg}`);\r\n                    return;\r\n                }\r\n                this.toast(`${res.data.msg}`);\r\n                let lastPage = this.getLastPage(this.totalRows - 1);\r\n                if (lastPage < this.currentPage) this.currentPage = lastPage;\r\n                this.$refs.mytable.refresh();\r\n            })\r\n        },\r\n        delRow(item) {\r\n            let id = item.id;\r\n            let index = this.items.findIndex(x => x.id == id);\r\n            this.items.splice(index, 1);\r\n        },\r\n        isEditing() {\r\n            return JSON.stringify(this.sel) != "{}"\r\n        },\r\n        isAdded() {\r\n            let kq = false;\r\n            this.items.forEach(x => {\r\n                if (x.id == 0) kq = true;\r\n            })\r\n            return kq;\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.perPage;\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        gotoPage(page) {\r\n            this.currentPage = page;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async Reset(id){\r\n            return await fetchClient.get(`/api/NguoiDung4/Reset?id=${id}`)\r\n            .then(res=>{\r\n                this.$refs.mytable.refresh();\r\n            })\r\n            .catch(err=>{\r\n                TumLum.XuLyErr(err);\r\n            })\r\n        },\r\n        async Add(r) {\r\n            return await fetchClient.post(`${this.url}/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.hideModal();\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`${this.url}/Update`, r)\r\n                .then(res => {\r\n                    this.hideModal();\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Del(id) {\r\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`)\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\r\n                .then(res => {\r\n                    this.sel2 = res.data;\r\n                    this.sel2["Role"]=this.sel2["Role"].split(",");\r\n                    this.showModal();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async GetRoleList() {\r\n            return await fetchClient.get(`${this.url}/TestRoleList`)\r\n                .then(res => {\r\n                    this.ListRole=res.data;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async GetComboLopHoc() {\r\n            return await fetchClient.get(`/api/LopHoc4/LdsComboItem`)\r\n                .then(res => {\r\n                    this.LopHocs = res.data.list;\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        info(item, index, button) {\r\n            this.infoModal.title = `Row index: ${index}`\r\n            this.infoModal.content = JSON.stringify(item, null, 2)\r\n            this.$root.$emit(\'bv::show::modal\', this.infoModal.id, button)\r\n        },\r\n        resetInfoModal() {\r\n            this.infoModal.title = \'\'\r\n            this.infoModal.content = \'\'\r\n        },\r\n        onFiltered(filteredItems) {\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n        },\r\n        showModal() {\r\n            this.$refs["my-modal"].show();\r\n        },\r\n        hideModal() {\r\n            this.$refs["my-modal"].hide();\r\n        },\r\n    }\r\n}\r\n<\/script>\r\n  \r\n  '},53009:function(e,t){t["Z"]={XuLyErr(e){let t=JSON.parse(JSON.stringify(e)).status;if(400==t){let t=JSON.parse(JSON.stringify(e.response)).data.message;alert(t)}else e.response?401==e.response.status?alert("Chưa đăng nhập hoặc token hết hạn"):403==e.response.status&&alert("Bạn ko có quyền"):e.request?alert(JSON.stringify(e.request)):e.message&&alert(JSON.stringify(e.message))}}},70790:function(e,t,r){var n=r(9669),s=r.n(n);const a=()=>{const e={baseURL:"",method:"get",headers:{"Content-Type":"application/json;charset=utf-8"}};let t=s().create(e);return t.interceptors.request.use((function(e){const t=localStorage.getItem("token");return e.headers.Authorization=t?`Bearer ${t}`:"",e})),t};t["Z"]=a()}}]);
//# sourceMappingURL=5305.d61d398a.js.map