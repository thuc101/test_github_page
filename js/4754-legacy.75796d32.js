(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[4754],{34754:function(t,e,r){"use strict";r.r(e),r.d(e,{default:function(){return y}});var n=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("raw-loader",{attrs:{mytxt:r(54650).Z}}),t._v(" "+t._s(t.msg)),n("br"),t._v(" rowCount : "+t._s(t.rowCount)+" "),n("br"),n("div",{staticClass:"mb-1"},[n("button",{staticClass:"mr-1",attrs:{disabled:""!=t.cmd||0!=Object.keys(t.sel).length},on:{click:t.onAdd}},[t._v("Add")]),n("button",{staticClass:"mr-1",on:{click:t.ReLoadData}},[t._v("ReLoad Data")])]),n("div",{ref:"table"}),n("b-modal",{ref:"my-modal2",attrs:{id:"modal-1",size:"sm","no-close-on-backdrop":!0,"hide-footer":"",title:"BootstrapVue"}},[n("form",{on:{submit:function(e){return e.stopPropagation(),e.preventDefault(),t.onSaveModal.apply(null,arguments)}}},[n("div",[n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v("Id")]),n("div",{staticClass:"col-sm-8"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.r.id,expression:"r.id"}],staticClass:"form-control",attrs:{type:"text",disabled:""},domProps:{value:t.r.id},on:{input:function(e){e.target.composing||t.$set(t.r,"id",e.target.value)}}})])]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v(" Name ")]),n("div",{staticClass:"col-sm-8"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.r.name,expression:"r.name"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":t.errors.has("name")},attrs:{type:"text",name:"name",autocomplete:"off"},domProps:{value:t.r.name},on:{input:function(e){e.target.composing||t.$set(t.r,"name",e.target.value)}}})])]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v(" Ngay ")]),n("div",{staticClass:"col-sm-8"},[n("b-form-datepicker",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],staticClass:"mb-2",attrs:{name:"ngay","date-format-options":{year:"numeric",month:"numeric",day:"numeric"},locale:"vi"},model:{value:t.r.ngay,callback:function(e){t.$set(t.r,"ngay",e)},expression:"r.ngay"}})],1)]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v(" Act ")]),n("div",{staticClass:"col-sm-8"},[n("b-form-checkbox",{attrs:{name:"checkbox-1",value:"true","unchecked-value":"false"},on:{change:t.ChangeAct},model:{value:t.r.act,callback:function(e){t.$set(t.r,"act",e)},expression:"r.act"}},[t._v(" Active ")])],1)]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v(" Thành phố "+t._s(t.errors.has("tp"))+" ")]),n("div",{staticClass:"col-sm-8"},[n("v-select",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{danger:t.errors.has("tp")},attrs:{name:"tp",reduce:function(t){return t.id},options:t.tps,"has-error":t.errors.has("tp")},model:{value:t.r.tp,callback:function(e){t.$set(t.r,"tp",e)},expression:"r.tp"}})],1)]),n("div",{staticClass:"form-group row"},[n("label",{staticClass:"col-sm-4 col-form-label"},[t._v(" Quyền ")]),n("div",{staticClass:"col-sm-8"},[n("v-select",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{danger:t.errors.has("quyen")},attrs:{multiple:"",name:"quyen",options:["Admin","User","Editor"]},model:{value:t.r.quyen,callback:function(e){t.$set(t.r,"quyen",e)},expression:"r.quyen"}})],1)])]),n("div",{staticClass:"float-right"},[n("button",{staticClass:"btn btn-primary mr-1 btn-sm",attrs:{type:"submit"}},[t._v("Save")]),n("button",{staticClass:"btn btn-sm",attrs:{type:"button"},on:{click:function(e){return t.hideModal()}}},[t._v("Cancel")])])])])],1)},a=[],l=r(77673),i=r(16198),o=(r(69826),r(41539),r(54747),r(38862),r(47941),r(34553),r(40561),r(60911)),s=r(17529),d=r(12954),c=r(20144),u=r(19938),h=r.n(u),g=r(30381),m=r.n(g),f=r(9669),b=r.n(f);c["default"].use(d.ZP,{classes:!0}),c["default"].component("v-select",h());var p={data:function(){return{tabulator:null,tableData:[],msg:"hello world",count:1,rowCount:0,r:{id:0,ten:"thuc 101",ngay:new Date},rec:{id:0,Name:"thuc 101",DonGia:1,Ngay:new Date},sel:{},cmd:"",tps:[{label:"Huế",id:"HUE"},{label:"Sài gòn",id:"SG"},{label:"Đà nẵng",id:"DN"},{label:"Quảng ngãi",id:"QN"}],mons:[{id:1,name:"Gạo"},{id:2,name:"Đường"},{id:3,name:"Muối"},{id:4,name:"Bột ngọt"},{id:5,name:"Nước ngọt"},{id:6,name:"Cà phê"},{id:7,name:"Bia"},{id:8,name:"Nước mía"}]}},mounted:function(){var t=this;document.getElementById("myScript")?this.onReady():s.Z.loadScript("myScript","/js/jquery.min.js").then((function(){s.Z.loadScript("","/js/bootstrap.js").then((function(){s.Z.loadScript("","/js/select2.min.js").then((function(){s.Z.loadScript("","/js/bootstrap-datepicker.js").then((function(){s.Z.loadScript("","/js/moment.js").then((function(){s.Z.loadCss("/css/select2.min.css").then((function(){s.Z.loadCss("/css/bootstrap-datepicker.css").then((function(){t.onReady()}))}))}))}))}))}))}))},methods:{onReady:function(){this.loadTabulator()},loadTabulator:function(){var t=this,e=function(e,r,n){n((function(){e.getRow().getIndex();$(e.getElement()).find("#testedit").on("click",e,t.onTestEdit),$(e.getElement()).find("#doAdd").on("click",e.getRow(),t.onSave),$(e.getElement()).find("#cancelAdd").on("click",e.getRow(),t.onCancelAdd),$(e.getElement()).find("#save").on("click",e.getRow(),t.onSave),$(e.getElement()).find("#cancel").on("click",e.getRow(),t.onCancel),$(e.getElement()).find("#edit").on("click",e.getRow(),t.onEdit),$(e.getElement()).find("#del").on("click",e.getRow(),t.onDel)}));var a=$("<div>"),l=$("<button>",{text:"Add",class:"mr-1"}).attr("id","doAdd").hide(),i=$("<button>",{text:"Cancel",class:"mr-1"}).attr("id","cancelAdd").hide(),o=$("<button>",{text:"Save",class:"mr-1"}).attr("id","save").hide(),s=$("<button>",{text:"Cancel",class:"mr-1"}).attr("id","cancel").hide(),d=$("<button>",{text:"Edit",class:"mr-1"}).attr("id","edit"),c=$("<button>",{text:"Del",class:"mr-1"}).attr("id","del");a.append(l),a.append(i),a.append(o),a.append(s),a.append(d),a.append(c);var u=e.getRow().getIndex();return""==t.cmd?t.sel.id==e.getRow().getData().id?(o.show(),s.show(),d.hide(),c.hide()):1==$.isEmptyObject(t.sel)?(o.hide(),s.hide(),0==u&&(d.hide(),c.hide(),l.show(),i.show())):(d.attr("disabled","disabled"),c.attr("disabled","disabled")):0==u?(d.hide(),c.hide(),l.show(),i.show()):(d.attr("disabled","disabled"),c.attr("disabled","disabled")),a[0]},r=function(e,r,n){n((function(){var r=$(e.getElement()).find("input"),n=t.sel.id==e.getRow().getData().id||0==e.getRow().getData().id;0==n?($(e.getElement()).find("input:first").prop("disabled",!0),$(e.getElement()).find("input:first").css("background-color","#e9ecef")):$(e.getElement()).find("input:first").css("background-color","white"),r.css({padding:"4px",width:"100%","box-sizing":"border-box",height:"100%","text-align":"center"}),r.prop("readonly",!0),r.datepicker({format:"dd/mm/yyyy",todayBtn:!0,autoclose:!0,todayHighlight:!0});m()(e.getValue(),"DD/MM/YYYY").format("DD/MM/YYYY");var a=m()(e.getValue()).format("DD/MM/YYYY");r.datepicker("setDate",a),r.datepicker().on("changeDate",(function(){var t=$(this).datepicker("getDate");e.setValue(m()(t))}))}));var a=$("<input class='form-control' />");return a[0]},n=function(e){var r=e.getRow(),n=r.getIndex();r.getElement();return t.sel.id==e.getRow().getData().id||0==n};this.tabulator=new o.Ae(this.$refs.table,{pagination:!0,paginationMode:"remote",ajaxSorting:!0,ajaxURL:"/api/Mon/GetPage",ajaxFiltering:!0,filterMode:"remote",sortMode:"remote",ajaxParams:{token:"ABC123"},paginationSize:2,paginationInitialPage:1,paginationSizeSelector:[5,10,20,30,50],height:$(window).innerHeight()-400,layout:"fitData",debugInvalidOptions:!1,ajaxRequesting:function(e,r){t.msg="".concat(e," - ")+JSON.stringify(r)},ajaxResponse:function(e,r,n){t.rowCount=n.rowCount;var a={};a.last_page=n.last_page,a.rowCount=n.rowCount;var l=[];return n.data.forEach((function(t){var e={};Object.keys(t).forEach((function(r){var n=r;"Id"==n&&(n="id"),e[n]=t[r]})),l.push(e)})),a.data=l,a},rowFormatter:function(e){t.sel.id,e.getData().id},index:"id",columns:[{title:"STT",formatter:"rownum",headerHozAlign:"center",hozAlign:"center",vertAlign:"middle"},{title:"Cmd",headerHozAlign:"center",hozAlign:"center",vertAlign:"middle",headerSort:!1,width:100,formatter:e},{title:"Id",field:"id",width:50,vertAlign:"middle",headerFilter:!0,hozAlign:"center"},{title:"Name",field:"Name",width:120,vertAlign:"middle",headerFilter:!0,editor:"input",validator:["required"],editable:n},{title:"DonGia",field:"DonGia",width:80,vertAlign:"middle",headerFilter:!0,hozAlign:"right",editor:"input",editable:n,formatter:"money",formatterParams:{decimal:",",thousand:".",symbol:"",symbolAfter:"p",precision:!1}},{title:"Ngay",field:"Ngay",width:100,hozAlign:"center",headerFilter:!0,formatter:r,editable:n}]}),this.tabulator.on("dataLoaded",(function(e){t.onLoad()})),this.tabulator.on("pageLoaded",(function(t){})),this.tabulator.on("dataChanged",(function(t){})),this.tabulator.on("rowClick",(function(t,e){})),this.tabulator.on("rowSelectionChanged",(function(t,e){})),this.tabulator.on("rowSelected",(function(t){t.getIndex()})),this.tabulator.on("cellEditing",(function(t){var e=t.getRow();e.getData(),e.getIndex()})),this.tabulator.on("cellEditCancelled",(function(t){})),this.tabulator.on("cellEdited",(function(t){if("solg"==t.getField()){var e=t.getRow(),r=(e.getData(),e.getCell("solg").getValue()),n=1e3*r;e.getIndex();e.getCell("tien").setValue(n)}})),this.tabulator.on("validationFailed",(function(t,e,r){t.getField()}))},ReLoadData:function(){this.tabulatorClear();var t=JSON.parse(JSON.stringify(this.rec));t.id=this.count++,this.tableData.push(t),this.count++,this.setPage(1)},onLoad:function(){},ChangeAct:function(){var t="true"==this.r.act;this.r.act=t},rowValidate:function(t){for(var e=!0,r=t.getCells(),n=0;n<r.length;n++)1!=r[n].isValid()&&(e=!1);return e},onSave:function(t){var e=this;t.preventDefault();var r=t.data,n=(r.getCells(),r.getIndex());this.tableData.findIndex((function(t){return t.id==n}));if(0!=this.rowValidate(t.data)){var a=JSON.parse(JSON.stringify(r.getData()));a.Ngay=m()(a.Ngay).format("YYYY-MM-DD HH:mm:ss"),this.Save(a).then((function(r){if(0==a.id){var n=e.getLastPage(e.rowCount+1);e.onCancelAdd(t),e.setPage(n)}else e.tabulator.deselectRow(e.sel.id),e.sel={},e.tabulator.redraw(!0)}))}else this.toast("không hợp lệ!!!")},onSaveModal:function(){var t=this;this.$validator.validateAll().then((function(e){if(e){var r=JSON.parse(JSON.stringify(t.r));0==r.id?(r.id=t.count,t.tabulatorAdd(r),t.count++,t.setPage(1)):t.tabulatorUpdate(r),t.hideModal()}else t.toast("Không hợp lệ")}))},onAdd:function(){this.cmd="add";var t=JSON.parse(JSON.stringify(this.rec));this.tabulator.addRow(t,!0,0),this.tabulator.selectRow(0),$(".tabulator-footer").hide(),this.tabulator.redraw(!0)},onCancelAdd:function(t){t.preventDefault();var e=t.data;e.getCells(),e.getIndex();this.cmd="",e.delete(),$(".tabulator-footer").show(),this.tabulator.redraw(!0)},onCancel:function(t){t.preventDefault();var e=t.data,r=(e.getCells(),e.getIndex()),n=(this.tableData.findIndex((function(t){return t.id==r})),$(e.getElement()),JSON.parse(JSON.stringify(this.sel)));this.tabulatorUpdate(n),this.sel={},this.tabulator.deselectRow(this.sel.id),this.tabulator.redraw(!0)},onEdit:function(t){t.preventDefault();var e=t.data,r=(e.getCells(),e.getIndex());this.tableData.findIndex((function(t){return t.id==r}));this.sel=JSON.parse(JSON.stringify(e.getData()));$(e.getElement());this.tabulator.selectRow(r),this.tabulator.redraw(!0)},onDel:function(t){var e=this;t.preventDefault();var r=t.data,n=r.getIndex(),a=this.getLastPage(this.rowCount-1);this.Del(n).then((function(t){"ok"==t.data.kq&&(r.delete(),e.setPage(a)),e.toast(t.data.msg)}))},getPageMax:function(){return this.tabulator.getPageMax()},getLastPage:function(t){var e=this.tabulator.getPageSize(),r=t%e;return 0==r?t/e:(t-r)/e+1},getPageSize:function(){return this.tabulator.getPageSize()},getPage:function(){return this.tabulator.getPage()},setPage:function(t){this.tabulator.setPage(t)},getData:function(){return this.tabulator.getData()},tabulatorLoadData:function(t){var e=this;t.forEach((function(t){e.tableData.push(t)}))},tabulatorClear:function(){var t=0;while(t<this.tableData.length)this.tableData.splice(t,1)},tabulatorAdd:function(t){this.tableData.unshift(t)},tabulatorDel:function(t){var e=this.tableData.findIndex((function(e){return e.id==t}));this.tableData.splice(e,1)},tabulatorUpdate:function(t){var e=this.tableData.findIndex((function(e){return e.id==t.id}));this.tableData.splice(e,1,t)},tabulatorGetRow:function(t){},toast:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.$bvToast.toast(t,{title:"Information",variant:e,solid:!0})},showModal:function(){this.$refs["my-modal2"].show()},hideModal:function(){this.$refs["my-modal2"].hide()},Save:function(t){return(0,i.Z)((0,l.Z)().mark((function e(){return(0,l.Z)().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,b().post("/api/Mon/Save",t).catch((function(t){console.log(t)}));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))()},Del:function(t){return(0,i.Z)((0,l.Z)().mark((function e(){return(0,l.Z)().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,b().get("/api/Mon/Delete?id=".concat(t)).catch((function(t){console.log(t)}));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))()},getById:function(t){return(0,i.Z)((0,l.Z)().mark((function e(){return(0,l.Z)().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,b().get("/api/Mon/GetById?id=".concat(t)).catch((function(t){console.log(t)}));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))()}}},v=p,w=r(1001),x=(0,w.Z)(v,n,a,!1,null,null,null),y=x.exports},69826:function(t,e,r){"use strict";var n=r(82109),a=r(42092).find,l=r(51223),i="find",o=!0;i in[]&&Array(1)[i]((function(){o=!1})),n({target:"Array",proto:!0,forced:o},{find:function(t){return a(this,t,arguments.length>1?arguments[1]:void 0)}}),l(i)},40561:function(t,e,r){"use strict";var n=r(82109),a=r(17854),l=r(51400),i=r(19303),o=r(26244),s=r(47908),d=r(65417),c=r(86135),u=r(81194),h=u("splice"),g=a.TypeError,m=Math.max,f=Math.min,b=9007199254740991,p="Maximum allowed length exceeded";n({target:"Array",proto:!0,forced:!h},{splice:function(t,e){var r,n,a,u,h,v,w=s(this),x=o(w),y=l(t,x),$=arguments.length;if(0===$?r=n=0:1===$?(r=0,n=x-y):(r=$-2,n=f(m(i(e),0),x-y)),x+r-n>b)throw g(p);for(a=d(w,n),u=0;u<n;u++)h=y+u,h in w&&c(a,u,w[h]);if(a.length=n,r<n){for(u=y;u<x-n;u++)h=u+n,v=u+r,h in w?w[v]=w[h]:delete w[v];for(u=x;u>x-n+r;u--)delete w[u-1]}else if(r>n)for(u=x-n;u>y;u--)h=u+n-1,v=u+r-1,h in w?w[v]=w[h]:delete w[v];for(u=0;u<r;u++)w[u+y]=arguments[u+2];return w.length=x-n+r,a}})},47941:function(t,e,r){var n=r(82109),a=r(47908),l=r(81956),i=r(47293),o=i((function(){l(1)}));n({target:"Object",stat:!0,forced:o},{keys:function(t){return l(a(t))}})},54650:function(t,e){"use strict";e["Z"]='<template>\r\n    <div>\r\n        <raw-loader :mytxt="require(\'!raw-loader!./Tabulator2MonAjax.vue\').default"></raw-loader>\r\n        {{ msg }}<br>\r\n        \x3c!-- {{myvalid}}<br> --\x3e\r\n        \x3c!-- rowedit : {{rowedit}}<br>   --\x3e\r\n        \x3c!-- sel : {{ sel }}<br>\r\n        {{ tableData }}<br> --\x3e\r\n        rowCount : {{ rowCount }} <br>\r\n        <div class="mb-1">\r\n            <button class="mr-1" :disabled="cmd != \'\' || Object.keys(sel).length != 0" @click="onAdd">Add</button>\r\n            <button class="mr-1" @click="ReLoadData">ReLoad Data</button>\r\n        </div>\r\n        \x3c!-- {{tableData}} --\x3e\r\n        <div ref="table"></div>\r\n        <b-modal ref="my-modal2" id="modal-1" size="sm" :no-close-on-backdrop="true" hide-footer title="BootstrapVue">\r\n            <form @submit.stop.prevent="onSaveModal">\r\n                <div>\r\n                    \x3c!-- <pre>{{r}}</pre> --\x3e\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">Id</label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" class="form-control" disabled v-model="r.id" />\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Name\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" v-model="r.name" name="name" v-validate="\'required\'" :class="{\r\n                                \'form-control\': true,\r\n                                \'ko-hop-le\': errors.has(\'name\'),\r\n                            }" autocomplete="off" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Ngay\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <b-form-datepicker v-model="r.ngay" name="ngay" v-validate="\'required\'"\r\n                                :date-format-options="{ year: \'numeric\', month: \'numeric\', day: \'numeric\' }" locale="vi"\r\n                                class="mb-2">\r\n                            </b-form-datepicker>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Act\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <b-form-checkbox v-model="r.act" name="checkbox-1" value=true unchecked-value=false\r\n                                @change="ChangeAct">\r\n                                Active\r\n                            </b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Thành phố {{ errors.has(\'tp\') }}\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <v-select v-model="r.tp" name="tp" v-validate="\'required\'" :reduce="(option) => option.id"\r\n                                :options="tps" :has-error="errors.has(\'tp\')" :class="{ danger: errors.has(\'tp\') }" />\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group row">\r\n                        <label class="col-sm-4 col-form-label">\r\n                            Quyền\r\n                        </label>\r\n                        <div class="col-sm-8">\r\n                            <v-select multiple name="quyen" v-model="r.quyen" :options="[\'Admin\', \'User\', \'Editor\']"\r\n                                v-validate="\'required\'" :class="{ danger: errors.has(\'quyen\') }" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class="float-right">\r\n                    <button type="submit" class="btn btn-primary mr-1 btn-sm">Save</button>\r\n                    <button type="button" class="btn btn-sm" @click="hideModal()">Cancel</button>\r\n                </div>\r\n            </form>\r\n        </b-modal>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { TabulatorFull as Tabulator } from \'tabulator-tables\'; //import Tabulator library\r\n//import $ from "jquery"\r\nimport MyLoader from "@/func/MyLoad.js";\r\n\r\nimport VeeValidate from "vee-validate";\r\nimport Vue from "vue";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n});\r\n\r\nimport vSelect from "vue-select";\r\nVue.component("v-select", vSelect);\r\nimport "vue-select/dist/vue-select.css";\r\nimport moment from \'moment\';\r\nimport axios from \'axios\';\r\n\r\nexport default {\r\n    data: function () {\r\n        return {\r\n            tabulator: null, //variable to hold your table\r\n            tableData: [], //data for table to display\r\n            msg: "hello world",\r\n            count: 1,\r\n            rowCount: 0,\r\n            r: {\r\n                id: 0,\r\n                ten: \'thuc 101\',\r\n                ngay: new Date\r\n            },\r\n            rec: {\r\n                id: 0,\r\n                Name: "thuc 101",\r\n                DonGia: 1,\r\n                Ngay: new Date()\r\n            },\r\n            sel: {},//lưu giá trị cũ\r\n            cmd: "",//for add\r\n\r\n\r\n\r\n\r\n\r\n\r\n            tps: [\r\n                { label: \'Huế\', id: \'HUE\' },\r\n                { label: \'Sài gòn\', id: \'SG\' },\r\n                { label: \'Đà nẵng\', id: \'DN\' },\r\n                { label: \'Quảng ngãi\', id: \'QN\' },\r\n            ],\r\n            mons: [\r\n                { id: 1, name: \'Gạo\' },\r\n                { id: 2, name: \'Đường\' },\r\n                { id: 3, name: \'Muối\' },\r\n                { id: 4, name: \'Bột ngọt\' },\r\n                { id: 5, name: \'Nước ngọt\' },\r\n                { id: 6, name: \'Cà phê\' },\r\n                { id: 7, name: \'Bia\' },\r\n                { id: 8, name: \'Nước mía\' }\r\n            ]\r\n        }\r\n    },\r\n    mounted() {\r\n        if (!document.getElementById("myScript")) {\r\n            MyLoader.loadScript("myScript", "/js/jquery.min.js").then(() => {\r\n                MyLoader.loadScript("", "/js/bootstrap.js").then(() => {\r\n                    MyLoader.loadScript("", "/js/select2.min.js").then(() => {\r\n                        MyLoader.loadScript("", "/js/bootstrap-datepicker.js").then(() => {\r\n                            MyLoader.loadScript("", "/js/moment.js").then(() => {\r\n                                MyLoader.loadCss("/css/select2.min.css").then(() => {\r\n                                    MyLoader.loadCss("/css/bootstrap-datepicker.css").then(() => {\r\n                                        this.onReady();\r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            this.onReady();\r\n        }\r\n    },\r\n    methods: {\r\n        onReady() {\r\n            this.loadTabulator();\r\n        },\r\n        loadTabulator() {\r\n            var that = this;\r\n\r\n            var tplFormatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    /*\r\n                    let $input = $(cell.getElement()).find("input");\r\n                    $input.css({\r\n                        "padding": "4px",\r\n                        "width": "100%",\r\n                        "box-sizing": "border-box",\r\n                        "font-family": "verdana",\r\n                        "font-size": "9px"\r\n                    })\r\n                    */\r\n                });\r\n                var $el = $("<input class=\'form-control form-control-sm\' />");\r\n                $el.css({\r\n                    "padding": "4px",\r\n                    "width": "100%",\r\n                    "box-sizing": "border-box",\r\n                    "font-family": "verdana",\r\n                    "font-size": "9px"\r\n                })\r\n                $el.val(cell.getValue());\r\n                //let editable = (that.sel.id == cell.getRow().getData().id);\r\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                if (editable == false) {\r\n                    $el.attr(\'disabled\', \'disabled\');\r\n                }\r\n                $el.on("change", function (e) {\r\n                    cell.setValue($(this).val());\r\n                });\r\n                $el.on("blur", function (e) {\r\n                    cell.setValue($(this).val());\r\n                });\r\n                return $el[0];\r\n            };\r\n            var cmdFormatter = function (cell, formatterParams, onRendered) {\r\n\r\n                onRendered(function () {\r\n                    let id = cell.getRow().getIndex();\r\n                    $(cell.getElement()).find("#testedit").on("click", cell, that.onTestEdit);\r\n                    //$(cell.getElement()).find("#doAdd").on("click", cell.getRow(), that.onDoAdd);\r\n                    $(cell.getElement()).find("#doAdd").on("click", cell.getRow(), that.onSave);\r\n                    $(cell.getElement()).find("#cancelAdd").on("click", cell.getRow(), that.onCancelAdd);\r\n                    $(cell.getElement()).find("#save").on("click", cell.getRow(), that.onSave);\r\n                    $(cell.getElement()).find("#cancel").on("click", cell.getRow(), that.onCancel);\r\n                    $(cell.getElement()).find("#edit").on("click", cell.getRow(), that.onEdit);\r\n                    $(cell.getElement()).find("#del").on("click", cell.getRow(), that.onDel);\r\n                });\r\n\r\n                let $div = $("<div>");\r\n                let $btnDoAdd = $("<button>", { text: "Add", class: "mr-1" }).attr("id", "doAdd").hide();\r\n                let $btnCancelAdd = $("<button>", { text: "Cancel", class: "mr-1" }).attr("id", "cancelAdd").hide();\r\n                let $btnSave = $("<button>", { text: "Save", class: "mr-1" }).attr("id", "save").hide();\r\n                let $btnCancel = $("<button>", { text: "Cancel", class: "mr-1" }).attr("id", "cancel").hide();\r\n                let $btnEdit = $("<button>", { text: "Edit", class: "mr-1" }).attr("id", "edit");\r\n                let $btnDel = $("<button>", { text: "Del", class: "mr-1" }).attr("id", "del");\r\n                $div.append($btnDoAdd);\r\n                $div.append($btnCancelAdd);\r\n                $div.append($btnSave);\r\n                $div.append($btnCancel);\r\n                $div.append($btnEdit);\r\n                $div.append($btnDel);\r\n                let id = cell.getRow().getIndex();\r\n                //alert(that.cmd);\r\n                if (that.cmd == "") {\r\n                    if (that.sel.id == cell.getRow().getData().id) {\r\n                        $btnSave.show();\r\n                        $btnCancel.show();\r\n                        $btnEdit.hide();\r\n                        $btnDel.hide();\r\n                    } else {\r\n                        if ($.isEmptyObject(that.sel) == true) {\r\n                            $btnSave.hide();\r\n                            $btnCancel.hide();\r\n                            if (id == 0) {\r\n                                $btnEdit.hide();\r\n                                $btnDel.hide();\r\n                                $btnDoAdd.show();\r\n                                $btnCancelAdd.show();\r\n                            } else {\r\n                                //alert(that.cmd);\r\n                                //$btnEdit.show();\r\n                                // $btnEdit.attr(\'disabled\', \'disabled\');//.hide();\r\n                                // $btnDel.attr(\'disabled\', \'disabled\');//.hide();\r\n                            }\r\n                        } else {\r\n                            $btnEdit.attr(\'disabled\', \'disabled\');//.hide();\r\n                            $btnDel.attr(\'disabled\', \'disabled\');//.hide();\r\n                        }\r\n                    }\r\n                } else {//that.cmd!=""\r\n                    if (id == 0) {\r\n                        $btnEdit.hide();\r\n                        $btnDel.hide();\r\n                        $btnDoAdd.show();\r\n                        $btnCancelAdd.show();\r\n                    } else {\r\n                        $btnEdit.attr(\'disabled\', \'disabled\');//.hide();\r\n                        $btnDel.attr(\'disabled\', \'disabled\');//.hide();\r\n                    }\r\n                }\r\n                return $div[0];\r\n            };\r\n            var datePickerFormatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    let $cell = $(cell.getElement()).find("input");\r\n                    let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                    if (editable == false) {\r\n                        $(cell.getElement()).find("input:first").prop("disabled", true);\r\n                        $(cell.getElement()).find("input:first").css("background-color", "#e9ecef");\r\n                    } else {\r\n                        $(cell.getElement()).find("input:first").css("background-color", "white");\r\n                    }\r\n                    $cell.css({\r\n                        "padding": "4px",\r\n                        "width": "100%",\r\n                        "box-sizing": "border-box",\r\n                        "height": "100%",\r\n                        //"border":"1px solid blue",\r\n                        //"background-color":"yellow",\r\n                        //text-align: center;\r\n                        "text-align": "center"\r\n                    })\r\n                    $cell.prop("readonly", true);\r\n                    $cell.datepicker({\r\n                        format: "dd/mm/yyyy",\r\n                        todayBtn: true,\r\n                        autoclose: true,\r\n                        todayHighlight: true,\r\n                    });\r\n                    let value = moment(cell.getValue(), "DD/MM/YYYY").format("DD/MM/YYYY");\r\n                    let value2 = moment(cell.getValue()).format("DD/MM/YYYY");\r\n                    $cell.datepicker("setDate", value2);\r\n                    $cell.datepicker().on("changeDate", function () {\r\n                        let d = $(this).datepicker("getDate");\r\n                        //cell.setValue(moment(d).format("DD/MM/YYYY"));\r\n                        cell.setValue(moment(d));\r\n                    });\r\n                });\r\n                var $el = $("<input class=\'form-control\' />");\r\n                return $el[0];\r\n            };\r\n            var select2Formatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    let $myCell = $(cell.getElement());\r\n                    let $cell = $(cell.getElement()).find("select");\r\n                    $cell.css({\r\n                        "padding": "4px",\r\n                        "width": "100%",\r\n                        "box-sizing": "border-box",\r\n                        "font-family": "",\r\n                    })\r\n                    $cell.select2({\r\n                        placeholder: \'\',\r\n                        width: "100%",\r\n                        allowClear: true,\r\n                    });\r\n                    $cell.focus();\r\n                    $cell.val(cell.getValue()).trigger("change.select2");\r\n                    $(cell.getElement())\r\n                        .find("select")\r\n                        .on("change", function () {\r\n                            cell.setValue($(this).val());\r\n                        });\r\n                    $myCell\r\n                        .find(".select2-container--default")\r\n                        .css("border", "0px solid blue");\r\n                    $myCell\r\n                        .find(".select2-selection--single")\r\n                        .css("border", "0px solid blue");\r\n                });\r\n                var $el = $("<select class=\'tabu\' >");\r\n                //let editable = (that.sel.id == cell.getRow().getData().id);\r\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                if (editable == false) {\r\n                    $el.attr(\'disabled\', \'disabled\');\r\n                } else {\r\n                }\r\n                formatterParams.forEach((el) => {\r\n                    let $option = $("<option>").attr("value", el.id).text(el.text);\r\n                    $el.append($option);\r\n                });\r\n                return $el[0];\r\n            };\r\n            var roweditCheck = function (cell) {\r\n                let row = cell.getRow();\r\n                let id = row.getIndex();\r\n                let $cell = row.getElement();\r\n                if (that.sel.id == cell.getRow().getData().id) {\r\n                    return true;\r\n                } else {\r\n                    if (id == 0) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n            }\r\n            this.tabulator = new Tabulator(this.$refs.table, {\r\n\r\n                pagination: true, //enable pagination\r\n                paginationMode: "remote", //enable remote pagination\r\n                ajaxSorting: true,\r\n                ajaxURL: "/api/Mon/GetPage", //set url for ajax request\r\n                ajaxFiltering: true,\r\n                filterMode: "remote", //send filter data to the server instead of processing locally\r\n                sortMode: "remote",\r\n                ajaxParams: { token: "ABC123" }, //set any standard parameters to pass with the request\r\n                paginationSize: 2, //optional parameter to request a certain number of rows per page\r\n                paginationInitialPage: 1, //optional parameter to set the initial page to load    \r\n                paginationSizeSelector: [5, 10, 20, 30, 50],\r\n                height: $(window).innerHeight() - 400,//\'200px\',//$(window).innerHeight()\r\n                layout: "fitData",//layout:"fitDataFill",//layout:"fitColumns",\r\n                debugInvalidOptions: false,\r\n\r\n                ajaxRequesting: function (url, params) {\r\n                    that.msg = `${url} - ` + JSON.stringify(params);\r\n                },\r\n                ajaxResponse: function (url, params, response) {\r\n                    // alert(JSON.stringify(response));\r\n                    /*\r\n                                        {"last_page":3,"rowCount":5,"data":[{"Id":4,"Name":"Bạc xỉu",\r\n                                        "DonGia":20000,\r\n                                        "Ngay":"2022-04-27T00:00:00"},\r\n                                        {"Id":65,"Name":"Trà Đá",\r\n                                        "DonGia":2000,"Ngay":"2022-04-28T00:00:00"}]}\r\n                    */\r\n                    that.rowCount = response.rowCount;\r\n                    // let data = [];\r\n                    // response.data.forEach(x => {\r\n                    //     data.push({\r\n                    //         id: x.Id,\r\n                    //         Name: x.Name\r\n                    //     })\r\n                    // })\r\n                    let ar = {};\r\n                    ar.last_page = response.last_page;\r\n                    ar.rowCount = response.rowCount;\r\n                    //ar.data = data;\r\n\r\n                    let data2 = [];\r\n                    response.data.forEach(obj => {\r\n                        let x = {};\r\n                        Object.keys(obj).forEach(key => {\r\n                            //console.log(key, obj[key]);\r\n                            let key2 = key;\r\n                            if (key2 == "Id") {\r\n                                key2 = "id"\r\n                            }\r\n                            x[key2] = obj[key];\r\n                        });\r\n                        data2.push(x);\r\n                    })\r\n                    ar.data = data2;\r\n                    return ar;//.data; //pass the data array into Tabulator\r\n                },\r\n\r\n                rowFormatter: function (row) {\r\n                    let chk = that.sel.id == row.getData().id;\r\n                },\r\n                index: "id",\r\n                //autoColumns:true,\r\n                columns: [\r\n                    {\r\n                        title: "STT",\r\n                        formatter: "rownum",\r\n                        headerHozAlign: "center",\r\n                        hozAlign: "center",\r\n                        vertAlign: "middle",//"bottom",\r\n                    },\r\n                    {\r\n                        title: "Cmd",\r\n                        headerHozAlign: "center",\r\n                        hozAlign: "center",\r\n                        vertAlign: "middle",//"bottom",\r\n                        headerSort: false,\r\n                        width: 100,\r\n                        formatter: cmdFormatter,\r\n                    },\r\n                    {\r\n                        title: "Id",\r\n                        field: "id",\r\n                        width: 50,\r\n                        vertAlign: "middle",//"bottom",\r\n                        headerFilter: true,\r\n                        hozAlign: "center",\r\n                    },\r\n                    {\r\n                        title: "Name",\r\n                        field: "Name",\r\n                        width: 120,\r\n                        vertAlign: "middle",//"bottom",\r\n                        headerFilter: true,\r\n                        editor: "input",\r\n                        validator: ["required"], //"required"  \r\n                        editable: roweditCheck,//editCheck,\r\n                    },\r\n                    {\r\n                        title: "DonGia",\r\n                        field: "DonGia",\r\n                        width: 80,\r\n                        vertAlign: "middle",//"bottom",\r\n                        headerFilter: true,\r\n                        hozAlign: "right",\r\n                        editor: "input",\r\n                        editable: roweditCheck,//editCheck,\r\n                        formatter: "money",\r\n                        formatterParams: {\r\n                            decimal: ",",\r\n                            thousand: ".",\r\n                            symbol: "", //"£",\r\n                            symbolAfter: "p",\r\n                            precision: false,\r\n                        },\r\n                    },\r\n                    {\r\n                        title: "Ngay",\r\n                        field: "Ngay",\r\n                        width: 100,\r\n                        hozAlign: "center",\r\n                        headerFilter: true,\r\n                        formatter: datePickerFormatter,\r\n                        editable: roweditCheck,\r\n                    },\r\n\r\n                ], //define table columns\r\n            });\r\n            this.tabulator.on("dataLoaded", function (data) {\r\n                that.onLoad();\r\n            });\r\n            this.tabulator.on("pageLoaded", function (pageno) {\r\n            });\r\n            this.tabulator.on("dataChanged", function (data) {\r\n            });\r\n            this.tabulator.on("rowClick", function (e, row) {\r\n            });\r\n            this.tabulator.on("rowSelectionChanged", function (data, rows) {\r\n            });\r\n            this.tabulator.on("rowSelected", function (row) {\r\n                let index = row.getIndex();\r\n                //that.msg = index;\r\n                //console.log(\'rowSelected\');\r\n            });\r\n            this.tabulator.on("cellEditing", function (cell) {\r\n                let row = cell.getRow();\r\n                let data = row.getData();\r\n                let index = row.getIndex();\r\n            });\r\n            this.tabulator.on("cellEditCancelled", function (cell) {\r\n            });\r\n            this.tabulator.on("cellEdited", function (cell) {\r\n                if (cell.getField() != "solg") {\r\n                    return;\r\n                }\r\n                let row = cell.getRow();\r\n                let data = row.getData();\r\n                let solg = row.getCell("solg").getValue();\r\n                let tien = solg * 1000;\r\n                let id = row.getIndex();\r\n                row.getCell("tien").setValue(tien);\r\n            });\r\n            this.tabulator.on("validationFailed", function (cell, value, validators) {\r\n                let field = cell.getField();\r\n            });\r\n        },\r\n        ReLoadData() {\r\n            this.tabulatorClear();\r\n            let r = JSON.parse(JSON.stringify(this.rec));\r\n            r.id = this.count++;\r\n            this.tableData.push(r);\r\n            this.count++;\r\n            this.setPage(1);\r\n        },\r\n        onLoad() {\r\n            // for (var i = 0; i < 3; i++) {\r\n            //     let r = JSON.parse(JSON.stringify(this.rec));\r\n            //     r.id = this.count;\r\n            //     r.tien = r.solg * 1000;\r\n            //     this.tableData.push(r);\r\n            //     this.count++;\r\n            // }\r\n            // this.setPage(1);\r\n        },\r\n        ChangeAct() {\r\n            let act = (this.r.act == \'true\') ? true : false;\r\n            this.r.act = act;\r\n        },\r\n        rowValidate(row) {\r\n            let kq = true;\r\n            var cells = row.getCells();\r\n            for (var i = 0; i < cells.length; i++) {\r\n                if (cells[i].isValid() != true) {\r\n                    kq = false;\r\n                }\r\n            }\r\n            return kq;\r\n        },\r\n        onSave(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            if (\r\n                this.rowValidate(e.data) == false\r\n                //|| row.getData().tpl == ""\r\n                //|| row.getData().monid == null\r\n            ) {\r\n                this.toast("không hợp lệ!!!")\r\n                return;\r\n            }\r\n            let r = JSON.parse(JSON.stringify(row.getData()));\r\n            r.Ngay = moment(r.Ngay).format("YYYY-MM-DD HH:mm:ss");\r\n            this.Save(r).then(res => {\r\n                if(r.id==0){\r\n                    let new_lastpage = this.getLastPage(this.rowCount + 1);\r\n                    this.onCancelAdd(e);\r\n                    this.setPage(new_lastpage);\r\n                }else{\r\n                    this.tabulator.deselectRow(this.sel.id);\r\n                    this.sel = {};\r\n                    this.tabulator.redraw(true);\r\n                }\r\n            })\r\n\r\n            /*\r\n            if (r.id == 0) {\r\n                let new_lastpage = this.getLastPage(this.rowCount + 1);\r\n                this.Save(r).then(res => {\r\n                    //alert(JSON.stringify(res));\r\n\r\n                    this.onCancelAdd(e);\r\n                    this.setPage(new_lastpage);\r\n                })\r\n            } else {\r\n                this.Save(r).then(res => {\r\n                    this.tabulator.deselectRow(this.sel.id);\r\n                    this.sel = {};\r\n                    this.tabulator.redraw(true);\r\n                })\r\n            }\r\n            */\r\n\r\n        },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast("Không hợp lệ");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.r));\r\n                if (r.id == 0) {\r\n                    r.id = this.count;\r\n                    this.tabulatorAdd(r);\r\n                    this.count++;\r\n                    this.setPage(1);\r\n                } else {\r\n                    this.tabulatorUpdate(r);\r\n                }\r\n                this.hideModal();\r\n            });\r\n        },\r\n        onAdd() {\r\n            this.cmd = "add";\r\n            let r = JSON.parse(JSON.stringify(this.rec));\r\n            this.tabulator.addRow(r, true, 0);\r\n            this.tabulator.selectRow(0);\r\n            $(".tabulator-footer").hide();\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onCancelAdd(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n\r\n            this.cmd = "";\r\n            row.delete();\r\n            $(".tabulator-footer").show();\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onCancel(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            let $row = $(row.getElement());\r\n            let r = JSON.parse(JSON.stringify(this.sel));\r\n\r\n            this.tabulatorUpdate(r);\r\n            this.sel = {};\r\n            this.tabulator.deselectRow(this.sel.id);\r\n            this.tabulator.redraw(true);\r\n        },\r\n        onEdit(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            this.sel = JSON.parse(JSON.stringify(row.getData()));\r\n            let $row = $(row.getElement());\r\n            this.tabulator.selectRow(id);\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onDel(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            let id = row.getIndex();\r\n            let new_lastpage = this.getLastPage(this.rowCount - 1);\r\n            this.Del(id).then(res => {\r\n                if (res.data.kq == "ok") {//del ok\r\n                    row.delete();\r\n                    this.setPage(new_lastpage);\r\n                }\r\n                this.toast(res.data.msg);\r\n            })\r\n        },\r\n        getPageMax() {\r\n            return this.tabulator.getPageMax();\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        getPageSize() {\r\n            return this.tabulator.getPageSize();\r\n        },\r\n        getPage() {\r\n            return this.tabulator.getPage();\r\n        },\r\n        setPage(_page) {\r\n            this.tabulator.setPage(_page);\r\n        },\r\n        getData() {\r\n            return this.tabulator.getData();\r\n        },\r\n        tabulatorLoadData(ar) {\r\n            ar.forEach(x => {\r\n                this.tableData.push(x);\r\n            })\r\n        },\r\n        tabulatorClear() {\r\n            let i = 0;\r\n            while (i < this.tableData.length) {\r\n                this.tableData.splice(i, 1);\r\n            }\r\n        },\r\n        tabulatorAdd(r) {\r\n            this.tableData.unshift(r);\r\n        },\r\n        tabulatorDel(id) {\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            this.tableData.splice(index, 1);\r\n        },\r\n        tabulatorUpdate(r) {\r\n            let index = this.tableData.findIndex(x => x.id == r.id);\r\n            this.tableData.splice(index, 1, r);\r\n        },\r\n        tabulatorGetRow(id) {\r\n            //let index=this.tabulator.getData().findIndex(x=>x.id==id);\r\n            //let r=this.tabulator.getData()[index];\r\n            //return r;\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        showModal() {\r\n            this.$refs[\'my-modal2\'].show()\r\n        },\r\n        hideModal() {\r\n            this.$refs[\'my-modal2\'].hide()\r\n        },\r\n        async Save(r) {\r\n            return await axios.post(`/api/Mon/Save`, r).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n        async Del(id) {\r\n            return await axios\r\n                .get(`/api/Mon/Delete?id=${id}`)\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await axios.get(`/api/Mon/GetById?id=${id}`).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n\r\n    }\r\n}\r\n<\/script>\r\n<style lang="scss">\r\n.select2-container--default .select2-selection--single .select2-selection__arrow {\r\n    height: 15px;\r\n    position: absolute;\r\n    top: 4px;\r\n    right: 1px;\r\n    width: 20px;\r\n}\r\n\r\n.select2-container--default .select2-selection--single .select2-selection__rendered {\r\n    color: #444;\r\n    line-height: 24px;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: block;\r\n    height: 24px;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n\r\n.xyz {\r\n    border: 1px solid red;\r\n}\r\n\r\n.danger,\r\n.danger .dropdown-toggle,\r\n.danger .selected-tag {\r\n    background-color: aqua;\r\n    border-radius: 4px;\r\n}\r\n\r\n.ko-hop-le {\r\n    border-radius: 4px;\r\n    background-color: aqua;\r\n}\r\n\r\n$textSize: 8.5px; //14px !default; //table text size\r\n@import "~tabulator-tables/src/scss/tabulator.scss";\r\n\r\n.tabulator-col-title {\r\n    text-align: center;\r\n}\r\n\r\n.tabulator .tabulator-footer .tabulator-page.active {\r\n    background-color: greenyellow !important;\r\n    color: blue !important;\r\n}\r\n\r\n.tabulator-row .tabulator-cell {\r\n    padding: 3px 4px;\r\n}\r\n\r\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\r\n    width: 24px;\r\n    height: 24px;\r\n    font-size: 10px;\r\n    line-height: 1;\r\n    margin: 0px auto;\r\n    padding: 6px 0;\r\n}\r\n\r\n.custom-control.custom-checkbox {\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    min-height: 0.9rem;\r\n    padding-left: 1.5rem;\r\n    padding-top: 0.3rem;\r\n}\r\n\r\n.col-4 input {\r\n    margin-bottom: 1px;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 0.3rem;\r\n}\r\n</style>\r\n  \r\n  '},17529:function(t,e,r){"use strict";r(41539);var n={cong:function(t,e){return t+e},nhan:function(t,e){return t*e},list:function(){return[{id:1,ten:"thuc 101"},{id:2,ten:"thuc 102"},{id:3,ten:"thuc 103"}]},loadCss:function(t){return new Promise((function(e,r){var n=document.createElement("link");n.type="text/css",n.rel="stylesheet",n.onload=e,n.href=t;var a=document.querySelector("script");a.parentNode.insertBefore(n,a)}))},loadScript:function(t,e){return new Promise((function(r,n){var a=document.createElement("script");a.onload=r,a.onerror=n,a.src=e,a.type="text/javascript",a.setAttribute("id",t),document.getElementsByTagName("head")[0].appendChild(a)}))},loadMyScript:function(t){var e=this;document.getElementById("myScript")?t.onReady():this.loadScript("myScript","js/jquery.min.js").then((function(){e.loadScript("","js/bootstrap.js").then((function(){e.loadScript("","js/select2.min.js").then((function(){e.loadScript("","js/bootstrap-datepicker.js").then((function(){e.loadCss("css/select2.min.css").then((function(){e.loadCss("css/bootstrap-datepicker.css").then((function(){t.onReady()}))}))}))}))}))}))}};e["Z"]=n}}]);
//# sourceMappingURL=4754-legacy.75796d32.js.map