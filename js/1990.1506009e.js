"use strict";(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[1990],{71990:function(t,r,e){e.r(r),e.d(r,{default:function(){return g}});var a=function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("div",{staticClass:"tpl"},[a("raw-loader",{attrs:{mytxt:e(99613).Z}}),a("h1",[t._v("This is Tabulator2")]),a("div",[a("div",{staticClass:"mb-1"},[a("button",{staticClass:"mr-1",on:{click:t.onTest}},[t._v("Test")])]),t._v(" "+t._s(t.msg)+" "),a("div",{ref:"table"})])],1)},n=[],o=e(60911),l=e(19755),i=e.n(l),d={name:"Tpl",components:{},data(){return{msg:"thuc 101",tabulator:null,msg:"",tableData:[{id:1,name:"Oli Bob",progress:12,gender:"male",rating:1,col:"red",dob:"19/02/1984",car:1},{id:2,name:"Mary May",progress:1,gender:"female",rating:2,col:"blue",dob:"14/05/1982",car:!0},{id:3,name:"Christine Lobowski",progress:42,gender:"female",rating:0,col:"green",dob:"22/05/1982",car:"true"},{id:4,name:"Brendon Philips",progress:100,gender:"male",rating:1,col:"orange",dob:"01/08/1980"},{id:5,name:"Margret Marmajuke",progress:16,gender:"female",rating:5,col:"yellow",dob:"31/01/1999"},{id:6,name:"Frank Harbours",progress:38,gender:"male",rating:4,col:"red",dob:"12/05/1966",car:1}]}},mounted(){let t=this;this.tabulator=new o.Ae(this.$refs.table,{reactiveData:!0,data:this.tableData,layout:"fitColumns",responsiveLayout:"hide",tooltips:!0,addRowPos:"top",history:!0,pagination:"local",paginationSize:3,paginationCounter:"rows",paginationInitialPage:1,paginationSizeSelector:[5,10,20,30,50],movableColumns:!0,initialSort:[{column:"name",dir:"asc"}],height:i()(window).innerHeight()-400,layout:"fitDataFill",index:"id",pageLoaded:function(t){alert(t)},columns:[{title:"STT",formatter:"rownum",headerHozAlign:"center",hozAlign:"center"},{title:"Cmd",headerHozAlign:"center",hozAlign:"center",headerSort:!1,width:110,formatter:function(r,e,a){a((function(){i()(r.getElement()).find("#edit").on("click",r.getRow(),t.onEdit),i()(r.getElement()).find("#del").on("click",r.getRow(),t.onDel)}));let n=i()("<div>");return n.append(i()("<button>",{text:"Edit",class:"mr-1"}).attr("id","edit")),n.append(i()("<button>",{text:"Del",class:"mr-1"}).attr("id","del")),n[0]}},{title:"Name",field:"name",editor:"input"},{title:"Task Progress",field:"progress",hozAlign:"left",formatter:"progress",editor:!0},{title:"Gender",field:"gender",width:95,editor:"select",editorParams:{values:["male","female"]}},{title:"Rating",field:"rating",formatter:"star",hozAlign:"center",width:100,editor:!0},{title:"Color",field:"col",width:130,editor:"input"},{title:"Date Of Birth",field:"dob",width:130,sorter:"date",hozAlign:"center"},{title:"Driver",field:"car",width:90,hozAlign:"center",formatter:"tickCross",sorter:"boolean",editor:!0}]}),this.tabulator.on("dataLoaded",(function(r){let e=i()(t.$refs.table),a=i()("<span id='total' class='mr-1'>").text("[total]");0==e.find(".tabulator-footer-contents").find("span#total").length?e.find(".tabulator-footer-contents span.tabulator-paginator").prepend(a):e.find(".tabulator-footer-contents").find("span#total").text(`[${(new Date).getTime()}]`)})),this.tabulator.on("pageLoaded",(function(r){let e=i()(t.$refs.table);e.find(".tabulator-footer-contents").find("span#total").text(`[${(new Date).getTime()}]`)}))},watch:{tableData:{handler:function(t){this.tabulator.replaceData(t)},deep:!0}},created(){},methods:{onDataLoaded(t){let r=[];t.forEach(((t,e)=>{r.push({x:t.id})}));let e=this.tabulator.getPage();this.msg={ar:r,curPage:e}},onTest(){let t=JSON.parse(JSON.stringify(this.tableData));this.tableData=[t[0],t[1]]},onDel(t){let r=t.data,e=r.getIndex(),a=r.getData();this.msg={cmd:"del",id:e,data:a}},onEdit(t){let r=t.data,e=r.getIndex(),a=r.getData();this.msg={cmd:"edit",id:e,data:a}}}},s=d,u=e(1001),c=(0,u.Z)(s,a,n,!1,null,"0ba5c77d",null),g=c.exports},99613:function(t,r){r["Z"]='<template>\r\n  <div class="tpl">\r\n    <raw-loader :mytxt=" require(\'!raw-loader!./TabulaVueJson.vue\').default "></raw-loader>\r\n    <h1>This is Tabulator2</h1>\r\n    <div>\r\n      <div class="mb-1">\r\n        <button class="mr-1" @click="onTest" >Test</button>\r\n      </div>\r\n      {{msg}}\r\n      <div ref="table"></div>    \r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {TabulatorFull as Tabulator} from \'tabulator-tables\';\r\nimport $ from "jquery";\r\nexport default {\r\n  name: \'Tpl\',\r\n  components: {\r\n  },\r\n  data(){\r\n    return {\r\n      msg:"thuc 101",\r\n      tabulator: null, //variable to hold your table\r\n      msg:"",\r\n      tableData: [\r\n        {id:1, name:"Oli Bob", progress:12, gender:"male", rating:1, col:"red", dob:"19/02/1984", car:1},\r\n        {id:2, name:"Mary May", progress:1, gender:"female", rating:2, col:"blue", dob:"14/05/1982", car:true},\r\n        {id:3, name:"Christine Lobowski", progress:42, gender:"female", rating:0, col:"green", dob:"22/05/1982", car:"true"},\r\n        {id:4, name:"Brendon Philips", progress:100, gender:"male", rating:1, col:"orange", dob:"01/08/1980"},\r\n        {id:5, name:"Margret Marmajuke", progress:16, gender:"female", rating:5, col:"yellow", dob:"31/01/1999"},\r\n        {id:6, name:"Frank Harbours", progress:38, gender:"male", rating:4, col:"red", dob:"12/05/1966", car:1},\r\n      ], //data for table to display\r\n    }\r\n  },\r\n  mounted(){\r\n      let that=this;\r\n      this.tabulator = new Tabulator(this.$refs.table, {\r\n        // data: this.tableData, //link data to table\r\n        reactiveData:true, //enable data reactivity\r\n        // columns: [], //define table columns\r\n        data:this.tableData,           //load row data from array\r\n        layout:"fitColumns",      //fit columns to width of table\r\n        responsiveLayout:"hide",  //hide columns that dont fit on the table\r\n        tooltips:true,            //show tool tips on cells\r\n        addRowPos:"top",          //when adding a new row, add it to the top of the table\r\n        history:true,             //allow undo and redo actions on the table\r\n        pagination:"local",       //paginate the data\r\n        paginationSize:3,         //allow 7 rows per page of data\r\n        paginationCounter:"rows", //display count of paginated rows in footer\r\n\r\n        paginationInitialPage:1, //optional parameter to set the initial page to load    \r\n        paginationSizeSelector: [5, 10, 20, 30, 50],\r\n\r\n        movableColumns:true,      //allow column order to be changed\r\n        initialSort:[             //set the initial sort order of the data\r\n            {column:"name", dir:"asc"},\r\n        ],\r\n        //height:\'200px\',\r\n        height:$(window).innerHeight()-400,//\'200px\',//$(window).innerHeight()\r\n\r\n        //fitColumns:true,    \r\n        //layout:"fitData",  \r\n        layout:"fitDataFill",\r\n        //layout:"fitColumns",\r\n        index:"id",\r\n        pageLoaded: function (pageno) {\r\n          //$(that.$refs.table).find(".active").css({ "background-color": \'yellow\', "color": "red" });\r\n          alert(pageno);\r\n        },\r\n        columns:[                 //define the table columns\r\n            {\r\n              title: "STT",\r\n              formatter: "rownum",\r\n              headerHozAlign: "center",\r\n              hozAlign: "center",\r\n            },\r\n            {\r\n                title: "Cmd",\r\n                headerHozAlign: "center",\r\n                hozAlign: "center",\r\n                headerSort: false,\r\n                width: 110,\r\n                formatter: function (cell, formatterParams, onRendered) {\r\n                  onRendered(function () {\r\n                    $(cell.getElement())\r\n                      .find("#edit")\r\n                      .on("click", cell.getRow(), that.onEdit);\r\n                    $(cell.getElement())\r\n                      .find("#del")\r\n                      .on("click", cell.getRow(), that.onDel);\r\n                  });\r\n                  let $div = $("<div>");\r\n                  $div.append(\r\n                    $("<button>", { text: "Edit", class: "mr-1" }).attr("id","edit")\r\n                  );\r\n                  $div.append(\r\n                    $("<button>", { text: "Del", class: "mr-1" }).attr("id", "del")\r\n                  );\r\n                  return $div[0];\r\n                },\r\n            },        \r\n            {title:"Name", field:"name", editor:"input"},\r\n            {title:"Task Progress", field:"progress", hozAlign:"left", formatter:"progress", editor:true},\r\n            {title:"Gender", field:"gender", width:95, editor:"select", editorParams:{values:["male", "female"]}},\r\n            {title:"Rating", field:"rating", formatter:"star", hozAlign:"center", width:100, editor:true},\r\n            {title:"Color", field:"col", width:130, editor:"input"},\r\n            {title:"Date Of Birth", field:"dob", width:130, sorter:"date", hozAlign:"center"},\r\n            {title:"Driver", field:"car", width:90,  hozAlign:"center", formatter:"tickCross", sorter:"boolean", editor:true},\r\n        ],\r\n      });\r\n      this.tabulator.on("dataLoaded", function(data){\r\n        // alert(\'dataLoaded\');\r\n        // that.onDataLoaded(data);\r\n\r\n        let $tabu=$(that.$refs.table);\r\n        let $span = $("<span id=\'total\' class=\'mr-1\'>").text("[total]");\r\n        if($tabu.find(".tabulator-footer-contents").find("span#total").length==0){\r\n          $tabu.find(".tabulator-footer-contents span.tabulator-paginator").prepend($span);\r\n        }else{\r\n          $tabu.find(".tabulator-footer-contents").find("span#total").text(`[${new Date().getTime()}]`);\r\n        }\r\n\r\n\r\n\r\n      });\r\n      this.tabulator.on("pageLoaded", function(pageno){\r\n        // alert(\'pageLoaded\');\r\n        // that.msg={evt: \'pageLoaded\',pageno:pageno};\r\n        let $tabu=$(that.$refs.table);\r\n        $tabu.find(".tabulator-footer-contents").find("span#total").text(`[${new Date().getTime()}]`);\r\n      });      \r\n  },\r\n  watch: {\r\n    tableData: {\r\n      handler: function (newData) {\r\n        this.tabulator.replaceData(newData)\r\n      },\r\n      deep: true\r\n    }\r\n  },  \r\n  created(){\r\n  },\r\n  methods:{\r\n    onDataLoaded(data){\r\n      let ar=[];\r\n      data.forEach((x,i)=>{\r\n        ar.push({x:x.id});\r\n      })\r\n      let curPage= this.tabulator.getPage();\r\n      this.msg={ar:ar,curPage:curPage};\r\n    },\r\n    onTest(){\r\n      let ar=JSON.parse(JSON.stringify(this.tableData));\r\n      this.tableData=[ar[0],ar[1]];\r\n    },\r\n    onDel(e){\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      let data=row.getData();\r\n      this.msg={cmd:"del",id:id,data:data}\r\n    },\r\n    onEdit(e){\r\n      let row = e.data;\r\n      let id = row.getIndex();\r\n      let data=row.getData();\r\n      this.msg={cmd:"edit",id:id,data:data}\r\n    },    \r\n  }\r\n}\r\n<\/script>\r\n<style scoped>\r\n  @import \'~tabulator-tables/dist/css/tabulator.css\';  \r\n  .tabulator {\r\n    font-size: 10px;\r\n    border: none;\r\n  }\r\n\r\n  .tabulator .tabulator-header {\r\n    font-weight: normal;\r\n    border-bottom: 1px solid;\r\n    border-bottom-color: rgba(0, 0, 0, 0.12);\r\n    color: rgba(0, 0, 0, 0.54);\r\n  }\r\n\r\n  .tabulator .tabulator-header .tabulator-col {\r\n    height: 48px;\r\n    background-color: #ffffff;\r\n    border: none;\r\n    padding: 0 7px;\r\n  }\r\n\r\n  .tabulator-row {\r\n    border-bottom: 1px solid;\r\n    border-bottom-color: rgba(0, 0, 0, 0.12);\r\n    min-height: 48px;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .tabulator-row .tabulator-cell {\r\n    padding: 16px 7px;\r\n    border-right: none;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .tabulator-row .tabulator-cell:first-of-type,\r\n  .tabulator .tabulator-header .tabulator-col:first-of-type {\r\n    padding-left: 24px;\r\n  }\r\n\r\n  .tabulator-row.tabulator-row-even {\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  .tabulator .tabulator-footer .tabulator-page .active {\r\n    background-color: greenyellow !important;\r\n    color: blue !important;\r\n  }\r\n\r\n\r\n\r\n\r\n</style>\r\n\r\n'}}]);
//# sourceMappingURL=1990.1506009e.js.map