(self["webpackChunkvue_start_1"]=self["webpackChunkvue_start_1"]||[]).push([[2468],{42468:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return f}});var r=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",[r("raw-loader",{attrs:{mytxt:n(81555).Z}}),r("h1",[e._v("This is KonvaVue")]),r("b-row",[r("b-col",{staticClass:"border-right",attrs:{sm:"3"}},[r("div",{staticClass:"mb-1"}),r("div",{attrs:{id:"stage-parent"}},[r("div",{staticClass:"border",attrs:{id:"container"}},[r("v-stage",{ref:"stage",attrs:{config:e.configKonva},on:{click:e.onStageClick,mousemove:e.onStageMouseMove,mouseenter:e.onStageMouseenter,mouseleave:e.onStageMouseleave}},[r("v-layer",{ref:"layer"},[r("v-circle",{ref:"circle",attrs:{config:e.configCircle}}),r("v-rect",{ref:"rect",attrs:{config:{x:100,y:100,width:100,height:100,fill:"yellow",stroke:"blue",strokeWidth:5,draggable:!0,visible:!1}}}),r("v-line",{ref:"line",attrs:{config:{points:[100,100,400,200],stroke:"gray",strokeWidth:5,lineCap:"round",lineJoin:"round",draggable:!0,visible:!1}}}),r("v-shape",{ref:"nice",attrs:{config:{sceneFunc:function(e,t){var n=-20,r=-50;e.beginPath(),e.moveTo(n+20,r+50),e.lineTo(n+220,r+80),e.quadraticCurveTo(n+150,r+100,n+260,r+170),e.closePath(),e.fillStrokeShape(t)},fill:"#00D2FF",stroke:"black",strokeWidth:4,visible:!0,draggable:!0,visible:!1}}}),r("v-shape",{ref:"ball",attrs:{config:{x:150,y:150,r:90,text:"1",fontSize:50,fill:"aqua",stroke:"black",textcolor:"red",strokeWidth:1,draggable:!0,sel:!1,visible:!1,sceneFunc:function(e,t){var n=t.getAttr("fontSize");e.beginPath(),e.arc(0,0,t.getAttr("r"),0,2*Math.PI),e.fillStrokeShape(t);var r=t.getAttr("textcolor");e.fillStyle=r,e.textBaseline="middle",e.textAlign="center",e.font=n+"px verdana",e.fillText(""+t.getAttr("text"),0,0)}}}}),r("v-shape",{ref:"board",attrs:{config:{x:50,y:50,width:300,height:100,text:"Thá»©c 101",fontSize:60,fill:"yellow",stroke:"red",strokeWidth:1,draggable:!0,visible:!1,sceneFunc:function(e,t){var n=t.getAttr("fontSize");e.beginPath(),e.rect(0,0,t.getAttr("width"),t.getAttr("height")),e.fillStrokeShape(t),e.fillStyle="red",e.textBaseline="middle",e.textAlign="center",e.font=n+"px Times New Roman",e.fillText(""+t.getAttr("text"),t.getAttr("width")/2,t.getAttr("height")/2)}}}})],1)],1)],1)])]),r("b-col",{attrs:{sm:"9"}},[e._v(" "+e._s(e.msg)),r("br")])],1)],1)},i=[],a=(n(68309),n(41539),n(54747),n(69826),1500),o=1e3,s=null,l=null,c={name:"Tpl",components:{},computed:{test:function(){return"hello"}},data:function(){return{msg:"hello",configKonva:{width:a,height:o},configCircle:{x:a/2,y:o/2,radius:90,fill:"yellow",stroke:"black",strokeWidth:5,draggable:!0,visible:!0},count:0,p:{},arPoint:[],Sel:[],arSel:[],unLink:!1,listData:[],hover:-1}},mounted:function(){this.$nextTick((function(){l=this.$refs.layer.getNode(),s=this.$refs.stage.getNode(),window.addEventListener("resize",this.fitStageIntoParentContainer),this.fitStageIntoParentContainer();var e=this.createAnimate();e.start()}))},created:function(){},methods:{createRect:function(e,t){var n=this.$refs.rect.getNode().clone();return n.visible(!0),n.x(e-n.width()/2),n.y(t-n.height()/2),n.name("myrect"),n},createAnimate:function(){var e=this.$refs.circle.getNode(),t=this,n=new Konva.Animation((function(n){t.getListRect().forEach((function(n,r){n.x(),n.width(),n.y(),n.height();t.rotateAroundPoint(n,2,{x:e.x(),y:e.y()});var i=t.myGetClientRect(n),a={x:i.x+i.width/2,y:i.y+i.height/2};t.rotateAroundPoint(n,5,a)}))}),l);return n},onStageClick:function(e){var t=this.myGetMouse(),n=this.createRect(t.x,t.y);l.add(n)},onStageMouseMove:function(e){},onStageMouseenter:function(e){},onStageMouseleave:function(e){},getListRect:function(){return l.find(".myrect")},getListLine:function(){return l.find(".myline")},getListBall:function(){return l.find(".myball")},getBallById:function(e){return l.find("#".concat(e))[0]},rotateAroundPoint:function(e,t,n){var r=t*Math.PI/180,i=n.x+(e.x()-n.x)*Math.cos(r)-(e.y()-n.y)*Math.sin(r),a=n.y+(e.x()-n.x)*Math.sin(r)+(e.y()-n.y)*Math.cos(r);e.position({x:i,y:a}),e.rotation(e.rotation()+t)},myGetClientRect:function(e){var t=s.scale().x,n=e.getClientRect();return n.x=n.x/t,n.y=n.y/t,n.width=n.width/t,n.height=n.height/t,n},myGetMouse:function(){var e=s.scale().x,t=s.getPointerPosition(),n=t.x,r=t.y,i=Math.round(n/e),a=Math.round(r/e);return{x:i,y:a}},fitStageIntoParentContainer:function(){var e=document.querySelector("#stage-parent"),t=e.offsetWidth,n=t/a;s.width(a*n),s.height(o*n),s.scale({x:n,y:n}),this.configKonva.width=a*n,this.configKonva.height=o*n}}},h=c,g=n(1001),d=(0,g.Z)(h,r,i,!1,null,"79757733",null),f=d.exports},18533:function(e,t,n){"use strict";var r=n(42092).forEach,i=n(9341),a=i("forEach");e.exports=a?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},9341:function(e,t,n){"use strict";var r=n(47293);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){return 1},1)}))}},69826:function(e,t,n){"use strict";var r=n(82109),i=n(42092).find,a=n(51223),o="find",s=!0;o in[]&&Array(1)[o]((function(){s=!1})),r({target:"Array",proto:!0,forced:s},{find:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),a(o)},54747:function(e,t,n){var r=n(17854),i=n(48324),a=n(98509),o=n(18533),s=n(68880),l=function(e){if(e&&e.forEach!==o)try{s(e,"forEach",o)}catch(t){e.forEach=o}};for(var c in i)i[c]&&l(r[c]&&r[c].prototype);l(a)},81555:function(e,t){"use strict";t["Z"]='<template>\r\n  <div>\r\n    <raw-loader :mytxt=" require(\'!raw-loader!./KonvaVueRotate.vue\').default "></raw-loader> \r\n    <h1>This is KonvaVue</h1>\r\n    <b-row>\r\n      <b-col sm="3" class="border-right">\r\n          <div class="mb-1">\r\n          </div>\r\n          <div id="stage-parent">\r\n            <div id="container" class="border">\r\n                <v-stage ref="stage"\r\n                    @click="onStageClick"\r\n                    @mousemove="onStageMouseMove" \r\n                    @mouseenter="onStageMouseenter"\r\n                    @mouseleave="onStageMouseleave"\r\n                    :config="configKonva" >\r\n                    <v-layer ref="layer">\r\n                        <v-circle ref="circle" :config="configCircle"></v-circle>\r\n                        <v-rect ref="rect" \r\n                            :config="{\r\n                                x: 100,\r\n                                y: 100,\r\n                                width: 100,\r\n                                height: 100,\r\n                                fill: \'yellow\',\r\n                                stroke:\'blue\',\r\n                                strokeWidth:5,\r\n                                //shadowBlur: 10,\r\n                                draggable:true,\r\n                                visible:false\r\n                            }"\r\n                        />\r\n                        <v-line ref="line" :config="{\r\n                          points: [100,100,400,200],\r\n                          stroke: \'gray\',\r\n                          strokeWidth: 5,\r\n                          lineCap: \'round\',\r\n                          lineJoin: \'round\',\r\n                          draggable:true,\r\n                          visible: false\r\n                        }"></v-line>\r\n                        <v-shape ref="nice"\r\n                          :config="{\r\n                            sceneFunc: function(context, shape) {\r\n                              let x=-20;\r\n                              let y=-50;\r\n                              context.beginPath();\r\n                              context.moveTo(x+20, y+50);\r\n                              context.lineTo(x+220, y+80);\r\n                              context.quadraticCurveTo(x+150, y+100, x+260, y+170);\r\n                              context.closePath();\r\n                              context.fillStrokeShape(shape);\r\n                            },\r\n                            fill: \'#00D2FF\',\r\n                            stroke: \'black\',\r\n                            strokeWidth: 4,\r\n                            visible: true,\r\n                            draggable:true,\r\n                            visible:false,\r\n                          }"\r\n                        />\r\n                        <v-shape ref="ball"\r\n                          :config="{\r\n                            x:150,\r\n                            y:150,\r\n                            r:90,\r\n                            text:\'1\',\r\n                            fontSize:50,\r\n                            fill: \'aqua\',\r\n                            stroke: \'black\',\r\n                            textcolor:\'red\',\r\n                            strokeWidth: 1,\r\n                            draggable:true,  \r\n                            sel:false,      \r\n                            visible:false,\r\n                            sceneFunc: function (context, shape) {\r\n                              let fontSize=shape.getAttr(\'fontSize\');//40;\r\n                              context.beginPath();\r\n                              context.arc(0, 0, shape.getAttr(\'r\'), 0, 2 * Math.PI);\r\n                              context.fillStrokeShape(shape);\r\n                              let textcolor=shape.getAttr(\'textcolor\');\r\n                              context.fillStyle=textcolor;//\'white\';\r\n                              context.textBaseline = \'middle\'; \r\n                              context.textAlign = \'center\';\r\n                              context.font=`${fontSize}px verdana`;//verdana//Times New Roman\r\n                              context.fillText(`${shape.getAttr(\'text\')}`, 0,0);\r\n\r\n                            }\r\n                          }"\r\n                        />\r\n                        <v-shape ref="board" :config="{\r\n                          x:50,\r\n                          y:50,\r\n                          width:300,\r\n                          height:100,\r\n                          text:\'Thá»©c 101\',\r\n                          fontSize:60,\r\n                          fill: \'yellow\',\r\n                          stroke: \'red\',\r\n                          strokeWidth: 1,\r\n                          draggable:true, \r\n                          visible:false,       \r\n                          sceneFunc: function (context, shape) {\r\n                            let fontSize=shape.getAttr(\'fontSize\');\r\n                            context.beginPath();\r\n                            context.rect(0, 0, shape.getAttr(\'width\'), shape.getAttr(\'height\'));\r\n                            context.fillStrokeShape(shape);\r\n                            context.fillStyle=\'red\';\r\n                            context.textBaseline = \'middle\'; \r\n                            context.textAlign = \'center\';\r\n                            context.font=`${fontSize}px Times New Roman`;\r\n                            context.fillText(`${shape.getAttr(\'text\')}`, shape.getAttr(\'width\')/2,shape.getAttr(\'height\')/2);\r\n                          }\r\n                        }">\r\n                        </v-shape>\r\n                    </v-layer>\r\n                </v-stage>\r\n            </div>\r\n          </div>\r\n\r\n      </b-col>\r\n      <b-col sm="9">\r\n        {{msg}}<br>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n<script>\r\nvar sceneWidth = 1500;\r\nvar sceneHeight = 1000;\r\nvar stage=null;\r\nvar layer=null;\r\nexport default {\r\n  name: \'Tpl\',\r\n  components: {\r\n  },\r\n  computed: {\r\n  \ttest () {\r\n    \treturn \'hello\'\r\n    },\r\n  },\r\n  data(){\r\n    return{\r\n        msg:"hello",\r\n        configKonva: {\r\n          width: sceneWidth,\r\n          height: sceneHeight\r\n        },\r\n        configCircle: {\r\n          x: sceneWidth/2,\r\n          y: sceneHeight/2,\r\n          radius: 90,\r\n          fill: "yellow",\r\n          stroke: "black",\r\n          strokeWidth: 5,\r\n          draggable:true,\r\n          visible:true,\r\n        },\r\n        count:0,\r\n        p:{},\r\n\r\n\r\n\r\n        \r\n        arPoint:[],\r\n        Sel:[],\r\n        arSel:[],\r\n        unLink:false,\r\n        listData:[],\r\n        hover:-1,\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$nextTick(function(){\r\n      layer=this.$refs.layer.getNode();\r\n      stage=this.$refs.stage.getNode();\r\n      window.addEventListener("resize", this.fitStageIntoParentContainer);\r\n      this.fitStageIntoParentContainer();\r\n      let ami=this.createAnimate();\r\n      ami.start();\r\n    })\r\n  },\r\n  created(){\r\n  },\r\n  methods:{\r\n    createRect(x,y){\r\n      let rect=this.$refs.rect.getNode().clone();\r\n      rect.visible(true);\r\n      rect.x(x-rect.width()/2);\r\n      rect.y(y-rect.height()/2);\r\n      rect.name("myrect");\r\n      return rect;\r\n    },\r\n    createAnimate(){\r\n      let c=this.$refs.circle.getNode();\r\n      let that=this;\r\n      var anim = new Konva.Animation(function (frame) {\r\n        that.getListRect().forEach((x,i)=>{\r\n          let p={\r\n            x:x.x()+x.width()/2,\r\n            y:x.y()+x.height()/2\r\n          }\r\n          //that.rotateAroundPoint(x,2,p);\r\n          //x.rotation(3);\r\n          that.rotateAroundPoint(x,2,{x:c.x(),y:c.y()});\r\n          let p2=that.myGetClientRect(x);\r\n          let p3={x:p2.x+p2.width/2,y:p2.y+p2.height/2}\r\n          that.rotateAroundPoint(x,5,p3);\r\n\r\n        })\r\n      }, layer);\r\n      return anim;\r\n    },\r\n    onStageClick(e){\r\n      let p=this.myGetMouse();\r\n      let rect=this.createRect(p.x,p.y);\r\n      layer.add(rect);\r\n    },\r\n    onStageMouseMove(e){\r\n    },\r\n    onStageMouseenter(e){\r\n    },\r\n    onStageMouseleave(e){\r\n    },\r\n    getListRect(){ return layer.find(".myrect") },\r\n    getListLine(){ return layer.find(".myline") },\r\n    getListBall(){ return layer.find(".myball") },\r\n    getBallById(id){ return layer.find(`#${id}`)[0] },\r\n    rotateAroundPoint(shape, angleDegrees, point) {\r\n        let angleRadians = angleDegrees * Math.PI / 180; // sin + cos require radians\r\n        const x =\r\n          point.x +\r\n          (shape.x() - point.x) * Math.cos(angleRadians) -\r\n          (shape.y() - point.y) * Math.sin(angleRadians);\r\n        const y =\r\n          point.y +\r\n          (shape.x() - point.x) * Math.sin(angleRadians) +\r\n          (shape.y() - point.y) * Math.cos(angleRadians);\r\n        shape.position({x: x, y: y});  // move the rotated shape in relation to the rotation point.\r\n        shape.rotation(shape.rotation() + angleDegrees); // rotate the shape in place around its natural rotation point\r\n    },\r\n    myGetClientRect(shape){\r\n        let scale2=stage.scale().x;\r\n        let r=shape.getClientRect();\r\n        r.x=r.x/scale2;\r\n        r.y=r.y/scale2;\r\n        r.width=r.width/scale2;\r\n        r.height=r.height/scale2;\r\n        return r;\r\n    },\r\n\r\n    myGetMouse() {\r\n      let scale=stage.scale().x;\r\n      var mousePos = stage.getPointerPosition();\r\n      var x = mousePos.x;\r\n      var y = mousePos.y;\r\n      var xx = Math.round(x / scale);\r\n      var yy = Math.round(y / scale);\r\n      return { x: xx, y: yy };\r\n    },\r\n    fitStageIntoParentContainer() {\r\n      var container = document.querySelector(\'#stage-parent\');\r\n      var containerWidth = container.offsetWidth;\r\n      var scale = containerWidth / sceneWidth;\r\n      stage.width(sceneWidth * scale);\r\n      stage.height(sceneHeight * scale);\r\n      stage.scale({ x: scale, y: scale });\r\n      this.configKonva.width = sceneWidth * scale;\r\n      this.configKonva.height = sceneHeight * scale;\r\n    },\r\n  }\r\n}\r\n<\/script>\r\n<style scoped>\r\n</style>\r\n'}}]);
//# sourceMappingURL=2468-legacy.79bdf99f.js.map