{"version":3,"file":"js/1361.ae49e75f.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/Tabulator2/Tabulator2NhatKyAjax.vue?e803","webpack://vue_start_1/src/views/Tabulator2/Tabulator2NhatKyAjax.vue","webpack://vue_start_1/./src/views/Tabulator2/Tabulator2NhatKyAjax.vue?533a","webpack://vue_start_1/./src/views/Tabulator2/Tabulator2NhatKyAjax.vue?25bc","webpack://vue_start_1/./src/views/Tabulator2/Tabulator2NhatKyAjax.vue","webpack://vue_start_1/./src/func/MyLoad.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./Tabulator2NhatKyAjax.vue').default}}),_vm._v(\" \"+_vm._s(_vm.msg)),_c('br'),_vm._v(\" rowCount : \"+_vm._s(_vm.rowCount)+\" \"),_c('br'),_c('div',{staticClass:\"mb-1\"},[_c('button',{staticClass:\"mr-1\",attrs:{\"disabled\":_vm.cmd != '' || Object.keys(_vm.sel).length != 0},on:{\"click\":_vm.onAdd}},[_vm._v(\"Add\")]),_c('button',{staticClass:\"mr-1\",on:{\"click\":_vm.ReLoadData}},[_vm._v(\"ReLoad Data\")])]),_c('div',{ref:\"table\"}),_c('b-modal',{ref:\"my-modal2\",attrs:{\"id\":\"modal-1\",\"size\":\"sm\",\"no-close-on-backdrop\":true,\"hide-footer\":\"\",\"title\":\"BootstrapVue\"}},[_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSaveModal.apply(null, arguments)}}},[_c('div',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Id\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.id),expression:\"r.id\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"disabled\":\"\"},domProps:{\"value\":(_vm.r.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"id\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Name \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.r.name),expression:\"r.name\"},{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{\n                            'form-control': true,\n                            'ko-hop-le': _vm.errors.has('name'),\n                        },attrs:{\"type\":\"text\",\"name\":\"name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.r.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.r, \"name\", $event.target.value)}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Ngay \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-datepicker',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],staticClass:\"mb-2\",attrs:{\"name\":\"ngay\",\"date-format-options\":{ year: 'numeric', month: 'numeric', day: 'numeric' },\"locale\":\"vi\"},model:{value:(_vm.r.ngay),callback:function ($$v) {_vm.$set(_vm.r, \"ngay\", $$v)},expression:\"r.ngay\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Act \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('b-form-checkbox',{attrs:{\"name\":\"checkbox-1\",\"value\":\"true\",\"unchecked-value\":\"false\"},on:{\"change\":_vm.ChangeAct},model:{value:(_vm.r.act),callback:function ($$v) {_vm.$set(_vm.r, \"act\", $$v)},expression:\"r.act\"}},[_vm._v(\" Active \")])],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Thành phố \"+_vm._s(_vm.errors.has('tp'))+\" \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('tp') },attrs:{\"name\":\"tp\",\"reduce\":function (option) { return option.id; },\"options\":_vm.tps,\"has-error\":_vm.errors.has('tp')},model:{value:(_vm.r.tp),callback:function ($$v) {_vm.$set(_vm.r, \"tp\", $$v)},expression:\"r.tp\"}})],1)]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\" Quyền \")]),_c('div',{staticClass:\"col-sm-8\"},[_c('v-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ danger: _vm.errors.has('quyen') },attrs:{\"multiple\":\"\",\"name\":\"quyen\",\"options\":['Admin', 'User', 'Editor']},model:{value:(_vm.r.quyen),callback:function ($$v) {_vm.$set(_vm.r, \"quyen\", $$v)},expression:\"r.quyen\"}})],1)])]),_c('div',{staticClass:\"float-right\"},[_c('button',{staticClass:\"btn btn-primary mr-1 btn-sm\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Save\")]),_c('button',{staticClass:\"btn btn-sm\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Cancel\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <raw-loader :mytxt=\"require('!raw-loader!./Tabulator2NhatKyAjax.vue').default\"></raw-loader>\r\n        {{ msg }}<br>\r\n        <!-- {{myvalid}}<br> -->\r\n        <!-- rowedit : {{rowedit}}<br>   -->\r\n        <!-- sel : {{ sel }}<br>\r\n        {{ tableData }}<br> -->\r\n        rowCount : {{ rowCount }} <br>\r\n        <div class=\"mb-1\">\r\n            <button class=\"mr-1\" :disabled=\"cmd != '' || Object.keys(sel).length != 0\" @click=\"onAdd\">Add</button>\r\n            <button class=\"mr-1\" @click=\"ReLoadData\">ReLoad Data</button>\r\n        </div>\r\n        <!-- {{tableData}} -->\r\n        <div ref=\"table\"></div>\r\n        <b-modal ref=\"my-modal2\" id=\"modal-1\" size=\"sm\" :no-close-on-backdrop=\"true\" hide-footer title=\"BootstrapVue\">\r\n            <form @submit.stop.prevent=\"onSaveModal\">\r\n                <div>\r\n                    <!-- <pre>{{r}}</pre> -->\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-4 col-form-label\">Id</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input type=\"text\" class=\"form-control\" disabled v-model=\"r.id\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-4 col-form-label\">\r\n                            Name\r\n                        </label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input type=\"text\" v-model=\"r.name\" name=\"name\" v-validate=\"'required'\" :class=\"{\r\n                                'form-control': true,\r\n                                'ko-hop-le': errors.has('name'),\r\n                            }\" autocomplete=\"off\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-4 col-form-label\">\r\n                            Ngay\r\n                        </label>\r\n                        <div class=\"col-sm-8\">\r\n                            <b-form-datepicker v-model=\"r.ngay\" name=\"ngay\" v-validate=\"'required'\"\r\n                                :date-format-options=\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\" locale=\"vi\"\r\n                                class=\"mb-2\">\r\n                            </b-form-datepicker>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-4 col-form-label\">\r\n                            Act\r\n                        </label>\r\n                        <div class=\"col-sm-8\">\r\n                            <b-form-checkbox v-model=\"r.act\" name=\"checkbox-1\" value=true unchecked-value=false\r\n                                @change=\"ChangeAct\">\r\n                                Active\r\n                            </b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-4 col-form-label\">\r\n                            Thành phố {{ errors.has('tp') }}\r\n                        </label>\r\n                        <div class=\"col-sm-8\">\r\n                            <v-select v-model=\"r.tp\" name=\"tp\" v-validate=\"'required'\" :reduce=\"(option) => option.id\"\r\n                                :options=\"tps\" :has-error=\"errors.has('tp')\" :class=\"{ danger: errors.has('tp') }\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-4 col-form-label\">\r\n                            Quyền\r\n                        </label>\r\n                        <div class=\"col-sm-8\">\r\n                            <v-select multiple name=\"quyen\" v-model=\"r.quyen\" :options=\"['Admin', 'User', 'Editor']\"\r\n                                v-validate=\"'required'\" :class=\"{ danger: errors.has('quyen') }\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"float-right\">\r\n                    <button type=\"submit\" class=\"btn btn-primary mr-1 btn-sm\">Save</button>\r\n                    <button type=\"button\" class=\"btn btn-sm\" @click=\"hideModal()\">Cancel</button>\r\n                </div>\r\n            </form>\r\n        </b-modal>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { TabulatorFull as Tabulator } from 'tabulator-tables'; //import Tabulator library\r\n//import $ from \"jquery\"\r\nimport MyLoader from \"@/func/MyLoad.js\";\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n});\r\n\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\nimport \"vue-select/dist/vue-select.css\";\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data: function () {\r\n        return {\r\n            tabulator: null, //variable to hold your table\r\n            tableData: [], //data for table to display\r\n            msg: \"hello world\",\r\n            count: 1,\r\n            rowCount: 0,\r\n            r: {\r\n                id: 0,\r\n                ten: 'thuc 101',\r\n                ngay: new Date\r\n            },\r\n            rec: {\r\n                id: 0,\r\n                Ngay: new Date(),\r\n                NoiDung: \"xxxx\"\r\n            },\r\n            sel: {},//lưu giá trị cũ\r\n            cmd: \"\",//for add\r\n\r\n\r\n\r\n\r\n\r\n\r\n            tps: [\r\n                { label: 'Huế', id: 'HUE' },\r\n                { label: 'Sài gòn', id: 'SG' },\r\n                { label: 'Đà nẵng', id: 'DN' },\r\n                { label: 'Quảng ngãi', id: 'QN' },\r\n            ],\r\n            mons: [\r\n                { id: 1, name: 'Gạo' },\r\n                { id: 2, name: 'Đường' },\r\n                { id: 3, name: 'Muối' },\r\n                { id: 4, name: 'Bột ngọt' },\r\n                { id: 5, name: 'Nước ngọt' },\r\n                { id: 6, name: 'Cà phê' },\r\n                { id: 7, name: 'Bia' },\r\n                { id: 8, name: 'Nước mía' }\r\n            ]\r\n        }\r\n    },\r\n    mounted() {\r\n        if (!document.getElementById(\"myScript\")) {\r\n            MyLoader.loadScript(\"myScript\", \"/js/jquery.min.js\").then(() => {\r\n                MyLoader.loadScript(\"\", \"/js/bootstrap.js\").then(() => {\r\n                    MyLoader.loadScript(\"\", \"/js/select2.min.js\").then(() => {\r\n                        MyLoader.loadScript(\"\", \"/js/bootstrap-datepicker.js\").then(() => {\r\n                            MyLoader.loadScript(\"\", \"/js/moment.js\").then(() => {\r\n                                MyLoader.loadCss(\"/css/select2.min.css\").then(() => {\r\n                                    MyLoader.loadCss(\"/css/bootstrap-datepicker.css\").then(() => {\r\n                                        this.onReady();\r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            this.onReady();\r\n        }\r\n    },\r\n    methods: {\r\n        onReady() {\r\n            this.loadTabulator();\r\n        },\r\n        loadTabulator() {\r\n            var that = this;\r\n\r\n            var tplFormatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    /*\r\n                    let $input = $(cell.getElement()).find(\"input\");\r\n                    $input.css({\r\n                        \"padding\": \"4px\",\r\n                        \"width\": \"100%\",\r\n                        \"box-sizing\": \"border-box\",\r\n                        \"font-family\": \"verdana\",\r\n                        \"font-size\": \"9px\"\r\n                    })\r\n                    */\r\n                });\r\n                var $el = $(\"<input class='form-control form-control-sm' />\");\r\n                $el.css({\r\n                    \"padding\": \"4px\",\r\n                    \"width\": \"100%\",\r\n                    \"box-sizing\": \"border-box\",\r\n                    \"font-family\": \"verdana\",\r\n                    \"font-size\": \"9px\"\r\n                })\r\n                $el.val(cell.getValue());\r\n                //let editable = (that.sel.id == cell.getRow().getData().id);\r\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                if (editable == false) {\r\n                    $el.attr('disabled', 'disabled');\r\n                }\r\n                $el.on(\"change\", function (e) {\r\n                    cell.setValue($(this).val());\r\n                });\r\n                $el.on(\"blur\", function (e) {\r\n                    cell.setValue($(this).val());\r\n                });\r\n                return $el[0];\r\n            };\r\n            var cmdFormatter = function (cell, formatterParams, onRendered) {\r\n\r\n                onRendered(function () {\r\n                    let id = cell.getRow().getIndex();\r\n                    $(cell.getElement()).find(\"#testedit\").on(\"click\", cell, that.onTestEdit);\r\n                    //$(cell.getElement()).find(\"#doAdd\").on(\"click\", cell.getRow(), that.onDoAdd);\r\n                    $(cell.getElement()).find(\"#doAdd\").on(\"click\", cell.getRow(), that.onSave);\r\n                    $(cell.getElement()).find(\"#cancelAdd\").on(\"click\", cell.getRow(), that.onCancelAdd);\r\n                    $(cell.getElement()).find(\"#save\").on(\"click\", cell.getRow(), that.onSave);\r\n                    $(cell.getElement()).find(\"#cancel\").on(\"click\", cell.getRow(), that.onCancel);\r\n                    $(cell.getElement()).find(\"#edit\").on(\"click\", cell.getRow(), that.onEdit);\r\n                    $(cell.getElement()).find(\"#del\").on(\"click\", cell.getRow(), that.onDel);\r\n                });\r\n\r\n                let $div = $(\"<div>\");\r\n                let $btnDoAdd = $(\"<button>\", { text: \"Add\", class: \"mr-1\" }).attr(\"id\", \"doAdd\").hide();\r\n                let $btnCancelAdd = $(\"<button>\", { text: \"Cancel\", class: \"mr-1\" }).attr(\"id\", \"cancelAdd\").hide();\r\n                let $btnSave = $(\"<button>\", { text: \"Save\", class: \"mr-1\" }).attr(\"id\", \"save\").hide();\r\n                let $btnCancel = $(\"<button>\", { text: \"Cancel\", class: \"mr-1\" }).attr(\"id\", \"cancel\").hide();\r\n                let $btnEdit = $(\"<button>\", { text: \"Edit\", class: \"mr-1\" }).attr(\"id\", \"edit\");\r\n                let $btnDel = $(\"<button>\", { text: \"Del\", class: \"mr-1\" }).attr(\"id\", \"del\");\r\n                $div.append($btnDoAdd);\r\n                $div.append($btnCancelAdd);\r\n                $div.append($btnSave);\r\n                $div.append($btnCancel);\r\n                $div.append($btnEdit);\r\n                $div.append($btnDel);\r\n                let id = cell.getRow().getIndex();\r\n                //alert(that.cmd);\r\n                if (that.cmd == \"\") {\r\n                    if (that.sel.id == cell.getRow().getData().id) {\r\n                        $btnSave.show();\r\n                        $btnCancel.show();\r\n                        $btnEdit.hide();\r\n                        $btnDel.hide();\r\n                    } else {\r\n                        if ($.isEmptyObject(that.sel) == true) {\r\n                            $btnSave.hide();\r\n                            $btnCancel.hide();\r\n                            if (id == 0) {\r\n                                $btnEdit.hide();\r\n                                $btnDel.hide();\r\n                                $btnDoAdd.show();\r\n                                $btnCancelAdd.show();\r\n                            } else {\r\n                                //alert(that.cmd);\r\n                                //$btnEdit.show();\r\n                                // $btnEdit.attr('disabled', 'disabled');//.hide();\r\n                                // $btnDel.attr('disabled', 'disabled');//.hide();\r\n                            }\r\n                        } else {\r\n                            $btnEdit.attr('disabled', 'disabled');//.hide();\r\n                            $btnDel.attr('disabled', 'disabled');//.hide();\r\n                        }\r\n                    }\r\n                } else {//that.cmd!=\"\"\r\n                    if (id == 0) {\r\n                        $btnEdit.hide();\r\n                        $btnDel.hide();\r\n                        $btnDoAdd.show();\r\n                        $btnCancelAdd.show();\r\n                    } else {\r\n                        $btnEdit.attr('disabled', 'disabled');//.hide();\r\n                        $btnDel.attr('disabled', 'disabled');//.hide();\r\n                    }\r\n                }\r\n                return $div[0];\r\n            };\r\n            var datePickerFormatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    let $cell = $(cell.getElement()).find(\"input\");\r\n                    let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                    if (editable == false) {\r\n                        $(cell.getElement()).find(\"input:first\").prop(\"disabled\", true);\r\n                        $(cell.getElement()).find(\"input:first\").css(\"background-color\", \"#e9ecef\");\r\n                    } else {\r\n                        $(cell.getElement()).find(\"input:first\").css(\"background-color\", \"white\");\r\n                    }\r\n                    $cell.css({\r\n                        \"padding\": \"4px\",\r\n                        \"width\": \"100%\",\r\n                        \"box-sizing\": \"border-box\",\r\n                        \"height\": \"100%\",\r\n                        //\"border\":\"1px solid blue\",\r\n                        //\"background-color\":\"yellow\",\r\n                        //text-align: center;\r\n                        \"text-align\": \"center\"\r\n                    })\r\n                    $cell.prop(\"readonly\", true);\r\n                    $cell.datepicker({\r\n                        format: \"dd/mm/yyyy\",\r\n                        todayBtn: true,\r\n                        autoclose: true,\r\n                        todayHighlight: true,\r\n                    });\r\n                    let value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\"DD/MM/YYYY\");\r\n                    let value2 = moment(cell.getValue()).format(\"DD/MM/YYYY\");\r\n                    $cell.datepicker(\"setDate\", value2);\r\n                    $cell.datepicker().on(\"changeDate\", function () {\r\n                        let d = $(this).datepicker(\"getDate\");\r\n                        //cell.setValue(moment(d).format(\"DD/MM/YYYY\"));\r\n                        cell.setValue(moment(d));\r\n                    });\r\n                });\r\n                var $el = $(\"<input class='form-control' />\");\r\n                return $el[0];\r\n            };\r\n            var select2Formatter = function (cell, formatterParams, onRendered) {\r\n                onRendered(function () {\r\n                    let $myCell = $(cell.getElement());\r\n                    let $cell = $(cell.getElement()).find(\"select\");\r\n                    $cell.css({\r\n                        \"padding\": \"4px\",\r\n                        \"width\": \"100%\",\r\n                        \"box-sizing\": \"border-box\",\r\n                        \"font-family\": \"\",\r\n                    })\r\n                    $cell.select2({\r\n                        placeholder: '',\r\n                        width: \"100%\",\r\n                        allowClear: true,\r\n                    });\r\n                    $cell.focus();\r\n                    $cell.val(cell.getValue()).trigger(\"change.select2\");\r\n                    $(cell.getElement())\r\n                        .find(\"select\")\r\n                        .on(\"change\", function () {\r\n                            cell.setValue($(this).val());\r\n                        });\r\n                    $myCell\r\n                        .find(\".select2-container--default\")\r\n                        .css(\"border\", \"0px solid blue\");\r\n                    $myCell\r\n                        .find(\".select2-selection--single\")\r\n                        .css(\"border\", \"0px solid blue\");\r\n                });\r\n                var $el = $(\"<select class='tabu' >\");\r\n                //let editable = (that.sel.id == cell.getRow().getData().id);\r\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\r\n                if (editable == false) {\r\n                    $el.attr('disabled', 'disabled');\r\n                } else {\r\n                }\r\n                formatterParams.forEach((el) => {\r\n                    let $option = $(\"<option>\").attr(\"value\", el.id).text(el.text);\r\n                    $el.append($option);\r\n                });\r\n                return $el[0];\r\n            };\r\n            var roweditCheck = function (cell) {\r\n                let row = cell.getRow();\r\n                let id = row.getIndex();\r\n                let $cell = row.getElement();\r\n                if (that.sel.id == cell.getRow().getData().id) {\r\n                    return true;\r\n                } else {\r\n                    if (id == 0) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n            }\r\n            this.tabulator = new Tabulator(this.$refs.table, {\r\n\r\n                pagination: true, //enable pagination\r\n                paginationMode: \"remote\", //enable remote pagination\r\n                ajaxSorting: true,\r\n                ajaxURL: \"/api/NhatKy/GetPage\", //set url for ajax request\r\n                ajaxFiltering: true,\r\n                filterMode: \"remote\", //send filter data to the server instead of processing locally\r\n                sortMode: \"remote\",\r\n                ajaxParams: { token: \"ABC123\" }, //set any standard parameters to pass with the request\r\n                paginationSize: 2, //optional parameter to request a certain number of rows per page\r\n                paginationInitialPage: 1, //optional parameter to set the initial page to load    \r\n                paginationSizeSelector: [5, 10, 20, 30, 50],\r\n                height: $(window).innerHeight() - 400,//'200px',//$(window).innerHeight()\r\n                layout: \"fitData\",//layout:\"fitDataFill\",//layout:\"fitColumns\",\r\n                debugInvalidOptions: false,\r\n\r\n                ajaxRequesting: function (url, params) {\r\n                    that.msg = `${url} - ` + JSON.stringify(params);\r\n                },\r\n                ajaxResponse: function (url, params, response) {\r\n                    //alert(JSON.stringify(response));\r\n                    /*\r\n{\"last_page\":1,\"rowCount\":1,\"data\":[{\"Id\":1,\"Ngay\":\"2022-11-13T00:00:00\",\"NoiDung\":\"sfsfsfsfsf\"}]}                    \r\n*/\r\n                    that.rowCount = response.rowCount;\r\n                    // let data = [];\r\n                    // response.data.forEach(x => {\r\n                    //     data.push({\r\n                    //         id: x.Id,\r\n                    //         Name: x.Name\r\n                    //     })\r\n                    // })\r\n                    let ar = {};\r\n                    ar.last_page = response.last_page;\r\n                    ar.rowCount = response.rowCount;\r\n                    //ar.data = data;\r\n\r\n                    let data2 = [];\r\n                    response.data.forEach(obj => {\r\n                        let x = {};\r\n                        Object.keys(obj).forEach(key => {\r\n                            //console.log(key, obj[key]);\r\n                            let key2 = key;\r\n                            if (key2 == \"Id\") {\r\n                                key2 = \"id\"\r\n                            }\r\n                            x[key2] = obj[key];\r\n                        });\r\n                        data2.push(x);\r\n                    })\r\n                    ar.data = data2;\r\n                    return ar;//.data; //pass the data array into Tabulator\r\n                },\r\n\r\n                rowFormatter: function (row) {\r\n                    let chk = that.sel.id == row.getData().id;\r\n                },\r\n                index: \"id\",\r\n                //autoColumns:true,\r\n                columns: [\r\n                    {\r\n                        title: \"STT\",\r\n                        formatter: \"rownum\",\r\n                        headerHozAlign: \"center\",\r\n                        hozAlign: \"center\",\r\n                        vertAlign: \"middle\",//\"bottom\",\r\n                    },\r\n                    {\r\n                        title: \"Cmd\",\r\n                        headerHozAlign: \"center\",\r\n                        hozAlign: \"center\",\r\n                        vertAlign: \"middle\",//\"bottom\",\r\n                        headerSort: false,\r\n                        width: 100,\r\n                        formatter: cmdFormatter,\r\n                    },\r\n                    {\r\n                        title: \"Id\",\r\n                        field: \"id\",\r\n                        width: 50,\r\n                        vertAlign: \"middle\",//\"bottom\",\r\n                        headerFilter: true,\r\n                        hozAlign: \"center\",\r\n                    },\r\n                    {\r\n                        title: \"Ngay\",\r\n                        field: \"Ngay\",\r\n                        width: 100,\r\n                        hozAlign: \"center\",\r\n                        headerFilter: true,\r\n                        formatter: datePickerFormatter,\r\n                        editable: roweditCheck,\r\n                    },\r\n                    {\r\n                        title: \"NoiDung\",\r\n                        field: \"NoiDung\",\r\n                        width: 320,\r\n                        vertAlign: \"middle\",//\"bottom\",\r\n                        headerFilter: true,\r\n                        editor: \"input\",\r\n                        validator: [\"required\"], //\"required\"  \r\n                        editable: roweditCheck,//editCheck,\r\n                    },\r\n\r\n\r\n\r\n\r\n                    // {\"last_page\":1,\"rowCount\":1,\"data\":[{\"Id\":1,\"Ngay\":\"2022-11-13T00:00:00\",\"NoiDung\":\"sfsfsfsfsf\"}]}                    \r\n                    /*\r\n                                        {\r\n                                            title: \"Name\",\r\n                                            field: \"Name\",\r\n                                            width: 120,\r\n                                            vertAlign: \"middle\",//\"bottom\",\r\n                                            headerFilter: true,\r\n                                            editor: \"input\",\r\n                                            validator: [\"required\"], //\"required\"  \r\n                                            editable: roweditCheck,//editCheck,\r\n                                        },\r\n                                        {\r\n                                            title: \"DonGia\",\r\n                                            field: \"DonGia\",\r\n                                            width: 80,\r\n                                            vertAlign: \"middle\",//\"bottom\",\r\n                                            headerFilter: true,\r\n                                            hozAlign: \"right\",\r\n                                            editor: \"input\",\r\n                                            editable: roweditCheck,//editCheck,\r\n                                            formatter: \"money\",\r\n                                            formatterParams: {\r\n                                                decimal: \",\",\r\n                                                thousand: \".\",\r\n                                                symbol: \"\", //\"£\",\r\n                                                symbolAfter: \"p\",\r\n                                                precision: false,\r\n                                            },\r\n                                        },\r\n                                        {\r\n                                            title: \"Ngay\",\r\n                                            field: \"Ngay\",\r\n                                            width: 100,\r\n                                            hozAlign: \"center\",\r\n                                            headerFilter: true,\r\n                                            formatter: datePickerFormatter,\r\n                                            editable: roweditCheck,\r\n                                        },\r\n                                        */\r\n\r\n                ], //define table columns\r\n            });\r\n            this.tabulator.on(\"dataLoaded\", function (data) {\r\n                that.onLoad();\r\n            });\r\n            this.tabulator.on(\"pageLoaded\", function (pageno) {\r\n            });\r\n            this.tabulator.on(\"dataChanged\", function (data) {\r\n            });\r\n            this.tabulator.on(\"rowClick\", function (e, row) {\r\n            });\r\n            this.tabulator.on(\"rowSelectionChanged\", function (data, rows) {\r\n            });\r\n            this.tabulator.on(\"rowSelected\", function (row) {\r\n                let index = row.getIndex();\r\n                //that.msg = index;\r\n                //console.log('rowSelected');\r\n            });\r\n            this.tabulator.on(\"cellEditing\", function (cell) {\r\n                let row = cell.getRow();\r\n                let data = row.getData();\r\n                let index = row.getIndex();\r\n            });\r\n            this.tabulator.on(\"cellEditCancelled\", function (cell) {\r\n            });\r\n            this.tabulator.on(\"cellEdited\", function (cell) {\r\n                if (cell.getField() != \"solg\") {\r\n                    return;\r\n                }\r\n                let row = cell.getRow();\r\n                let data = row.getData();\r\n                let solg = row.getCell(\"solg\").getValue();\r\n                let tien = solg * 1000;\r\n                let id = row.getIndex();\r\n                row.getCell(\"tien\").setValue(tien);\r\n            });\r\n            this.tabulator.on(\"validationFailed\", function (cell, value, validators) {\r\n                let field = cell.getField();\r\n            });\r\n        },\r\n        ReLoadData() {\r\n            this.tabulatorClear();\r\n            let r = JSON.parse(JSON.stringify(this.rec));\r\n            r.id = this.count++;\r\n            this.tableData.push(r);\r\n            this.count++;\r\n            this.setPage(1);\r\n        },\r\n        onLoad() {\r\n            // for (var i = 0; i < 3; i++) {\r\n            //     let r = JSON.parse(JSON.stringify(this.rec));\r\n            //     r.id = this.count;\r\n            //     r.tien = r.solg * 1000;\r\n            //     this.tableData.push(r);\r\n            //     this.count++;\r\n            // }\r\n            // this.setPage(1);\r\n        },\r\n        ChangeAct() {\r\n            let act = (this.r.act == 'true') ? true : false;\r\n            this.r.act = act;\r\n        },\r\n        rowValidate(row) {\r\n            let kq = true;\r\n            var cells = row.getCells();\r\n            for (var i = 0; i < cells.length; i++) {\r\n                if (cells[i].isValid() != true) {\r\n                    kq = false;\r\n                }\r\n            }\r\n            return kq;\r\n        },\r\n        onSave(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            if (\r\n                this.rowValidate(e.data) == false\r\n                //|| row.getData().tpl == \"\"\r\n                //|| row.getData().monid == null\r\n            ) {\r\n                this.toast(\"không hợp lệ!!!\")\r\n                return;\r\n            }\r\n            let r = JSON.parse(JSON.stringify(row.getData()));\r\n            r.Ngay = moment(r.Ngay).format(\"YYYY-MM-DD HH:mm:ss\");\r\n            this.Save(r).then(res => {\r\n                if (r.id == 0) {\r\n                    let new_lastpage = this.getLastPage(this.rowCount + 1);\r\n                    this.onCancelAdd(e);\r\n                    this.setPage(new_lastpage);\r\n                } else {\r\n                    this.tabulator.deselectRow(this.sel.id);\r\n                    this.sel = {};\r\n                    //this.tabulator.redraw(true);\r\n                    this.setPage(this.getPage());\r\n                }\r\n            })\r\n\r\n            /*\r\n            if (r.id == 0) {\r\n                let new_lastpage = this.getLastPage(this.rowCount + 1);\r\n                this.Save(r).then(res => {\r\n                    //alert(JSON.stringify(res));\r\n\r\n                    this.onCancelAdd(e);\r\n                    this.setPage(new_lastpage);\r\n                })\r\n            } else {\r\n                this.Save(r).then(res => {\r\n                    this.tabulator.deselectRow(this.sel.id);\r\n                    this.sel = {};\r\n                    this.tabulator.redraw(true);\r\n                })\r\n            }\r\n            */\r\n\r\n        },\r\n        onSaveModal() {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(this.r));\r\n                if (r.id == 0) {\r\n                    r.id = this.count;\r\n                    this.tabulatorAdd(r);\r\n                    this.count++;\r\n                    this.setPage(1);\r\n                } else {\r\n                    this.tabulatorUpdate(r);\r\n                }\r\n                this.hideModal();\r\n            });\r\n        },\r\n        onAdd() {\r\n            this.cmd = \"add\";\r\n            let r = JSON.parse(JSON.stringify(this.rec));\r\n            this.tabulator.addRow(r, true, 0);\r\n            this.tabulator.selectRow(0);\r\n            $(\".tabulator-footer\").hide();\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onCancelAdd(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n\r\n            this.cmd = \"\";\r\n            row.delete();\r\n            $(\".tabulator-footer\").show();\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onCancel(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            let $row = $(row.getElement());\r\n            let r = JSON.parse(JSON.stringify(this.sel));\r\n\r\n            this.tabulatorUpdate(r);\r\n            this.sel = {};\r\n            this.tabulator.deselectRow(this.sel.id);\r\n            $(\".tabulator-footer\").show();\r\n            this.tabulator.redraw(true);\r\n        },\r\n        onEdit(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            var cells = row.getCells();\r\n            let id = row.getIndex();\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            this.sel = JSON.parse(JSON.stringify(row.getData()));\r\n            let $row = $(row.getElement());\r\n            this.tabulator.selectRow(id);\r\n            $(\".tabulator-footer\").hide();\r\n            this.tabulator.redraw(true)\r\n        },\r\n        onDel(e) {\r\n            e.preventDefault();\r\n            let row = e.data;\r\n            let id = row.getIndex();\r\n            let new_lastpage = this.getLastPage(this.rowCount - 1);\r\n            this.Del(id).then(res => {\r\n                if (res.data.kq == \"ok\") {//del ok\r\n                    row.delete();\r\n                    this.setPage(new_lastpage);\r\n                }\r\n                this.toast(res.data.msg);\r\n            })\r\n        },\r\n        getPageMax() {\r\n            return this.tabulator.getPageMax();\r\n        },\r\n        getLastPage(count) {\r\n            let pageSize = this.tabulator.getPageSize();\r\n            let du = count % pageSize;\r\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n        },\r\n        getPageSize() {\r\n            return this.tabulator.getPageSize();\r\n        },\r\n        getPage() {\r\n            return this.tabulator.getPage();\r\n        },\r\n        setPage(_page) {\r\n            this.tabulator.setPage(_page);\r\n        },\r\n        getData() {\r\n            return this.tabulator.getData();\r\n        },\r\n        tabulatorLoadData(ar) {\r\n            ar.forEach(x => {\r\n                this.tableData.push(x);\r\n            })\r\n        },\r\n        tabulatorClear() {\r\n            let i = 0;\r\n            while (i < this.tableData.length) {\r\n                this.tableData.splice(i, 1);\r\n            }\r\n        },\r\n        tabulatorAdd(r) {\r\n            this.tableData.unshift(r);\r\n        },\r\n        tabulatorDel(id) {\r\n            let index = this.tableData.findIndex(x => x.id == id);\r\n            this.tableData.splice(index, 1);\r\n        },\r\n        tabulatorUpdate(r) {\r\n            let index = this.tableData.findIndex(x => x.id == r.id);\r\n            this.tableData.splice(index, 1, r);\r\n        },\r\n        tabulatorGetRow(id) {\r\n            //let index=this.tabulator.getData().findIndex(x=>x.id==id);\r\n            //let r=this.tabulator.getData()[index];\r\n            //return r;\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        showModal() {\r\n            this.$refs['my-modal2'].show()\r\n        },\r\n        hideModal() {\r\n            this.$refs['my-modal2'].hide()\r\n        },\r\n        async Save(r) {\r\n            return await axios.post(`/api/NhatKy/Save`, r).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n        async Del(id) {\r\n            return await axios\r\n                .get(`/api/NhatKy/Delete?id=${id}`)\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await axios.get(`/api/NhatKy/GetById?id=${id}`).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.select2-container--default .select2-selection--single .select2-selection__arrow {\r\n    height: 15px;\r\n    position: absolute;\r\n    top: 4px;\r\n    right: 1px;\r\n    width: 20px;\r\n}\r\n\r\n.select2-container--default .select2-selection--single .select2-selection__rendered {\r\n    color: #444;\r\n    line-height: 24px;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: block;\r\n    height: 24px;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n\r\n.xyz {\r\n    border: 1px solid red;\r\n}\r\n\r\n.danger,\r\n.danger .dropdown-toggle,\r\n.danger .selected-tag {\r\n    background-color: aqua;\r\n    border-radius: 4px;\r\n}\r\n\r\n.ko-hop-le {\r\n    border-radius: 4px;\r\n    background-color: aqua;\r\n}\r\n\r\n$textSize: 8.5px; //14px !default; //table text size\r\n@import \"~tabulator-tables/src/scss/tabulator.scss\";\r\n\r\n.tabulator-col-title {\r\n    text-align: center;\r\n}\r\n\r\n.tabulator .tabulator-footer .tabulator-page.active {\r\n    background-color: greenyellow !important;\r\n    color: blue !important;\r\n}\r\n\r\n.tabulator-row .tabulator-cell {\r\n    padding: 3px 4px;\r\n}\r\n\r\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\r\n    width: 24px;\r\n    height: 24px;\r\n    font-size: 10px;\r\n    line-height: 1;\r\n    margin: 0px auto;\r\n    padding: 6px 0;\r\n}\r\n\r\n.custom-control.custom-checkbox {\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    min-height: 0.9rem;\r\n    padding-left: 1.5rem;\r\n    padding-top: 0.3rem;\r\n}\r\n\r\n.col-4 input {\r\n    margin-bottom: 1px;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 0.3rem;\r\n}\r\n</style>\r\n  \r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tabulator2NhatKyAjax.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tabulator2NhatKyAjax.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tabulator2NhatKyAjax.vue?vue&type=template&id=f95a8578&\"\nimport script from \"./Tabulator2NhatKyAjax.vue?vue&type=script&lang=js&\"\nexport * from \"./Tabulator2NhatKyAjax.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Tabulator2NhatKyAjax.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div>\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./Tabulator2NhatKyAjax.vue').default\\\"></raw-loader>\\r\\n        {{ msg }}<br>\\r\\n        <!-- {{myvalid}}<br> -->\\r\\n        <!-- rowedit : {{rowedit}}<br>   -->\\r\\n        <!-- sel : {{ sel }}<br>\\r\\n        {{ tableData }}<br> -->\\r\\n        rowCount : {{ rowCount }} <br>\\r\\n        <div class=\\\"mb-1\\\">\\r\\n            <button class=\\\"mr-1\\\" :disabled=\\\"cmd != '' || Object.keys(sel).length != 0\\\" @click=\\\"onAdd\\\">Add</button>\\r\\n            <button class=\\\"mr-1\\\" @click=\\\"ReLoadData\\\">ReLoad Data</button>\\r\\n        </div>\\r\\n        <!-- {{tableData}} -->\\r\\n        <div ref=\\\"table\\\"></div>\\r\\n        <b-modal ref=\\\"my-modal2\\\" id=\\\"modal-1\\\" size=\\\"sm\\\" :no-close-on-backdrop=\\\"true\\\" hide-footer title=\\\"BootstrapVue\\\">\\r\\n            <form @submit.stop.prevent=\\\"onSaveModal\\\">\\r\\n                <div>\\r\\n                    <!-- <pre>{{r}}</pre> -->\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Id</label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled v-model=\\\"r.id\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n                            Name\\r\\n                        </label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <input type=\\\"text\\\" v-model=\\\"r.name\\\" name=\\\"name\\\" v-validate=\\\"'required'\\\" :class=\\\"{\\r\\n                                'form-control': true,\\r\\n                                'ko-hop-le': errors.has('name'),\\r\\n                            }\\\" autocomplete=\\\"off\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n                            Ngay\\r\\n                        </label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <b-form-datepicker v-model=\\\"r.ngay\\\" name=\\\"ngay\\\" v-validate=\\\"'required'\\\"\\r\\n                                :date-format-options=\\\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\\\" locale=\\\"vi\\\"\\r\\n                                class=\\\"mb-2\\\">\\r\\n                            </b-form-datepicker>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n                            Act\\r\\n                        </label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <b-form-checkbox v-model=\\\"r.act\\\" name=\\\"checkbox-1\\\" value=true unchecked-value=false\\r\\n                                @change=\\\"ChangeAct\\\">\\r\\n                                Active\\r\\n                            </b-form-checkbox>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n                            Thành phố {{ errors.has('tp') }}\\r\\n                        </label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <v-select v-model=\\\"r.tp\\\" name=\\\"tp\\\" v-validate=\\\"'required'\\\" :reduce=\\\"(option) => option.id\\\"\\r\\n                                :options=\\\"tps\\\" :has-error=\\\"errors.has('tp')\\\" :class=\\\"{ danger: errors.has('tp') }\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-4 col-form-label\\\">\\r\\n                            Quyền\\r\\n                        </label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <v-select multiple name=\\\"quyen\\\" v-model=\\\"r.quyen\\\" :options=\\\"['Admin', 'User', 'Editor']\\\"\\r\\n                                v-validate=\\\"'required'\\\" :class=\\\"{ danger: errors.has('quyen') }\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"float-right\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-1 btn-sm\\\">Save</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" @click=\\\"hideModal()\\\">Cancel</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </b-modal>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\nimport { TabulatorFull as Tabulator } from 'tabulator-tables'; //import Tabulator library\\r\\n//import $ from \\\"jquery\\\"\\r\\nimport MyLoader from \\\"@/func/MyLoad.js\\\";\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n});\\r\\n\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\nimport \\\"vue-select/dist/vue-select.css\\\";\\r\\nimport moment from 'moment';\\r\\nimport axios from 'axios';\\r\\n\\r\\nexport default {\\r\\n    data: function () {\\r\\n        return {\\r\\n            tabulator: null, //variable to hold your table\\r\\n            tableData: [], //data for table to display\\r\\n            msg: \\\"hello world\\\",\\r\\n            count: 1,\\r\\n            rowCount: 0,\\r\\n            r: {\\r\\n                id: 0,\\r\\n                ten: 'thuc 101',\\r\\n                ngay: new Date\\r\\n            },\\r\\n            rec: {\\r\\n                id: 0,\\r\\n                Ngay: new Date(),\\r\\n                NoiDung: \\\"xxxx\\\"\\r\\n            },\\r\\n            sel: {},//lưu giá trị cũ\\r\\n            cmd: \\\"\\\",//for add\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            tps: [\\r\\n                { label: 'Huế', id: 'HUE' },\\r\\n                { label: 'Sài gòn', id: 'SG' },\\r\\n                { label: 'Đà nẵng', id: 'DN' },\\r\\n                { label: 'Quảng ngãi', id: 'QN' },\\r\\n            ],\\r\\n            mons: [\\r\\n                { id: 1, name: 'Gạo' },\\r\\n                { id: 2, name: 'Đường' },\\r\\n                { id: 3, name: 'Muối' },\\r\\n                { id: 4, name: 'Bột ngọt' },\\r\\n                { id: 5, name: 'Nước ngọt' },\\r\\n                { id: 6, name: 'Cà phê' },\\r\\n                { id: 7, name: 'Bia' },\\r\\n                { id: 8, name: 'Nước mía' }\\r\\n            ]\\r\\n        }\\r\\n    },\\r\\n    mounted() {\\r\\n        if (!document.getElementById(\\\"myScript\\\")) {\\r\\n            MyLoader.loadScript(\\\"myScript\\\", \\\"/js/jquery.min.js\\\").then(() => {\\r\\n                MyLoader.loadScript(\\\"\\\", \\\"/js/bootstrap.js\\\").then(() => {\\r\\n                    MyLoader.loadScript(\\\"\\\", \\\"/js/select2.min.js\\\").then(() => {\\r\\n                        MyLoader.loadScript(\\\"\\\", \\\"/js/bootstrap-datepicker.js\\\").then(() => {\\r\\n                            MyLoader.loadScript(\\\"\\\", \\\"/js/moment.js\\\").then(() => {\\r\\n                                MyLoader.loadCss(\\\"/css/select2.min.css\\\").then(() => {\\r\\n                                    MyLoader.loadCss(\\\"/css/bootstrap-datepicker.css\\\").then(() => {\\r\\n                                        this.onReady();\\r\\n                                    })\\r\\n                                })\\r\\n                            })\\r\\n                        })\\r\\n                    })\\r\\n                })\\r\\n            })\\r\\n        } else {\\r\\n            this.onReady();\\r\\n        }\\r\\n    },\\r\\n    methods: {\\r\\n        onReady() {\\r\\n            this.loadTabulator();\\r\\n        },\\r\\n        loadTabulator() {\\r\\n            var that = this;\\r\\n\\r\\n            var tplFormatter = function (cell, formatterParams, onRendered) {\\r\\n                onRendered(function () {\\r\\n                    /*\\r\\n                    let $input = $(cell.getElement()).find(\\\"input\\\");\\r\\n                    $input.css({\\r\\n                        \\\"padding\\\": \\\"4px\\\",\\r\\n                        \\\"width\\\": \\\"100%\\\",\\r\\n                        \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n                        \\\"font-family\\\": \\\"verdana\\\",\\r\\n                        \\\"font-size\\\": \\\"9px\\\"\\r\\n                    })\\r\\n                    */\\r\\n                });\\r\\n                var $el = $(\\\"<input class='form-control form-control-sm' />\\\");\\r\\n                $el.css({\\r\\n                    \\\"padding\\\": \\\"4px\\\",\\r\\n                    \\\"width\\\": \\\"100%\\\",\\r\\n                    \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n                    \\\"font-family\\\": \\\"verdana\\\",\\r\\n                    \\\"font-size\\\": \\\"9px\\\"\\r\\n                })\\r\\n                $el.val(cell.getValue());\\r\\n                //let editable = (that.sel.id == cell.getRow().getData().id);\\r\\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\\r\\n                if (editable == false) {\\r\\n                    $el.attr('disabled', 'disabled');\\r\\n                }\\r\\n                $el.on(\\\"change\\\", function (e) {\\r\\n                    cell.setValue($(this).val());\\r\\n                });\\r\\n                $el.on(\\\"blur\\\", function (e) {\\r\\n                    cell.setValue($(this).val());\\r\\n                });\\r\\n                return $el[0];\\r\\n            };\\r\\n            var cmdFormatter = function (cell, formatterParams, onRendered) {\\r\\n\\r\\n                onRendered(function () {\\r\\n                    let id = cell.getRow().getIndex();\\r\\n                    $(cell.getElement()).find(\\\"#testedit\\\").on(\\\"click\\\", cell, that.onTestEdit);\\r\\n                    //$(cell.getElement()).find(\\\"#doAdd\\\").on(\\\"click\\\", cell.getRow(), that.onDoAdd);\\r\\n                    $(cell.getElement()).find(\\\"#doAdd\\\").on(\\\"click\\\", cell.getRow(), that.onSave);\\r\\n                    $(cell.getElement()).find(\\\"#cancelAdd\\\").on(\\\"click\\\", cell.getRow(), that.onCancelAdd);\\r\\n                    $(cell.getElement()).find(\\\"#save\\\").on(\\\"click\\\", cell.getRow(), that.onSave);\\r\\n                    $(cell.getElement()).find(\\\"#cancel\\\").on(\\\"click\\\", cell.getRow(), that.onCancel);\\r\\n                    $(cell.getElement()).find(\\\"#edit\\\").on(\\\"click\\\", cell.getRow(), that.onEdit);\\r\\n                    $(cell.getElement()).find(\\\"#del\\\").on(\\\"click\\\", cell.getRow(), that.onDel);\\r\\n                });\\r\\n\\r\\n                let $div = $(\\\"<div>\\\");\\r\\n                let $btnDoAdd = $(\\\"<button>\\\", { text: \\\"Add\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"doAdd\\\").hide();\\r\\n                let $btnCancelAdd = $(\\\"<button>\\\", { text: \\\"Cancel\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"cancelAdd\\\").hide();\\r\\n                let $btnSave = $(\\\"<button>\\\", { text: \\\"Save\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"save\\\").hide();\\r\\n                let $btnCancel = $(\\\"<button>\\\", { text: \\\"Cancel\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"cancel\\\").hide();\\r\\n                let $btnEdit = $(\\\"<button>\\\", { text: \\\"Edit\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"edit\\\");\\r\\n                let $btnDel = $(\\\"<button>\\\", { text: \\\"Del\\\", class: \\\"mr-1\\\" }).attr(\\\"id\\\", \\\"del\\\");\\r\\n                $div.append($btnDoAdd);\\r\\n                $div.append($btnCancelAdd);\\r\\n                $div.append($btnSave);\\r\\n                $div.append($btnCancel);\\r\\n                $div.append($btnEdit);\\r\\n                $div.append($btnDel);\\r\\n                let id = cell.getRow().getIndex();\\r\\n                //alert(that.cmd);\\r\\n                if (that.cmd == \\\"\\\") {\\r\\n                    if (that.sel.id == cell.getRow().getData().id) {\\r\\n                        $btnSave.show();\\r\\n                        $btnCancel.show();\\r\\n                        $btnEdit.hide();\\r\\n                        $btnDel.hide();\\r\\n                    } else {\\r\\n                        if ($.isEmptyObject(that.sel) == true) {\\r\\n                            $btnSave.hide();\\r\\n                            $btnCancel.hide();\\r\\n                            if (id == 0) {\\r\\n                                $btnEdit.hide();\\r\\n                                $btnDel.hide();\\r\\n                                $btnDoAdd.show();\\r\\n                                $btnCancelAdd.show();\\r\\n                            } else {\\r\\n                                //alert(that.cmd);\\r\\n                                //$btnEdit.show();\\r\\n                                // $btnEdit.attr('disabled', 'disabled');//.hide();\\r\\n                                // $btnDel.attr('disabled', 'disabled');//.hide();\\r\\n                            }\\r\\n                        } else {\\r\\n                            $btnEdit.attr('disabled', 'disabled');//.hide();\\r\\n                            $btnDel.attr('disabled', 'disabled');//.hide();\\r\\n                        }\\r\\n                    }\\r\\n                } else {//that.cmd!=\\\"\\\"\\r\\n                    if (id == 0) {\\r\\n                        $btnEdit.hide();\\r\\n                        $btnDel.hide();\\r\\n                        $btnDoAdd.show();\\r\\n                        $btnCancelAdd.show();\\r\\n                    } else {\\r\\n                        $btnEdit.attr('disabled', 'disabled');//.hide();\\r\\n                        $btnDel.attr('disabled', 'disabled');//.hide();\\r\\n                    }\\r\\n                }\\r\\n                return $div[0];\\r\\n            };\\r\\n            var datePickerFormatter = function (cell, formatterParams, onRendered) {\\r\\n                onRendered(function () {\\r\\n                    let $cell = $(cell.getElement()).find(\\\"input\\\");\\r\\n                    let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\\r\\n                    if (editable == false) {\\r\\n                        $(cell.getElement()).find(\\\"input:first\\\").prop(\\\"disabled\\\", true);\\r\\n                        $(cell.getElement()).find(\\\"input:first\\\").css(\\\"background-color\\\", \\\"#e9ecef\\\");\\r\\n                    } else {\\r\\n                        $(cell.getElement()).find(\\\"input:first\\\").css(\\\"background-color\\\", \\\"white\\\");\\r\\n                    }\\r\\n                    $cell.css({\\r\\n                        \\\"padding\\\": \\\"4px\\\",\\r\\n                        \\\"width\\\": \\\"100%\\\",\\r\\n                        \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n                        \\\"height\\\": \\\"100%\\\",\\r\\n                        //\\\"border\\\":\\\"1px solid blue\\\",\\r\\n                        //\\\"background-color\\\":\\\"yellow\\\",\\r\\n                        //text-align: center;\\r\\n                        \\\"text-align\\\": \\\"center\\\"\\r\\n                    })\\r\\n                    $cell.prop(\\\"readonly\\\", true);\\r\\n                    $cell.datepicker({\\r\\n                        format: \\\"dd/mm/yyyy\\\",\\r\\n                        todayBtn: true,\\r\\n                        autoclose: true,\\r\\n                        todayHighlight: true,\\r\\n                    });\\r\\n                    let value = moment(cell.getValue(), \\\"DD/MM/YYYY\\\").format(\\\"DD/MM/YYYY\\\");\\r\\n                    let value2 = moment(cell.getValue()).format(\\\"DD/MM/YYYY\\\");\\r\\n                    $cell.datepicker(\\\"setDate\\\", value2);\\r\\n                    $cell.datepicker().on(\\\"changeDate\\\", function () {\\r\\n                        let d = $(this).datepicker(\\\"getDate\\\");\\r\\n                        //cell.setValue(moment(d).format(\\\"DD/MM/YYYY\\\"));\\r\\n                        cell.setValue(moment(d));\\r\\n                    });\\r\\n                });\\r\\n                var $el = $(\\\"<input class='form-control' />\\\");\\r\\n                return $el[0];\\r\\n            };\\r\\n            var select2Formatter = function (cell, formatterParams, onRendered) {\\r\\n                onRendered(function () {\\r\\n                    let $myCell = $(cell.getElement());\\r\\n                    let $cell = $(cell.getElement()).find(\\\"select\\\");\\r\\n                    $cell.css({\\r\\n                        \\\"padding\\\": \\\"4px\\\",\\r\\n                        \\\"width\\\": \\\"100%\\\",\\r\\n                        \\\"box-sizing\\\": \\\"border-box\\\",\\r\\n                        \\\"font-family\\\": \\\"\\\",\\r\\n                    })\\r\\n                    $cell.select2({\\r\\n                        placeholder: '',\\r\\n                        width: \\\"100%\\\",\\r\\n                        allowClear: true,\\r\\n                    });\\r\\n                    $cell.focus();\\r\\n                    $cell.val(cell.getValue()).trigger(\\\"change.select2\\\");\\r\\n                    $(cell.getElement())\\r\\n                        .find(\\\"select\\\")\\r\\n                        .on(\\\"change\\\", function () {\\r\\n                            cell.setValue($(this).val());\\r\\n                        });\\r\\n                    $myCell\\r\\n                        .find(\\\".select2-container--default\\\")\\r\\n                        .css(\\\"border\\\", \\\"0px solid blue\\\");\\r\\n                    $myCell\\r\\n                        .find(\\\".select2-selection--single\\\")\\r\\n                        .css(\\\"border\\\", \\\"0px solid blue\\\");\\r\\n                });\\r\\n                var $el = $(\\\"<select class='tabu' >\\\");\\r\\n                //let editable = (that.sel.id == cell.getRow().getData().id);\\r\\n                let editable = (that.sel.id == cell.getRow().getData().id || cell.getRow().getData().id == 0);\\r\\n                if (editable == false) {\\r\\n                    $el.attr('disabled', 'disabled');\\r\\n                } else {\\r\\n                }\\r\\n                formatterParams.forEach((el) => {\\r\\n                    let $option = $(\\\"<option>\\\").attr(\\\"value\\\", el.id).text(el.text);\\r\\n                    $el.append($option);\\r\\n                });\\r\\n                return $el[0];\\r\\n            };\\r\\n            var roweditCheck = function (cell) {\\r\\n                let row = cell.getRow();\\r\\n                let id = row.getIndex();\\r\\n                let $cell = row.getElement();\\r\\n                if (that.sel.id == cell.getRow().getData().id) {\\r\\n                    return true;\\r\\n                } else {\\r\\n                    if (id == 0) {\\r\\n                        return true;\\r\\n                    } else {\\r\\n                        return false;\\r\\n                    }\\r\\n\\r\\n                }\\r\\n            }\\r\\n            this.tabulator = new Tabulator(this.$refs.table, {\\r\\n\\r\\n                pagination: true, //enable pagination\\r\\n                paginationMode: \\\"remote\\\", //enable remote pagination\\r\\n                ajaxSorting: true,\\r\\n                ajaxURL: \\\"/api/NhatKy/GetPage\\\", //set url for ajax request\\r\\n                ajaxFiltering: true,\\r\\n                filterMode: \\\"remote\\\", //send filter data to the server instead of processing locally\\r\\n                sortMode: \\\"remote\\\",\\r\\n                ajaxParams: { token: \\\"ABC123\\\" }, //set any standard parameters to pass with the request\\r\\n                paginationSize: 2, //optional parameter to request a certain number of rows per page\\r\\n                paginationInitialPage: 1, //optional parameter to set the initial page to load    \\r\\n                paginationSizeSelector: [5, 10, 20, 30, 50],\\r\\n                height: $(window).innerHeight() - 400,//'200px',//$(window).innerHeight()\\r\\n                layout: \\\"fitData\\\",//layout:\\\"fitDataFill\\\",//layout:\\\"fitColumns\\\",\\r\\n                debugInvalidOptions: false,\\r\\n\\r\\n                ajaxRequesting: function (url, params) {\\r\\n                    that.msg = `${url} - ` + JSON.stringify(params);\\r\\n                },\\r\\n                ajaxResponse: function (url, params, response) {\\r\\n                    //alert(JSON.stringify(response));\\r\\n                    /*\\r\\n{\\\"last_page\\\":1,\\\"rowCount\\\":1,\\\"data\\\":[{\\\"Id\\\":1,\\\"Ngay\\\":\\\"2022-11-13T00:00:00\\\",\\\"NoiDung\\\":\\\"sfsfsfsfsf\\\"}]}                    \\r\\n*/\\r\\n                    that.rowCount = response.rowCount;\\r\\n                    // let data = [];\\r\\n                    // response.data.forEach(x => {\\r\\n                    //     data.push({\\r\\n                    //         id: x.Id,\\r\\n                    //         Name: x.Name\\r\\n                    //     })\\r\\n                    // })\\r\\n                    let ar = {};\\r\\n                    ar.last_page = response.last_page;\\r\\n                    ar.rowCount = response.rowCount;\\r\\n                    //ar.data = data;\\r\\n\\r\\n                    let data2 = [];\\r\\n                    response.data.forEach(obj => {\\r\\n                        let x = {};\\r\\n                        Object.keys(obj).forEach(key => {\\r\\n                            //console.log(key, obj[key]);\\r\\n                            let key2 = key;\\r\\n                            if (key2 == \\\"Id\\\") {\\r\\n                                key2 = \\\"id\\\"\\r\\n                            }\\r\\n                            x[key2] = obj[key];\\r\\n                        });\\r\\n                        data2.push(x);\\r\\n                    })\\r\\n                    ar.data = data2;\\r\\n                    return ar;//.data; //pass the data array into Tabulator\\r\\n                },\\r\\n\\r\\n                rowFormatter: function (row) {\\r\\n                    let chk = that.sel.id == row.getData().id;\\r\\n                },\\r\\n                index: \\\"id\\\",\\r\\n                //autoColumns:true,\\r\\n                columns: [\\r\\n                    {\\r\\n                        title: \\\"STT\\\",\\r\\n                        formatter: \\\"rownum\\\",\\r\\n                        headerHozAlign: \\\"center\\\",\\r\\n                        hozAlign: \\\"center\\\",\\r\\n                        vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n                    },\\r\\n                    {\\r\\n                        title: \\\"Cmd\\\",\\r\\n                        headerHozAlign: \\\"center\\\",\\r\\n                        hozAlign: \\\"center\\\",\\r\\n                        vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n                        headerSort: false,\\r\\n                        width: 100,\\r\\n                        formatter: cmdFormatter,\\r\\n                    },\\r\\n                    {\\r\\n                        title: \\\"Id\\\",\\r\\n                        field: \\\"id\\\",\\r\\n                        width: 50,\\r\\n                        vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n                        headerFilter: true,\\r\\n                        hozAlign: \\\"center\\\",\\r\\n                    },\\r\\n                    {\\r\\n                        title: \\\"Ngay\\\",\\r\\n                        field: \\\"Ngay\\\",\\r\\n                        width: 100,\\r\\n                        hozAlign: \\\"center\\\",\\r\\n                        headerFilter: true,\\r\\n                        formatter: datePickerFormatter,\\r\\n                        editable: roweditCheck,\\r\\n                    },\\r\\n                    {\\r\\n                        title: \\\"NoiDung\\\",\\r\\n                        field: \\\"NoiDung\\\",\\r\\n                        width: 320,\\r\\n                        vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n                        headerFilter: true,\\r\\n                        editor: \\\"input\\\",\\r\\n                        validator: [\\\"required\\\"], //\\\"required\\\"  \\r\\n                        editable: roweditCheck,//editCheck,\\r\\n                    },\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                    // {\\\"last_page\\\":1,\\\"rowCount\\\":1,\\\"data\\\":[{\\\"Id\\\":1,\\\"Ngay\\\":\\\"2022-11-13T00:00:00\\\",\\\"NoiDung\\\":\\\"sfsfsfsfsf\\\"}]}                    \\r\\n                    /*\\r\\n                                        {\\r\\n                                            title: \\\"Name\\\",\\r\\n                                            field: \\\"Name\\\",\\r\\n                                            width: 120,\\r\\n                                            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n                                            headerFilter: true,\\r\\n                                            editor: \\\"input\\\",\\r\\n                                            validator: [\\\"required\\\"], //\\\"required\\\"  \\r\\n                                            editable: roweditCheck,//editCheck,\\r\\n                                        },\\r\\n                                        {\\r\\n                                            title: \\\"DonGia\\\",\\r\\n                                            field: \\\"DonGia\\\",\\r\\n                                            width: 80,\\r\\n                                            vertAlign: \\\"middle\\\",//\\\"bottom\\\",\\r\\n                                            headerFilter: true,\\r\\n                                            hozAlign: \\\"right\\\",\\r\\n                                            editor: \\\"input\\\",\\r\\n                                            editable: roweditCheck,//editCheck,\\r\\n                                            formatter: \\\"money\\\",\\r\\n                                            formatterParams: {\\r\\n                                                decimal: \\\",\\\",\\r\\n                                                thousand: \\\".\\\",\\r\\n                                                symbol: \\\"\\\", //\\\"£\\\",\\r\\n                                                symbolAfter: \\\"p\\\",\\r\\n                                                precision: false,\\r\\n                                            },\\r\\n                                        },\\r\\n                                        {\\r\\n                                            title: \\\"Ngay\\\",\\r\\n                                            field: \\\"Ngay\\\",\\r\\n                                            width: 100,\\r\\n                                            hozAlign: \\\"center\\\",\\r\\n                                            headerFilter: true,\\r\\n                                            formatter: datePickerFormatter,\\r\\n                                            editable: roweditCheck,\\r\\n                                        },\\r\\n                                        */\\r\\n\\r\\n                ], //define table columns\\r\\n            });\\r\\n            this.tabulator.on(\\\"dataLoaded\\\", function (data) {\\r\\n                that.onLoad();\\r\\n            });\\r\\n            this.tabulator.on(\\\"pageLoaded\\\", function (pageno) {\\r\\n            });\\r\\n            this.tabulator.on(\\\"dataChanged\\\", function (data) {\\r\\n            });\\r\\n            this.tabulator.on(\\\"rowClick\\\", function (e, row) {\\r\\n            });\\r\\n            this.tabulator.on(\\\"rowSelectionChanged\\\", function (data, rows) {\\r\\n            });\\r\\n            this.tabulator.on(\\\"rowSelected\\\", function (row) {\\r\\n                let index = row.getIndex();\\r\\n                //that.msg = index;\\r\\n                //console.log('rowSelected');\\r\\n            });\\r\\n            this.tabulator.on(\\\"cellEditing\\\", function (cell) {\\r\\n                let row = cell.getRow();\\r\\n                let data = row.getData();\\r\\n                let index = row.getIndex();\\r\\n            });\\r\\n            this.tabulator.on(\\\"cellEditCancelled\\\", function (cell) {\\r\\n            });\\r\\n            this.tabulator.on(\\\"cellEdited\\\", function (cell) {\\r\\n                if (cell.getField() != \\\"solg\\\") {\\r\\n                    return;\\r\\n                }\\r\\n                let row = cell.getRow();\\r\\n                let data = row.getData();\\r\\n                let solg = row.getCell(\\\"solg\\\").getValue();\\r\\n                let tien = solg * 1000;\\r\\n                let id = row.getIndex();\\r\\n                row.getCell(\\\"tien\\\").setValue(tien);\\r\\n            });\\r\\n            this.tabulator.on(\\\"validationFailed\\\", function (cell, value, validators) {\\r\\n                let field = cell.getField();\\r\\n            });\\r\\n        },\\r\\n        ReLoadData() {\\r\\n            this.tabulatorClear();\\r\\n            let r = JSON.parse(JSON.stringify(this.rec));\\r\\n            r.id = this.count++;\\r\\n            this.tableData.push(r);\\r\\n            this.count++;\\r\\n            this.setPage(1);\\r\\n        },\\r\\n        onLoad() {\\r\\n            // for (var i = 0; i < 3; i++) {\\r\\n            //     let r = JSON.parse(JSON.stringify(this.rec));\\r\\n            //     r.id = this.count;\\r\\n            //     r.tien = r.solg * 1000;\\r\\n            //     this.tableData.push(r);\\r\\n            //     this.count++;\\r\\n            // }\\r\\n            // this.setPage(1);\\r\\n        },\\r\\n        ChangeAct() {\\r\\n            let act = (this.r.act == 'true') ? true : false;\\r\\n            this.r.act = act;\\r\\n        },\\r\\n        rowValidate(row) {\\r\\n            let kq = true;\\r\\n            var cells = row.getCells();\\r\\n            for (var i = 0; i < cells.length; i++) {\\r\\n                if (cells[i].isValid() != true) {\\r\\n                    kq = false;\\r\\n                }\\r\\n            }\\r\\n            return kq;\\r\\n        },\\r\\n        onSave(e) {\\r\\n            e.preventDefault();\\r\\n            let row = e.data;\\r\\n            var cells = row.getCells();\\r\\n            let id = row.getIndex();\\r\\n            let index = this.tableData.findIndex(x => x.id == id);\\r\\n            if (\\r\\n                this.rowValidate(e.data) == false\\r\\n                //|| row.getData().tpl == \\\"\\\"\\r\\n                //|| row.getData().monid == null\\r\\n            ) {\\r\\n                this.toast(\\\"không hợp lệ!!!\\\")\\r\\n                return;\\r\\n            }\\r\\n            let r = JSON.parse(JSON.stringify(row.getData()));\\r\\n            r.Ngay = moment(r.Ngay).format(\\\"YYYY-MM-DD HH:mm:ss\\\");\\r\\n            this.Save(r).then(res => {\\r\\n                if (r.id == 0) {\\r\\n                    let new_lastpage = this.getLastPage(this.rowCount + 1);\\r\\n                    this.onCancelAdd(e);\\r\\n                    this.setPage(new_lastpage);\\r\\n                } else {\\r\\n                    this.tabulator.deselectRow(this.sel.id);\\r\\n                    this.sel = {};\\r\\n                    //this.tabulator.redraw(true);\\r\\n                    this.setPage(this.getPage());\\r\\n                }\\r\\n            })\\r\\n\\r\\n            /*\\r\\n            if (r.id == 0) {\\r\\n                let new_lastpage = this.getLastPage(this.rowCount + 1);\\r\\n                this.Save(r).then(res => {\\r\\n                    //alert(JSON.stringify(res));\\r\\n\\r\\n                    this.onCancelAdd(e);\\r\\n                    this.setPage(new_lastpage);\\r\\n                })\\r\\n            } else {\\r\\n                this.Save(r).then(res => {\\r\\n                    this.tabulator.deselectRow(this.sel.id);\\r\\n                    this.sel = {};\\r\\n                    this.tabulator.redraw(true);\\r\\n                })\\r\\n            }\\r\\n            */\\r\\n\\r\\n        },\\r\\n        onSaveModal() {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(this.r));\\r\\n                if (r.id == 0) {\\r\\n                    r.id = this.count;\\r\\n                    this.tabulatorAdd(r);\\r\\n                    this.count++;\\r\\n                    this.setPage(1);\\r\\n                } else {\\r\\n                    this.tabulatorUpdate(r);\\r\\n                }\\r\\n                this.hideModal();\\r\\n            });\\r\\n        },\\r\\n        onAdd() {\\r\\n            this.cmd = \\\"add\\\";\\r\\n            let r = JSON.parse(JSON.stringify(this.rec));\\r\\n            this.tabulator.addRow(r, true, 0);\\r\\n            this.tabulator.selectRow(0);\\r\\n            $(\\\".tabulator-footer\\\").hide();\\r\\n            this.tabulator.redraw(true)\\r\\n        },\\r\\n        onCancelAdd(e) {\\r\\n            e.preventDefault();\\r\\n            let row = e.data;\\r\\n            var cells = row.getCells();\\r\\n            let id = row.getIndex();\\r\\n\\r\\n            this.cmd = \\\"\\\";\\r\\n            row.delete();\\r\\n            $(\\\".tabulator-footer\\\").show();\\r\\n            this.tabulator.redraw(true)\\r\\n        },\\r\\n        onCancel(e) {\\r\\n            e.preventDefault();\\r\\n            let row = e.data;\\r\\n            var cells = row.getCells();\\r\\n            let id = row.getIndex();\\r\\n            let index = this.tableData.findIndex(x => x.id == id);\\r\\n            let $row = $(row.getElement());\\r\\n            let r = JSON.parse(JSON.stringify(this.sel));\\r\\n\\r\\n            this.tabulatorUpdate(r);\\r\\n            this.sel = {};\\r\\n            this.tabulator.deselectRow(this.sel.id);\\r\\n            $(\\\".tabulator-footer\\\").show();\\r\\n            this.tabulator.redraw(true);\\r\\n        },\\r\\n        onEdit(e) {\\r\\n            e.preventDefault();\\r\\n            let row = e.data;\\r\\n            var cells = row.getCells();\\r\\n            let id = row.getIndex();\\r\\n            let index = this.tableData.findIndex(x => x.id == id);\\r\\n            this.sel = JSON.parse(JSON.stringify(row.getData()));\\r\\n            let $row = $(row.getElement());\\r\\n            this.tabulator.selectRow(id);\\r\\n            $(\\\".tabulator-footer\\\").hide();\\r\\n            this.tabulator.redraw(true)\\r\\n        },\\r\\n        onDel(e) {\\r\\n            e.preventDefault();\\r\\n            let row = e.data;\\r\\n            let id = row.getIndex();\\r\\n            let new_lastpage = this.getLastPage(this.rowCount - 1);\\r\\n            this.Del(id).then(res => {\\r\\n                if (res.data.kq == \\\"ok\\\") {//del ok\\r\\n                    row.delete();\\r\\n                    this.setPage(new_lastpage);\\r\\n                }\\r\\n                this.toast(res.data.msg);\\r\\n            })\\r\\n        },\\r\\n        getPageMax() {\\r\\n            return this.tabulator.getPageMax();\\r\\n        },\\r\\n        getLastPage(count) {\\r\\n            let pageSize = this.tabulator.getPageSize();\\r\\n            let du = count % pageSize;\\r\\n            return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\\r\\n        },\\r\\n        getPageSize() {\\r\\n            return this.tabulator.getPageSize();\\r\\n        },\\r\\n        getPage() {\\r\\n            return this.tabulator.getPage();\\r\\n        },\\r\\n        setPage(_page) {\\r\\n            this.tabulator.setPage(_page);\\r\\n        },\\r\\n        getData() {\\r\\n            return this.tabulator.getData();\\r\\n        },\\r\\n        tabulatorLoadData(ar) {\\r\\n            ar.forEach(x => {\\r\\n                this.tableData.push(x);\\r\\n            })\\r\\n        },\\r\\n        tabulatorClear() {\\r\\n            let i = 0;\\r\\n            while (i < this.tableData.length) {\\r\\n                this.tableData.splice(i, 1);\\r\\n            }\\r\\n        },\\r\\n        tabulatorAdd(r) {\\r\\n            this.tableData.unshift(r);\\r\\n        },\\r\\n        tabulatorDel(id) {\\r\\n            let index = this.tableData.findIndex(x => x.id == id);\\r\\n            this.tableData.splice(index, 1);\\r\\n        },\\r\\n        tabulatorUpdate(r) {\\r\\n            let index = this.tableData.findIndex(x => x.id == r.id);\\r\\n            this.tableData.splice(index, 1, r);\\r\\n        },\\r\\n        tabulatorGetRow(id) {\\r\\n            //let index=this.tabulator.getData().findIndex(x=>x.id==id);\\r\\n            //let r=this.tabulator.getData()[index];\\r\\n            //return r;\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n        showModal() {\\r\\n            this.$refs['my-modal2'].show()\\r\\n        },\\r\\n        hideModal() {\\r\\n            this.$refs['my-modal2'].hide()\\r\\n        },\\r\\n        async Save(r) {\\r\\n            return await axios.post(`/api/NhatKy/Save`, r).catch((err) => {\\r\\n                console.log(err);\\r\\n            });\\r\\n        },\\r\\n        async Del(id) {\\r\\n            return await axios\\r\\n                .get(`/api/NhatKy/Delete?id=${id}`)\\r\\n                .catch((err) => {\\r\\n                    console.log(err);\\r\\n                });\\r\\n        },\\r\\n        async getById(id) {\\r\\n            return await axios.get(`/api/NhatKy/GetById?id=${id}`).catch((err) => {\\r\\n                console.log(err);\\r\\n            });\\r\\n        },\\r\\n\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n<style lang=\\\"scss\\\">\\r\\n.select2-container--default .select2-selection--single .select2-selection__arrow {\\r\\n    height: 15px;\\r\\n    position: absolute;\\r\\n    top: 4px;\\r\\n    right: 1px;\\r\\n    width: 20px;\\r\\n}\\r\\n\\r\\n.select2-container--default .select2-selection--single .select2-selection__rendered {\\r\\n    color: #444;\\r\\n    line-height: 24px;\\r\\n}\\r\\n\\r\\n.select2-container .select2-selection--single {\\r\\n    box-sizing: border-box;\\r\\n    cursor: pointer;\\r\\n    display: block;\\r\\n    height: 24px;\\r\\n    -moz-user-select: none;\\r\\n    -ms-user-select: none;\\r\\n    user-select: none;\\r\\n    -webkit-user-select: none;\\r\\n}\\r\\n\\r\\n.xyz {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.danger,\\r\\n.danger .dropdown-toggle,\\r\\n.danger .selected-tag {\\r\\n    background-color: aqua;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.ko-hop-le {\\r\\n    border-radius: 4px;\\r\\n    background-color: aqua;\\r\\n}\\r\\n\\r\\n$textSize: 8.5px; //14px !default; //table text size\\r\\n@import \\\"~tabulator-tables/src/scss/tabulator.scss\\\";\\r\\n\\r\\n.tabulator-col-title {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.tabulator .tabulator-footer .tabulator-page.active {\\r\\n    background-color: greenyellow !important;\\r\\n    color: blue !important;\\r\\n}\\r\\n\\r\\n.tabulator-row .tabulator-cell {\\r\\n    padding: 3px 4px;\\r\\n}\\r\\n\\r\\n.b-calendar .b-calendar-grid-body .col[data-date] .btn {\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    font-size: 10px;\\r\\n    line-height: 1;\\r\\n    margin: 0px auto;\\r\\n    padding: 6px 0;\\r\\n}\\r\\n\\r\\n.custom-control.custom-checkbox {\\r\\n    position: relative;\\r\\n    z-index: 1;\\r\\n    display: block;\\r\\n    min-height: 0.9rem;\\r\\n    padding-left: 1.5rem;\\r\\n    padding-top: 0.3rem;\\r\\n}\\r\\n\\r\\n.col-4 input {\\r\\n    margin-bottom: 1px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n    margin-bottom: 0.3rem;\\r\\n}\\r\\n</style>\\r\\n  \\r\\n  \";","var MyLoad = {\r\n    cong(a, b) {\r\n        return a + b;\r\n    },\r\n    nhan(a, b) {\r\n        return a * b;\r\n    },\r\n    list() {\r\n        return [\r\n            { id: 1, ten: \"thuc 101\" },\r\n            { id: 2, ten: \"thuc 102\" },\r\n            { id: 3, ten: \"thuc 103\" },\r\n        ]\r\n    },\r\n    loadCss(url) {\r\n        return new Promise((resolve, reject) => {\r\n            let link = document.createElement('link');\r\n            link.type = 'text/css';\r\n            link.rel = 'stylesheet';\r\n            link.onload = resolve;\r\n            link.href = url;\r\n            let headScript = document.querySelector('script');\r\n            headScript.parentNode.insertBefore(link, headScript);\r\n        });\r\n    },\r\n    loadScript(id, url) {\r\n        return new Promise(function (resolve, reject) {\r\n            var script = document.createElement(\"script\");\r\n            script.onload = resolve;\r\n            script.onerror = reject;\r\n            script.src = url;\r\n            script.type = \"text/javascript\";\r\n            script.setAttribute('id', id);\r\n            document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n        });\r\n    },\r\n    loadMyScript(that) {\r\n        if (!document.getElementById(\"myScript\")) {\r\n            this.loadScript(\"myScript\", \"js/jquery.min.js\").then(() => {\r\n                this.loadScript(\"\", \"js/bootstrap.js\").then(() => {\r\n                    this.loadScript(\"\", \"js/select2.min.js\").then(() => {\r\n                        this.loadScript(\"\", \"js/bootstrap-datepicker.js\").then(() => {\r\n                            //this.loadScript(\"\", \"js/moment.js\").then(()=>{\r\n                                this.loadCss(\"css/select2.min.css\").then(() => {\r\n                                    this.loadCss(\"css/bootstrap-datepicker.css\").then(() => {\r\n                                        that.onReady();\r\n                                    });\r\n                                });\r\n                            //});\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        } else {\r\n            that.onReady();\r\n        }\r\n    },\r\n    /*\r\n\r\n        \r\n\r\n    */\r\n   /*\r\n    datePickerFormatter(cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n            let $cell = $(cell.getElement()).find(\"input\");\r\n            $cell.width(\"100%\");\r\n            $cell.height(\"100%\");\r\n            $cell.css(\"border\", \"0px solid blue\");\r\n            $cell.css(\"text-align\", \"center\");\r\n            $cell.prop(\"readonly\", true);\r\n            $cell.datepicker({\r\n                format: \"dd/mm/yyyy\",\r\n                //todayBtn: true,\r\n                autoclose: true,\r\n                todayHighlight: true,\r\n            });\r\n            let value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\r\n                \"DD/MM/YYYY\"\r\n            );\r\n            $cell.datepicker(\"setDate\", value);\r\n\r\n            $cell.datepicker().on(\"changeDate\", function () {\r\n                let d = $(this).datepicker(\"getDate\");\r\n                cell.setValue(moment(d).format(\"DD/MM/YYYY\"));\r\n            });\r\n        });\r\n        var $el = $(\"<input />\");\r\n        return $el[0];\r\n    },\r\n    select2Formatter(cell, formatterParams, onRendered) {\r\n        onRendered(function () {\r\n            let $myCell = $(cell.getElement());\r\n            let $cell = $(cell.getElement()).find(\"select\");\r\n            $cell.select2({\r\n                //placeholder: '-- // --',\r\n                width: \"100%\",\r\n                //allowClear: true,\r\n            });\r\n            $cell.focus();\r\n            $cell.val(cell.getValue()).trigger(\"change.select2\");\r\n            $(cell.getElement())\r\n                .find(\"select\")\r\n                .on(\"change\", function () {\r\n                    cell.setValue($(this).val());\r\n                });\r\n            $myCell\r\n                .find(\".select2-container--default\")\r\n                .css(\"border\", \"0px solid blue\");\r\n            $myCell\r\n                .find(\".select2-selection--single\")\r\n                .css(\"border\", \"0px solid blue\");\r\n        });\r\n        var $el = $(\"<select class='tabu' >\");\r\n        formatterParams.forEach((el) => {\r\n            let $option = $(\"<option>\").val(el.id).text(el.text);\r\n            $el.append($option);\r\n        });\r\n        return $el[0];\r\n    },\r\n    */\r\n}\r\nexport default MyLoad\r\n//import MyLoader from \"@/func/MyLoad.js\";\r\n\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","msg","rowCount","staticClass","cmd","Object","keys","sel","length","on","onAdd","ReLoadData","ref","$event","stopPropagation","preventDefault","onSaveModal","apply","arguments","directives","name","rawName","value","r","expression","domProps","target","composing","$set","class","errors","has","year","month","day","model","callback","$$v","ChangeAct","danger","option","id","tps","hideModal","staticRenderFns","Vue","classes","data","tabulator","tableData","count","ten","ngay","rec","Ngay","NoiDung","label","mons","mounted","MyLoader","methods","onReady","loadTabulator","onRendered","$","text","$div","$btnSave","$btnCancel","$btnEdit","$btnDel","$btnDoAdd","$btnCancelAdd","$cell","format","todayBtn","autoclose","todayHighlight","cell","pagination","paginationMode","ajaxSorting","ajaxURL","ajaxFiltering","filterMode","sortMode","ajaxParams","token","paginationSize","paginationInitialPage","paginationSizeSelector","height","layout","debugInvalidOptions","ajaxRequesting","that","ajaxResponse","ar","response","key2","x","data2","rowFormatter","index","columns","title","formatter","headerHozAlign","hozAlign","vertAlign","headerSort","width","field","headerFilter","editable","editor","validator","row","onLoad","rowValidate","kq","onSave","e","onCancelAdd","onCancel","onEdit","onDel","getPageMax","getLastPage","getPageSize","getPage","setPage","getData","tabulatorLoadData","tabulatorClear","tabulatorAdd","tabulatorDel","tabulatorUpdate","tabulatorGetRow","toast","variant","solid","showModal","console","catch","err","component","MyLoad","cong","a","b","nhan","list","loadCss","url","Promise","resolve","reject","link","document","createElement","type","rel","onload","href","headScript","querySelector","parentNode","insertBefore","loadScript","script","onerror","src","setAttribute","getElementsByTagName","appendChild","loadMyScript","getElementById","then"],"sourceRoot":""}