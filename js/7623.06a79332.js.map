{"version":3,"file":"js/7623.06a79332.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/BTable4/BTableSimple.vue?14e2","webpack://vue_start_1/src/views/BTable4/BTableSimple.vue","webpack://vue_start_1/./src/views/BTable4/BTableSimple.vue?a048","webpack://vue_start_1/./src/views/BTable4/BTableSimple.vue?e2d3","webpack://vue_start_1/./src/views/BTable4/BTableSimple.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./BTableSimple.vue').default}}),_c('h5',[_vm._v(\"This is BTable Simple\")]),_c('div',[_vm._v(_vm._s(_vm.sel))]),_c('button',{on:{\"click\":_vm.OnAdd}},[_vm._v(\"Add\")]),_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSave.apply(null, arguments)}}},[_c('b-table',{ref:\"mytable\",attrs:{\"small\":\"\",\"items\":_vm.items,\"fields\":_vm.fields},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\nvar value = ref.value;\nvar item = ref.item;\nvar key = ref.field.key;\nreturn [(_vm.sel[_vm.pri] != item[_vm.pri])?[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),(key == 'Ten')?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e()]:_vm._e()]:_vm._e(),((_vm.sel[_vm.pri] == item[_vm.pri] || item[_vm.pri] == 0))?[(key == _vm.pri)?[_c('span',[_vm._v(_vm._s(value))])]:_vm._e(),(key == 'Ten')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e()]:_vm._e()]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnDel(row.item)}}},[_c('b-icon-trash')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}}])})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <raw-loader :mytxt=\"require('!raw-loader!./BTableSimple.vue').default\"></raw-loader>\r\n        <h5>This is BTable Simple</h5>\r\n        <div>{{ sel }}</div>\r\n        <button @click=\"OnAdd\">Add</button>\r\n        <form @submit.stop.prevent=\"onSave\">\r\n            <b-table ref=\"mytable\" small :items=\"items\" :fields=\"fields\">\r\n                <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n\r\n                    <template v-if=\"sel[pri] != item[pri]\">\r\n                        <template v-if=\"item[pri] != 0\">\r\n                            <template v-if=\"key == pri\">\r\n                                {{ value }}\r\n                            </template>\r\n                            <template v-if=\"key == 'Ten'\">\r\n                                {{ value }}\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                    <template v-if=\"(sel[pri] == item[pri] || item[pri] == 0)\">\r\n                        <template v-if=\"key == pri\">\r\n                            <span>{{ value }}</span>\r\n                        </template>\r\n                        <template v-if=\"key == 'Ten'\">\r\n                            <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\"\r\n                                placeholder=\"\" :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                            </b-form-input>\r\n                        </template>\r\n                    </template>\r\n\r\n\r\n                </template>\r\n                <template #cell(cmd)=\"row\">\r\n                    <template v-if=\"row.item[pri] == 0\">\r\n                        <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"OnSave(row.item)\">\r\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                            <b-icon-file-x></b-icon-file-x>\r\n                        </b-button>\r\n                    </template>\r\n\r\n                    <template v-else>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] != row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnEdit(row.item)\">\r\n                            <b-icon-pencil-square></b-icon-pencil-square>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] != row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnDel(row.item)\">\r\n                            <b-icon-trash></b-icon-trash>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnSave(row.item)\">\r\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnCancel(row.item)\">\r\n                            <b-icon-file-x></b-icon-file-x>\r\n                        </b-button>\r\n                    </template>\r\n                </template>\r\n            </b-table>\r\n        </form>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\n\r\n\r\nexport default {\r\n    props: [\"ds1\"],\r\n    components: {\r\n    },\r\n    mounted() {\r\n    },\r\n    data() {\r\n        return {\r\n            pri: \"Id\",\r\n            sel: {},\r\n            items: [\r\n                { Id: 1, Ten: \"thuc 101\" },\r\n                { Id: 2, Ten: \"thuc 102\" },\r\n                { Id: 3, Ten: \"thuc 103\" },\r\n                { Id: 4, Ten: \"thuc 104\" },\r\n            ],\r\n            fields: [\r\n                { key: 'Id', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"8%\" } },\r\n                //{ key: 'ClaimType', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \"80%\" } },\r\n                { key: 'Ten', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \"60%\" } },\r\n                { key: 'Cmd', sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \"12%\" } },\r\n            ]\r\n        }\r\n    },\r\n    mounted(){\r\n    },\r\n    methods: {\r\n        OnAdd() {\r\n            let r = {\r\n                Id: 0,\r\n                Ten: 'Thức',\r\n            }\r\n            this.items.unshift(r);\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] == 0) {\r\n                let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\r\n                this.items.splice(index, 1);\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            } else {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            }\r\n        },\r\n        OnEdit(item) {\r\n            this.sel = JSON.parse(JSON.stringify(item));\r\n            //alert(JSON.stringify(item));\r\n        },\r\n        OnDel(item) {\r\n            alert(JSON.stringify(item));\r\n        },\r\n        OnSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    alert(`Add r ${JSON.stringify(r)}`);\r\n                    this.$refs.mytable.refresh();\r\n                } else {\r\n                    alert(`Update r ${JSON.stringify(r)}`);\r\n                    this.sel = {};\r\n                }\r\n            });\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n    }\r\n}\r\n</script>\r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BTableSimple.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BTableSimple.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BTableSimple.vue?vue&type=template&id=635dad3b&\"\nimport script from \"./BTableSimple.vue?vue&type=script&lang=js&\"\nexport * from \"./BTableSimple.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div>\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./BTableSimple.vue').default\\\"></raw-loader>\\r\\n        <h5>This is BTable Simple</h5>\\r\\n        <div>{{ sel }}</div>\\r\\n        <button @click=\\\"OnAdd\\\">Add</button>\\r\\n        <form @submit.stop.prevent=\\\"onSave\\\">\\r\\n            <b-table ref=\\\"mytable\\\" small :items=\\\"items\\\" :fields=\\\"fields\\\">\\r\\n                <template v-slot:cell()=\\\"{ value, item, field: { key } }\\\">\\r\\n\\r\\n                    <template v-if=\\\"sel[pri] != item[pri]\\\">\\r\\n                        <template v-if=\\\"item[pri] != 0\\\">\\r\\n                            <template v-if=\\\"key == pri\\\">\\r\\n                                {{ value }}\\r\\n                            </template>\\r\\n                            <template v-if=\\\"key == 'Ten'\\\">\\r\\n                                {{ value }}\\r\\n                            </template>\\r\\n                        </template>\\r\\n                    </template>\\r\\n                    <template v-if=\\\"(sel[pri] == item[pri] || item[pri] == 0)\\\">\\r\\n                        <template v-if=\\\"key == pri\\\">\\r\\n                            <span>{{ value }}</span>\\r\\n                        </template>\\r\\n                        <template v-if=\\\"key == 'Ten'\\\">\\r\\n                            <b-form-input autocomplete=\\\"off\\\" v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\"\\r\\n                                placeholder=\\\"\\\" :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                            </b-form-input>\\r\\n                        </template>\\r\\n                    </template>\\r\\n\\r\\n\\r\\n                </template>\\r\\n                <template #cell(cmd)=\\\"row\\\">\\r\\n                    <template v-if=\\\"row.item[pri] == 0\\\">\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnSave(row.item)\\\">\\r\\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                            <b-icon-file-x></b-icon-file-x>\\r\\n                        </b-button>\\r\\n                    </template>\\r\\n\\r\\n                    <template v-else>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnEdit(row.item)\\\">\\r\\n                            <b-icon-pencil-square></b-icon-pencil-square>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnDel(row.item)\\\">\\r\\n                            <b-icon-trash></b-icon-trash>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnSave(row.item)\\\">\\r\\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnCancel(row.item)\\\">\\r\\n                            <b-icon-file-x></b-icon-file-x>\\r\\n                        </b-button>\\r\\n                    </template>\\r\\n                </template>\\r\\n            </b-table>\\r\\n        </form>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n});\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\n\\r\\n\\r\\nexport default {\\r\\n    props: [\\\"ds1\\\"],\\r\\n    components: {\\r\\n    },\\r\\n    mounted() {\\r\\n    },\\r\\n    data() {\\r\\n        return {\\r\\n            pri: \\\"Id\\\",\\r\\n            sel: {},\\r\\n            items: [\\r\\n                { Id: 1, Ten: \\\"thuc 101\\\" },\\r\\n                { Id: 2, Ten: \\\"thuc 102\\\" },\\r\\n                { Id: 3, Ten: \\\"thuc 103\\\" },\\r\\n                { Id: 4, Ten: \\\"thuc 104\\\" },\\r\\n            ],\\r\\n            fields: [\\r\\n                { key: 'Id', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"8%\\\" } },\\r\\n                //{ key: 'ClaimType', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \\\"80%\\\" } },\\r\\n                { key: 'Ten', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \\\"60%\\\" } },\\r\\n                { key: 'Cmd', sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \\\"12%\\\" } },\\r\\n            ]\\r\\n        }\\r\\n    },\\r\\n    mounted(){\\r\\n    },\\r\\n    methods: {\\r\\n        OnAdd() {\\r\\n            let r = {\\r\\n                Id: 0,\\r\\n                Ten: 'Thức',\\r\\n            }\\r\\n            this.items.unshift(r);\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        doCancel(item) {\\r\\n            for (let key in item) {\\r\\n                if (item[key] != this.sel[key]) {\\r\\n                    item[key] = this.sel[key]\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        OnCancel(item) {\\r\\n            if (item[this.pri] == 0) {\\r\\n                let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\\r\\n                this.items.splice(index, 1);\\r\\n                this.adding = false;\\r\\n                this.$refs.mytable.refresh();\\r\\n            } else {\\r\\n                this.doCancel(item);\\r\\n                this.sel = {};\\r\\n            }\\r\\n        },\\r\\n        OnEdit(item) {\\r\\n            this.sel = JSON.parse(JSON.stringify(item));\\r\\n            //alert(JSON.stringify(item));\\r\\n        },\\r\\n        OnDel(item) {\\r\\n            alert(JSON.stringify(item));\\r\\n        },\\r\\n        OnSave(item) {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(item));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    alert(`Add r ${JSON.stringify(r)}`);\\r\\n                    this.$refs.mytable.refresh();\\r\\n                } else {\\r\\n                    alert(`Update r ${JSON.stringify(r)}`);\\r\\n                    this.sel = {};\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n  \";"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","sel","on","OnAdd","$event","stopPropagation","preventDefault","onSave","apply","arguments","ref","items","fields","scopedSlots","_u","key","fn","value","item","field","pri","_e","directives","name","rawName","expression","class","errors","has","model","callback","$$v","$set","row","staticClass","OnSave","OnCancel","OnEdit","OnDel","staticRenderFns","Vue","classes","fieldsBagName","props","components","mounted","data","Id","Ten","sortable","thClass","tdClass","thStyle","width","methods","doCancel","alert","toast","title","variant","solid","component"],"sourceRoot":""}