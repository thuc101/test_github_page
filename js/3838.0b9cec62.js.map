{"version":3,"file":"js/3838.0b9cec62.js","mappings":"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","sources":["webpack://vue_start_1/./src/views/LopHoc2/HocSinhTblEditNoPaging.vue?7c43","webpack://vue_start_1/src/views/LopHoc2/HocSinhTblEditNoPaging.vue","webpack://vue_start_1/./src/views/LopHoc2/HocSinhTblEditNoPaging.vue?443e","webpack://vue_start_1/./src/views/LopHoc2/HocSinhTblEditNoPaging.vue?df7a","webpack://vue_start_1/./src/views/LopHoc2/HocSinhTblEditNoPaging.vue","webpack://vue_start_1/./src/TumLum.js","webpack://vue_start_1/./src/fetchClient.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./HocSinhTblEditNoPaging.vue').default}}),_c('h5',[_vm._v(\"This is BTable Simple\")]),_c('div',[_vm._v(_vm._s(_vm.sel))]),_c('button',{on:{\"click\":_vm.OnAdd}},[_vm._v(\"Add\")]),_c('form',{on:{\"submit\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onSave.apply(null, arguments)}}},[_c('b-table',{ref:\"mytable\",attrs:{\"small\":\"\",\"items\":_vm.myProvider,\"fields\":_vm.fields},scopedSlots:_vm._u([{key:\"cell()\",fn:function(ref){\nvar value = ref.value;\nvar item = ref.item;\nvar key = ref.field.key;\nreturn [(_vm.sel[_vm.pri] != item[_vm.pri])?[(item[_vm.pri] != 0)?[(key == _vm.pri)?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),(key == 'TenHocSinh')?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),(key == 'NamSinh')?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e(),(key == 'LopHocId')?[_vm._v(\" \"+_vm._s(value)+\" \")]:_vm._e()]:_vm._e()]:_vm._e(),((_vm.sel[_vm.pri] == item[_vm.pri] || item[_vm.pri] == 0))?[(key == _vm.pri)?[_c('span',[_vm._v(_vm._s(value))])]:_vm._e(),(key == 'TenHocSinh')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e(),(key == 'NamSinh')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e(),(key == 'LopHocId')?[_c('b-form-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('required'),expression:\"'required'\"}],class:{ 'ko-hop-le': _vm.errors.has(key) },attrs:{\"autocomplete\":\"off\",\"name\":key,\"placeholder\":\"\"},model:{value:(item[key]),callback:function ($$v) {_vm.$set(item, key, $$v)},expression:\"item[key]\"}})]:_vm._e()]:_vm._e()]}},{key:\"cell(cmd)\",fn:function(row){return [(row.item[_vm.pri] == 0)?[_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1)]:[(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnEdit(row.item)}}},[_c('b-icon-pencil-square')],1):_vm._e(),(_vm.sel[_vm.pri] != row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnDel(row.item)}}},[_c('b-icon-trash')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnSave(row.item)}}},[_c('b-icon-hand-thumbs-up')],1):_vm._e(),(_vm.sel[_vm.pri] == row.item[_vm.pri])?_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":\"outline\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.OnCancel(row.item)}}},[_c('b-icon-file-x')],1):_vm._e()]]}}])})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <raw-loader :mytxt=\"require('!raw-loader!./HocSinhTblEditNoPaging.vue').default\"></raw-loader>\r\n        <h5>This is BTable Simple</h5>\r\n        <div>{{ sel }}</div>\r\n        <button @click=\"OnAdd\">Add</button>\r\n        <form @submit.stop.prevent=\"onSave\">\r\n            <b-table ref=\"mytable\" small :items=\"myProvider\" :fields=\"fields\">\r\n                <template v-slot:cell()=\"{ value, item, field: { key } }\">\r\n\r\n                    <template v-if=\"sel[pri] != item[pri]\">\r\n                        <template v-if=\"item[pri] != 0\">\r\n                            <template v-if=\"key == pri\">\r\n                                {{ value }}\r\n                            </template>\r\n                            <template v-if=\"key == 'TenHocSinh'\">\r\n                                {{ value }}\r\n                            </template>\r\n                            <template v-if=\"key == 'NamSinh'\">\r\n                                {{ value }}\r\n                            </template>\r\n                            <template v-if=\"key == 'LopHocId'\">\r\n                                {{ value }}\r\n                            </template>\r\n\r\n\r\n                        </template>\r\n                    </template>\r\n                    <template v-if=\"(sel[pri] == item[pri] || item[pri] == 0)\">\r\n                        <template v-if=\"key == pri\">\r\n                            <span>{{ value }}</span>\r\n                        </template>\r\n                        <template v-if=\"key == 'TenHocSinh'\">\r\n                            <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\"\r\n                                placeholder=\"\" :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                            </b-form-input>\r\n                        </template>\r\n                        <template v-if=\"key == 'NamSinh'\">\r\n                            <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\"\r\n                                placeholder=\"\" :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                            </b-form-input>\r\n                        </template>\r\n                        <template v-if=\"key == 'LopHocId'\">\r\n                            <b-form-input autocomplete=\"off\" v-model=\"item[key]\" :name=\"key\" v-validate=\"'required'\"\r\n                                placeholder=\"\" :class=\"{ 'ko-hop-le': errors.has(key) }\">\r\n                            </b-form-input>\r\n                        </template>\r\n                    </template>\r\n                </template>\r\n                <template #cell(cmd)=\"row\">\r\n                    <template v-if=\"row.item[pri] == 0\">\r\n                        <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"OnSave(row.item)\">\r\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" size=\"sm\" @click=\"OnCancel(row.item)\">\r\n                            <b-icon-file-x></b-icon-file-x>\r\n                        </b-button>\r\n                    </template>\r\n\r\n                    <template v-else>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] != row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnEdit(row.item)\">\r\n                            <b-icon-pencil-square></b-icon-pencil-square>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] != row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnDel(row.item)\">\r\n                            <b-icon-trash></b-icon-trash>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnSave(row.item)\">\r\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\r\n                        </b-button>\r\n                        <b-button variant=\"outline\" class=\"mr-1\" v-if=\"sel[pri] == row.item[pri]\" size=\"sm\"\r\n                            @click=\"OnCancel(row.item)\">\r\n                            <b-icon-file-x></b-icon-file-x>\r\n                        </b-button>\r\n                    </template>\r\n                </template>\r\n            </b-table>\r\n        </form>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport VeeValidate from \"vee-validate\";\r\nimport Vue from \"vue\";\r\nVue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: 'veeFields'\r\n});\r\nimport vSelect from \"vue-select\";\r\nVue.component(\"v-select\", vSelect);\r\n\r\n\r\nimport TumLum from '@/TumLum';\r\nimport fetchClient from '@/fetchClient';\r\n\r\n\r\nexport default {\r\n    props: [\"ds1\"],\r\n    components: {\r\n    },\r\n    mounted() {\r\n    },\r\n    data() {\r\n        return {\r\n            pri: \"Id\",\r\n            sel: {},\r\n            adding: false,\r\n            url: `/api/HocSinh4`,\r\n            items: [\r\n                { Id: 1, Ten: \"thuc 101\" },\r\n                { Id: 2, Ten: \"thuc 102\" },\r\n                { Id: 3, Ten: \"thuc 103\" },\r\n                { Id: 4, Ten: \"thuc 104\" },\r\n            ],\r\n            fields: [\r\n                { key: 'Id', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \"8%\" } },\r\n                //{ key: 'ClaimType', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \"80%\" } },\r\n                { key: 'TenHocSinh', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \"50%\" } },\r\n                { key: 'NamSinh', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \"20%\" } },\r\n                { key: 'LopHocId', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \"10%\" } },\r\n                { key: 'Cmd', sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \"12%\" } },\r\n            ]\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        myProvider() {\r\n            let vm = this;\r\n            let url = `${this.url}/GetAll`;\r\n            return fetchClient.get(url)\r\n                .then(res => {\r\n\r\n                    if (this.adding == true) {\r\n                        let r = {};\r\n                        r[this.pri] = 0;\r\n                        r[\"TenHocSinh\"] = \"thuc\";\r\n                        r[\"NamSinh\"] = new Date();\r\n                        r[\"LopHocId\"] = 1;\r\n                        res.data.list.unshift(r);\r\n                    }\r\n                    return res.data.list;\r\n                })\r\n        },\r\n        OnAdd() {\r\n            this.adding = true;\r\n            this.$refs.mytable.refresh();\r\n        },\r\n        doCancel(item) {\r\n            for (let key in item) {\r\n                if (item[key] != this.sel[key]) {\r\n                    item[key] = this.sel[key]\r\n                }\r\n            }\r\n        },\r\n        OnCancel(item) {\r\n            if (item[this.pri] == 0) {\r\n                let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\r\n                this.items.splice(index, 1);\r\n                this.adding = false;\r\n                this.$refs.mytable.refresh();\r\n            } else {\r\n                this.doCancel(item);\r\n                this.sel = {};\r\n            }\r\n        },\r\n        OnEdit(item) {\r\n            this.sel = JSON.parse(JSON.stringify(item));\r\n        },\r\n        OnDel(item) {\r\n            this.Del(item[this.pri]);\r\n        },\r\n        OnSave(item) {\r\n            this.$validator.validateAll().then((result) => {\r\n                if (!result) {\r\n                    this.toast(\"Không hợp lệ\");\r\n                    return;\r\n                }\r\n                let r = JSON.parse(JSON.stringify(item));\r\n                if (r[this.pri] == 0) {\r\n                    this.Add(r);\r\n                } else {\r\n                    this.Update(r);\r\n                }\r\n            });\r\n        },\r\n        toast(msg, variant = null) {\r\n            this.$bvToast.toast(msg, {\r\n                title: `Information`,\r\n                variant: variant,\r\n                solid: true,\r\n            });\r\n        },\r\n        async Add(r) {\r\n            return await fetchClient.post(`${this.url}/Add`, r)\r\n                .then(res => {\r\n                    this.toast(`${res.data.msg}`);\r\n                    this.adding = false;\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Update(r) {\r\n            return await fetchClient.post(`${this.url}/Update`, r)\r\n                .then(res => {\r\n                    alert(JSON.stringify(res));\r\n                    this.sel = {};\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async Del(id) {\r\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\r\n                .then(res => {\r\n                    this.$refs.mytable.refresh();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n        async getById(id) {\r\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\r\n                .then(res => {\r\n                    alert(JSON.stringify(res));\r\n\r\n                    //this.sel=res.data\r\n                    //alert(JSON.stringify(res));\r\n\r\n                    //{\"data\":{\"Id\":1003,\"TenHocSinh\":\"Võ Tòng\",\"NamSinh\":\"2023-02-26T00:00:00\",\"LopHocId\":1029},\"statu\r\n                    //this.sel = JSON.parse(JSON.stringify(item));\r\n\r\n                    // this.sel2 = res.data;\r\n                    // this.showModal();\r\n                })\r\n                .catch((err) => {\r\n                    TumLum.XuLyErr(err);\r\n                });\r\n        },\r\n\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HocSinhTblEditNoPaging.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HocSinhTblEditNoPaging.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HocSinhTblEditNoPaging.vue?vue&type=template&id=d95c5052&\"\nimport script from \"./HocSinhTblEditNoPaging.vue?vue&type=script&lang=js&\"\nexport * from \"./HocSinhTblEditNoPaging.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div>\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./HocSinhTblEditNoPaging.vue').default\\\"></raw-loader>\\r\\n        <h5>This is BTable Simple</h5>\\r\\n        <div>{{ sel }}</div>\\r\\n        <button @click=\\\"OnAdd\\\">Add</button>\\r\\n        <form @submit.stop.prevent=\\\"onSave\\\">\\r\\n            <b-table ref=\\\"mytable\\\" small :items=\\\"myProvider\\\" :fields=\\\"fields\\\">\\r\\n                <template v-slot:cell()=\\\"{ value, item, field: { key } }\\\">\\r\\n\\r\\n                    <template v-if=\\\"sel[pri] != item[pri]\\\">\\r\\n                        <template v-if=\\\"item[pri] != 0\\\">\\r\\n                            <template v-if=\\\"key == pri\\\">\\r\\n                                {{ value }}\\r\\n                            </template>\\r\\n                            <template v-if=\\\"key == 'TenHocSinh'\\\">\\r\\n                                {{ value }}\\r\\n                            </template>\\r\\n                            <template v-if=\\\"key == 'NamSinh'\\\">\\r\\n                                {{ value }}\\r\\n                            </template>\\r\\n                            <template v-if=\\\"key == 'LopHocId'\\\">\\r\\n                                {{ value }}\\r\\n                            </template>\\r\\n\\r\\n\\r\\n                        </template>\\r\\n                    </template>\\r\\n                    <template v-if=\\\"(sel[pri] == item[pri] || item[pri] == 0)\\\">\\r\\n                        <template v-if=\\\"key == pri\\\">\\r\\n                            <span>{{ value }}</span>\\r\\n                        </template>\\r\\n                        <template v-if=\\\"key == 'TenHocSinh'\\\">\\r\\n                            <b-form-input autocomplete=\\\"off\\\" v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\"\\r\\n                                placeholder=\\\"\\\" :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                            </b-form-input>\\r\\n                        </template>\\r\\n                        <template v-if=\\\"key == 'NamSinh'\\\">\\r\\n                            <b-form-input autocomplete=\\\"off\\\" v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\"\\r\\n                                placeholder=\\\"\\\" :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                            </b-form-input>\\r\\n                        </template>\\r\\n                        <template v-if=\\\"key == 'LopHocId'\\\">\\r\\n                            <b-form-input autocomplete=\\\"off\\\" v-model=\\\"item[key]\\\" :name=\\\"key\\\" v-validate=\\\"'required'\\\"\\r\\n                                placeholder=\\\"\\\" :class=\\\"{ 'ko-hop-le': errors.has(key) }\\\">\\r\\n                            </b-form-input>\\r\\n                        </template>\\r\\n                    </template>\\r\\n                </template>\\r\\n                <template #cell(cmd)=\\\"row\\\">\\r\\n                    <template v-if=\\\"row.item[pri] == 0\\\">\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnSave(row.item)\\\">\\r\\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" size=\\\"sm\\\" @click=\\\"OnCancel(row.item)\\\">\\r\\n                            <b-icon-file-x></b-icon-file-x>\\r\\n                        </b-button>\\r\\n                    </template>\\r\\n\\r\\n                    <template v-else>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnEdit(row.item)\\\">\\r\\n                            <b-icon-pencil-square></b-icon-pencil-square>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] != row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnDel(row.item)\\\">\\r\\n                            <b-icon-trash></b-icon-trash>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnSave(row.item)\\\">\\r\\n                            <b-icon-hand-thumbs-up></b-icon-hand-thumbs-up>\\r\\n                        </b-button>\\r\\n                        <b-button variant=\\\"outline\\\" class=\\\"mr-1\\\" v-if=\\\"sel[pri] == row.item[pri]\\\" size=\\\"sm\\\"\\r\\n                            @click=\\\"OnCancel(row.item)\\\">\\r\\n                            <b-icon-file-x></b-icon-file-x>\\r\\n                        </b-button>\\r\\n                    </template>\\r\\n                </template>\\r\\n            </b-table>\\r\\n        </form>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\n\\r\\nimport VeeValidate from \\\"vee-validate\\\";\\r\\nimport Vue from \\\"vue\\\";\\r\\nVue.use(VeeValidate, {\\r\\n    classes: true,\\r\\n    fieldsBagName: 'veeFields'\\r\\n});\\r\\nimport vSelect from \\\"vue-select\\\";\\r\\nVue.component(\\\"v-select\\\", vSelect);\\r\\n\\r\\n\\r\\nimport TumLum from '@/TumLum';\\r\\nimport fetchClient from '@/fetchClient';\\r\\n\\r\\n\\r\\nexport default {\\r\\n    props: [\\\"ds1\\\"],\\r\\n    components: {\\r\\n    },\\r\\n    mounted() {\\r\\n    },\\r\\n    data() {\\r\\n        return {\\r\\n            pri: \\\"Id\\\",\\r\\n            sel: {},\\r\\n            adding: false,\\r\\n            url: `/api/HocSinh4`,\\r\\n            items: [\\r\\n                { Id: 1, Ten: \\\"thuc 101\\\" },\\r\\n                { Id: 2, Ten: \\\"thuc 102\\\" },\\r\\n                { Id: 3, Ten: \\\"thuc 103\\\" },\\r\\n                { Id: 4, Ten: \\\"thuc 104\\\" },\\r\\n            ],\\r\\n            fields: [\\r\\n                { key: 'Id', sortable: true, thClass: 'text-center', tdClass: 'align-middle', thStyle: { width: \\\"8%\\\" } },\\r\\n                //{ key: 'ClaimType', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \\\"80%\\\" } },\\r\\n                { key: 'TenHocSinh', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \\\"50%\\\" } },\\r\\n                { key: 'NamSinh', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \\\"20%\\\" } },\\r\\n                { key: 'LopHocId', sortable: true, thClass: 'text-left', tdClass: 'align-middle', thStyle: { width: \\\"10%\\\" } },\\r\\n                { key: 'Cmd', sortable: true, thClass: 'text-center', tdClass: 'align-middle text-center', thStyle: { width: \\\"12%\\\" } },\\r\\n            ]\\r\\n        }\\r\\n    },\\r\\n    mounted() {\\r\\n    },\\r\\n    methods: {\\r\\n        myProvider() {\\r\\n            let vm = this;\\r\\n            let url = `${this.url}/GetAll`;\\r\\n            return fetchClient.get(url)\\r\\n                .then(res => {\\r\\n\\r\\n                    if (this.adding == true) {\\r\\n                        let r = {};\\r\\n                        r[this.pri] = 0;\\r\\n                        r[\\\"TenHocSinh\\\"] = \\\"thuc\\\";\\r\\n                        r[\\\"NamSinh\\\"] = new Date();\\r\\n                        r[\\\"LopHocId\\\"] = 1;\\r\\n                        res.data.list.unshift(r);\\r\\n                    }\\r\\n                    return res.data.list;\\r\\n                })\\r\\n        },\\r\\n        OnAdd() {\\r\\n            this.adding = true;\\r\\n            this.$refs.mytable.refresh();\\r\\n        },\\r\\n        doCancel(item) {\\r\\n            for (let key in item) {\\r\\n                if (item[key] != this.sel[key]) {\\r\\n                    item[key] = this.sel[key]\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        OnCancel(item) {\\r\\n            if (item[this.pri] == 0) {\\r\\n                let index = this.items.findIndex(x => x[this.pri] == item[this.pri]);\\r\\n                this.items.splice(index, 1);\\r\\n                this.adding = false;\\r\\n                this.$refs.mytable.refresh();\\r\\n            } else {\\r\\n                this.doCancel(item);\\r\\n                this.sel = {};\\r\\n            }\\r\\n        },\\r\\n        OnEdit(item) {\\r\\n            this.sel = JSON.parse(JSON.stringify(item));\\r\\n        },\\r\\n        OnDel(item) {\\r\\n            this.Del(item[this.pri]);\\r\\n        },\\r\\n        OnSave(item) {\\r\\n            this.$validator.validateAll().then((result) => {\\r\\n                if (!result) {\\r\\n                    this.toast(\\\"Không hợp lệ\\\");\\r\\n                    return;\\r\\n                }\\r\\n                let r = JSON.parse(JSON.stringify(item));\\r\\n                if (r[this.pri] == 0) {\\r\\n                    this.Add(r);\\r\\n                } else {\\r\\n                    this.Update(r);\\r\\n                }\\r\\n            });\\r\\n        },\\r\\n        toast(msg, variant = null) {\\r\\n            this.$bvToast.toast(msg, {\\r\\n                title: `Information`,\\r\\n                variant: variant,\\r\\n                solid: true,\\r\\n            });\\r\\n        },\\r\\n        async Add(r) {\\r\\n            return await fetchClient.post(`${this.url}/Add`, r)\\r\\n                .then(res => {\\r\\n                    this.toast(`${res.data.msg}`);\\r\\n                    this.adding = false;\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Update(r) {\\r\\n            return await fetchClient.post(`${this.url}/Update`, r)\\r\\n                .then(res => {\\r\\n                    alert(JSON.stringify(res));\\r\\n                    this.sel = {};\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async Del(id) {\\r\\n            return await fetchClient.get(`${this.url}/Delete?id=${id}`)\\r\\n                .then(res => {\\r\\n                    this.$refs.mytable.refresh();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n        async getById(id) {\\r\\n            return await fetchClient.get(`${this.url}/GetById?id=${id}`)\\r\\n                .then(res => {\\r\\n                    alert(JSON.stringify(res));\\r\\n\\r\\n                    //this.sel=res.data\\r\\n                    //alert(JSON.stringify(res));\\r\\n\\r\\n                    //{\\\"data\\\":{\\\"Id\\\":1003,\\\"TenHocSinh\\\":\\\"Võ Tòng\\\",\\\"NamSinh\\\":\\\"2023-02-26T00:00:00\\\",\\\"LopHocId\\\":1029},\\\"statu\\r\\n                    //this.sel = JSON.parse(JSON.stringify(item));\\r\\n\\r\\n                    // this.sel2 = res.data;\\r\\n                    // this.showModal();\\r\\n                })\\r\\n                .catch((err) => {\\r\\n                    TumLum.XuLyErr(err);\\r\\n                });\\r\\n        },\\r\\n\\r\\n\\r\\n\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n  \";","export default {\r\n    XuLyErr(err) {\r\n        let code = JSON.parse(JSON.stringify(err)).status;\r\n        if (code == 400) {\r\n            let msg = JSON.parse(JSON.stringify(err.response)).data.message;\r\n            alert(msg);\r\n        } else {\r\n            if (err.response) {\r\n                if (err.response.status == 401)\r\n                    alert(\"Chưa đăng nhập hoặc token hết hạn\");\r\n                else if (err.response.status == 403)\r\n                    alert(\"Bạn ko có quyền\");\r\n            } else if (err.request) {\r\n                alert(JSON.stringify(err.request));\r\n            } else if (err.message) {\r\n                alert(JSON.stringify(err.message));\r\n            }\r\n        }\r\n    }\r\n}\r\n  /*\r\nimport TumLum from '@/TumLum';\r\n*/","import axios from 'axios';\r\n\r\nconst fetchClient = () => {\r\n  const defaultOptions = {\r\n    baseURL: '',\r\n    method: 'get',\r\n    headers: {\r\n      //'Content-Type': 'application/json',\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n  };\r\n\r\n  // Create instance\r\n  let instance = axios.create(defaultOptions);\r\n\r\n  // Set the AUTH token for any request\r\n  instance.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem('token');\r\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\r\n    return config;\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport default fetchClient();"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","sel","on","OnAdd","$event","stopPropagation","preventDefault","onSave","apply","arguments","ref","myProvider","fields","scopedSlots","_u","key","fn","value","item","field","pri","_e","directives","name","rawName","expression","class","errors","has","model","callback","$$v","$set","row","staticClass","OnSave","OnCancel","OnEdit","OnDel","staticRenderFns","Vue","classes","fieldsBagName","props","components","mounted","data","adding","url","items","Id","Ten","sortable","thClass","tdClass","thStyle","width","methods","then","res","r","doCancel","toast","title","variant","solid","catch","err","TumLum","alert","component","XuLyErr","code","JSON","parse","stringify","status","msg","response","message","request","fetchClient","defaultOptions","baseURL","method","headers","instance","axios","interceptors","use","config","token","localStorage","getItem","Authorization"],"sourceRoot":""}